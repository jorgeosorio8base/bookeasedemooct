"""Apply transformations to file with image type"""
directive @resizeImage(crop: ResizeImageDirectiveCropOptions, flip: ResizeImageDirectiveFlipOptions, progressive: Boolean, resize: ResizeImageDirectiveResizeOptions, rotate: Int) on FIELD

enum AggregationFunctionType {
  ANY_VALUE
  AVG
  COUNT
  GROUP_CONCAT
  MAX
  MIN
  STDDEV_POP
  STDDEV_SAMP
  SUM
  VAR_POP
  VAR_SAMP
}

type ApiToken {
  _description: String
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  id: ID
  name: String
  roles(after: String, before: String, filter: RoleFilter, first: Int, groupBy: RoleGroupBy, last: Int, orderBy: [RoleOrderBy], skip: Int, sort: [RoleSort!]): RoleListResponse
  updatedAt: DateTime
}

"""ApiTokens create input"""
input ApiTokenCreateInput {
  name: String!
  roles: ApiTokensRolesRelationInput
}

"""ApiTokens delete input"""
input ApiTokenDeleteInput {
  force: Boolean
  id: ID
}

input ApiTokenFilter {
  AND: [ApiTokenFilter!]
  OR: [ApiTokenFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  id: IDPredicate
  name: StringPredicate
  roles: RoleRelationFilter
  token: StringPredicate
  updatedAt: DateTimePredicate
}

input ApiTokenGroupBy {
  first: Int
  having: Having
  last: Int
  query: ApiTokenGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input ApiTokenGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  id: [GroupByField!]
  name: [GroupByField!]
  roles: RoleGroupByQuery
  updatedAt: [GroupByField!]
}

input ApiTokenKeyFilter {
  id: ID
  name: String
}

"""ApiTokenListResponse output"""
type ApiTokenListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [ApiToken!]!
}

"""ApiTokenManyResponse output"""
type ApiTokenManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [ApiToken!]!
}

"""No longer supported. Use `sort` instead."""
enum ApiTokenOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  token_ASC
  token_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""ApiTokens subscription payload"""
type ApiTokenPayload {
  mutation: MutationType!
  node: ApiToken
  previousValues: ApiToken
  updatedFields: [String]
}

input ApiTokenRelationFilter {
  every: ApiTokenFilter
  none: ApiTokenFilter
  some: ApiTokenFilter
}

"""API Token Response"""
type ApiTokenResponse {
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  id: ID
  name: String
  roles(after: String, before: String, filter: RoleFilter, first: Int, groupBy: RoleGroupBy, last: Int, orderBy: [RoleOrderBy], skip: Int, sort: [RoleSort!]): RoleListResponse
  token: String!
  updatedAt: DateTime
}

input ApiTokenSort {
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

"""ApiTokens subscription filter"""
input ApiTokenSubscriptionFilter {
  mutation_in: [MutationType]
  node: ApiTokenFilter
  updatedFields: UpdatedFieldsFilter
}

"""ApiTokens update input"""
input ApiTokenUpdateByFilterInput {
  name: [UpdateByFilterStringInput]
  token: [UpdateByFilterStringInput]
}

"""ApiTokens update input"""
input ApiTokenUpdateInput {
  id: ID
  name: String
  roles: ApiTokensRolesUpdateRelationInput
}

input ApiToken_PermissionFilter {
  AND: [ApiToken_PermissionFilter!]
  OR: [ApiToken_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  id: IDPredicate
  name: StringPredicate
  roles: Role_PermissionRelationFilter
  token: StringPredicate
  updatedAt: DateTimePredicate
}

input ApiToken_PermissionRelationFilter {
  every: ApiToken_PermissionFilter
  none: ApiToken_PermissionFilter
  some: ApiToken_PermissionFilter
}

"""ApiTokens relation input"""
input ApiTokensRolesRelationInput {
  connect: [RoleKeyFilter!]
  create: [ApiTokens_RoleCreateInput]
}

"""ApiTokens relation input"""
input ApiTokensRolesUpdateRelationInput {
  connect: [RoleKeyFilter!]
  create: [ApiTokens_RoleCreateInput]
  disconnect: [RoleKeyFilter!]
  reconnect: [RoleKeyFilter!]
  update: [ApiTokens_RoleUpdateInput]
}

"""Roles create input from apiTokens"""
input ApiTokens_RoleCreateInput {
  apiTokens: RolesApiTokensRelationInput
  authenticationProfiles: RolesAuthenticationProfilesRelationInput
  description: String
  name: String!
  permissions: PermissionsInput
  users: RolesUsersRelationInput
}

"""Roles update input from apiTokens"""
input ApiTokens_RoleUpdateInput {
  data: RoleUpdateInput!
  filter: RoleKeyFilter
}

"""Application"""
type Application {
  appType: String!
  createdAt: DateTime!
  description: String
  displayName: String
  id: ID!
  name: String!
  status: ApplicationStatusEnum!
}

"""ApplicationDeleteMutationInput"""
input ApplicationDeleteMutationInput {
  force: Boolean
  id: String!
}

"""Application install input"""
input ApplicationInstallInput {
  appType: String!
  description: String
  displayName: String
  name: String!
  status: ApplicationStatusEnum = INACTIVE
}

"""ApplicationListResponse output"""
type ApplicationListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [Application!]!
}

"""Application Status Enum"""
enum ApplicationStatusEnum {
  ACTIVE
  INACTIVE
}

"""Application update input"""
input ApplicationUpdateInput {
  description: String
  displayName: String
  id: String!
  name: String
  status: ApplicationStatusEnum
}

"""Async Session"""
type AsyncSession {
  sessionId: String!
}

type AsyncSessionStatusResponse {
  message: String
  status: String!
}

"""Auth response"""
type Auth {
  accessToken: String
  accessTokenExpiresAt: Int
  idToken: String
  idTokenExpiresAt: Int
  refreshToken: String
}

type AuthenticationProfile {
  _description: String
  attributes: AuthenticationProfileAttributes
  audiences: [String]
  clientId: String
  createdAt: DateTime
  createdBy: User
  databaseName: String
  deletedAt: Int
  domain: String
  id: ID
  managementDomain: String
  name: String
  roles(after: String, before: String, filter: RoleFilter, first: Int, groupBy: RoleGroupBy, last: Int, orderBy: [RoleOrderBy], skip: Int, sort: [RoleSort!]): RoleListResponse
  secret: String
  selfSignUpEmailDomains: [String]
  selfSignUpEnabled: Boolean
  type: String
  updatedAt: DateTime
}

"""Authentication Profile Attributes"""
union AuthenticationProfileAttributes = CognitoAuthProfileAttributes

"""Authentication profile connection options"""
type AuthenticationProfileConnectionOptions {
  facebook: FacebookOptions
  github: GithubOptions
  google: GoogleOptions
}

"""Authentication profile connection options input"""
input AuthenticationProfileConnectionsOptionsInput {
  facebook: FacebookOptionsInput
  github: GithubOptionsInput
  google: GoogleOptionsInput
}

"""AuthenticationProfiles create input"""
input AuthenticationProfileCreateInput {
  audiences: [String]
  clientId: String
  databaseName: String
  domain: String
  managementDomain: String
  name: String!
  roles: AuthenticationProfilesRolesRelationInput
  secret: String
  selfSignUpEmailDomains: [String]
  selfSignUpEnabled: Boolean = false
  type: String = "8BASE"
}

"""AuthenticationProfiles create many input"""
input AuthenticationProfileCreateManyInput {
  audiences: [String]
  clientId: String
  databaseName: String
  domain: String
  managementDomain: String
  name: String!
  roles: AuthenticationProfilesRolesManyRelationInput
  secret: String
  selfSignUpEmailDomains: [String]
  selfSignUpEnabled: Boolean = false
  type: String = "8BASE"
}

"""AuthenticationProfiles delete input"""
input AuthenticationProfileDeleteInput {
  force: Boolean
  id: ID
}

input AuthenticationProfileFilter {
  AND: [AuthenticationProfileFilter!]
  OR: [AuthenticationProfileFilter!]
  _fullText: String
  clientId: StringPredicate
  createdAt: DateTimePredicate
  createdBy: UserFilter
  databaseName: StringPredicate
  deletedAt: IntPredicate
  domain: StringPredicate
  id: IDPredicate
  managementDomain: StringPredicate
  name: StringPredicate
  roles: RoleRelationFilter
  secret: StringPredicate
  selfSignUpEnabled: BoolPredicate
  type: StringPredicate
  updatedAt: DateTimePredicate
}

input AuthenticationProfileGroupBy {
  first: Int
  having: Having
  last: Int
  query: AuthenticationProfileGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input AuthenticationProfileGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  audiences: [GroupByField!]
  clientId: [GroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  databaseName: [GroupByField!]
  domain: [GroupByField!]
  id: [GroupByField!]
  managementDomain: [GroupByField!]
  name: [GroupByField!]
  roles: RoleGroupByQuery
  secret: [GroupByField!]
  selfSignUpEmailDomains: [GroupByField!]
  selfSignUpEnabled: [GroupByField!]
  type: [GroupByField!]
  updatedAt: [GroupByField!]
}

input AuthenticationProfileKeyFilter {
  id: ID
  name: String
}

"""AuthenticationProfileListResponse output"""
type AuthenticationProfileListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [AuthenticationProfile!]!
}

"""AuthenticationProfileManyResponse output"""
type AuthenticationProfileManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [AuthenticationProfile!]!
}

"""No longer supported. Use `sort` instead."""
enum AuthenticationProfileOrderBy {
  clientId_ASC
  clientId_DESC
  createdAt_ASC
  createdAt_DESC
  databaseName_ASC
  databaseName_DESC
  deletedAt_ASC
  deletedAt_DESC
  domain_ASC
  domain_DESC
  id_ASC
  id_DESC
  managementDomain_ASC
  managementDomain_DESC
  name_ASC
  name_DESC
  secret_ASC
  secret_DESC
  selfSignUpEnabled_ASC
  selfSignUpEnabled_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""AuthenticationProfiles subscription payload"""
type AuthenticationProfilePayload {
  mutation: MutationType!
  node: AuthenticationProfile
  previousValues: AuthenticationProfile
  updatedFields: [String]
}

input AuthenticationProfileRelationFilter {
  every: AuthenticationProfileFilter
  none: AuthenticationProfileFilter
  some: AuthenticationProfileFilter
}

input AuthenticationProfileSort {
  clientId: SortOrder
  createdAt: SortOrder
  createdBy: UserSort
  databaseName: SortOrder
  deletedAt: SortOrder
  domain: SortOrder
  id: SortOrder
  managementDomain: SortOrder
  name: SortOrder
  secret: SortOrder
  selfSignUpEnabled: SortOrder
  type: SortOrder
  updatedAt: SortOrder
}

"""AuthenticationProfiles subscription filter"""
input AuthenticationProfileSubscriptionFilter {
  mutation_in: [MutationType]
  node: AuthenticationProfileFilter
  updatedFields: UpdatedFieldsFilter
}

"""AuthenticationProfiles update input"""
input AuthenticationProfileUpdateByFilterInput {
  audiences: [UpdateByFilterListStringInput]
  clientId: [UpdateByFilterStringInput]
  databaseName: [UpdateByFilterStringInput]
  domain: [UpdateByFilterStringInput]
  managementDomain: [UpdateByFilterStringInput]
  name: [UpdateByFilterStringInput]
  secret: [UpdateByFilterStringInput]
  selfSignUpEmailDomains: [UpdateByFilterListStringInput]
  selfSignUpEnabled: [UpdateByFilterBooleanSwitchInput]
  type: [UpdateByFilterStringInput]
}

"""AuthenticationProfiles update input"""
input AuthenticationProfileUpdateInput {
  audiences: [String]
  clientId: String
  databaseName: String
  domain: String
  id: ID
  managementDomain: String
  name: String
  roles: AuthenticationProfilesRolesUpdateRelationInput
  secret: String
  selfSignUpEmailDomains: [String]
  selfSignUpEnabled: Boolean
  type: String
}

input AuthenticationProfile_PermissionFilter {
  AND: [AuthenticationProfile_PermissionFilter!]
  OR: [AuthenticationProfile_PermissionFilter!]
  _fullText: String
  clientId: StringPredicate
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  databaseName: StringPredicate
  deletedAt: IntPredicate
  domain: StringPredicate
  id: IDPredicate
  managementDomain: StringPredicate
  name: StringPredicate
  roles: Role_PermissionRelationFilter
  secret: StringPredicate
  selfSignUpEnabled: BoolPredicate
  type: StringPredicate
  updatedAt: DateTimePredicate
}

input AuthenticationProfile_PermissionRelationFilter {
  every: AuthenticationProfile_PermissionFilter
  none: AuthenticationProfile_PermissionFilter
  some: AuthenticationProfile_PermissionFilter
}

"""AuthenticationProfiles relation input"""
input AuthenticationProfilesRolesManyRelationInput {
  connect: [RoleKeyFilter!]
}

"""AuthenticationProfiles relation input"""
input AuthenticationProfilesRolesRelationInput {
  connect: [RoleKeyFilter!]
  create: [AuthenticationProfiles_RoleCreateInput]
}

"""AuthenticationProfiles relation input"""
input AuthenticationProfilesRolesUpdateRelationInput {
  connect: [RoleKeyFilter!]
  create: [AuthenticationProfiles_RoleCreateInput]
  disconnect: [RoleKeyFilter!]
  reconnect: [RoleKeyFilter!]
  update: [AuthenticationProfiles_RoleUpdateInput]
}

"""Roles create input from authenticationProfiles"""
input AuthenticationProfiles_RoleCreateInput {
  apiTokens: RolesApiTokensRelationInput
  authenticationProfiles: RolesAuthenticationProfilesRelationInput
  description: String
  name: String!
  permissions: PermissionsInput
  users: RolesUsersRelationInput
}

"""Roles update input from authenticationProfiles"""
input AuthenticationProfiles_RoleUpdateInput {
  data: RoleUpdateInput!
  filter: RoleKeyFilter
}

type AuthenticationSetting {
  _description: String
  allowedCallbacks: [String]
  allowedLogouts: [String]
  allowedWebOrigins: [String]
  connections: AuthenticationProfileConnectionOptions
  createdAt: DateTime
  createdBy: User
  updatedAt: DateTime
}

input AuthenticationSettingFilter {
  AND: [AuthenticationSettingFilter!]
  OR: [AuthenticationSettingFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  updatedAt: DateTimePredicate
}

"""AuthenticationSettings subscription payload"""
type AuthenticationSettingPayload {
  mutation: MutationType!
  node: AuthenticationSetting
  previousValues: AuthenticationSetting
  updatedFields: [String]
}

"""AuthenticationSettings subscription filter"""
input AuthenticationSettingSubscriptionFilter {
  mutation_in: [MutationType]
  node: AuthenticationSettingFilter
  updatedFields: UpdatedFieldsFilter
}

"""AuthenticationSettings update input"""
input AuthenticationSettingUpdateInput {
  allowedCallbacks: [String]
  allowedLogouts: [String]
  allowedWebOrigins: [String]
  connections: AuthenticationProfileConnectionsOptionsInput
}

"""Users create input from avatar"""
input Avatar_UserCreateInput {
  LibraryStaff: UsersLibraryStaffRelationInput!
  Notifications: UsersNotificationsRelationInput!
  Patrons: UsersPatronsRelationInput!
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""Users update input from avatar"""
input Avatar_UserUpdateInput {
  data: UserUpdateInput!
  filter: UserKeyFilter
}

type AwsSignInfoResponse {
  fields: JSON!
  path: String!
  url: String!
}

"""The `BigInt` scalar type represents whole numeric values."""
scalar BigInt

input BigIntPredicateHaving {
  AND: [BigIntPredicateHaving!]
  OR: [BigIntPredicateHaving!]
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: BigInt
  lte: BigInt
  not_equals: BigInt
  not_in: [BigInt!]
}

type BillingCurrentPlanResponse {
  customerId: String
  displayName: String
  features: [BillingPlanFeature]
  id: ID
  limitMetrics: [BillingPlanLimitMetrics]
  name: String
  nextPlan: BillingNextPlanResponse
  paymentDate: DateTime
  paymentDetails: String
  pdf: String
  price: Int
  status: WorkspaceStatus
  subscriptionId: String
  trialEnd: DateTime
}

enum BillingDetailsOrigin {
  member
  organization
  workspace
}

type BillingDetailsResponse {
  brand: String
  expMonth: Int
  expYear: Int
  last4: String
  origin: BillingDetailsOrigin!
}

type BillingInvoiceItem {
  amountDue: Float
  amountPaid: Float
  amountRemaining: Float
  description: String
  endingBalance: Float
  id: ID!
  invoicePdf: String
  number: String
  organization: BillingInvoiceItemOrganizationInfo
  paid: Boolean
  periodEnd: DateTime
  periodStart: DateTime
  plan: BillingInvoiceItemPlanInfo
  project: BillingInvoiceItemProjectInfo
  status: String
  total: Float
}

type BillingInvoiceItemOrganizationInfo {
  id: ID
  name: String
}

type BillingInvoiceItemPlanInfo {
  displayName: String
  id: ID
  name: String
}

type BillingInvoiceItemProjectInfo {
  id: ID
  name: String
}

enum BillingInvoicesListFilterType {
  CUSTOMER
  PROJECT
}

"""BillingInvoicesListResponse output"""
type BillingInvoicesListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [BillingInvoiceItem!]!
}

type BillingLimitMetricItem {
  description: String
  displayName: String
  name: String
  showPriority: Int
  tooltip: String
  unit: String
}

type BillingMetricOverageItem {
  value: Float
  warning: String
}

type BillingMetricUsageItem {
  limitMetric: BillingLimitMetricItem
  overage: BillingMetricOverageItem
  value: Float
}

type BillingMetricUsageQuotaItem {
  limitMetric: BillingLimitMetricItem
  value: Float
}

"""BillingMetricUsageQuotasListResponse output"""
type BillingMetricUsageQuotasListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [BillingMetricUsageQuotaItem!]!
}

input BillingMetricUsagesListFilter {
  entryDate: DateTimePredicate!
}

"""BillingMetricUsagesListResponse output"""
type BillingMetricUsagesListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [BillingMetricUsageItem!]!
}

type BillingNextPlanResponse {
  displayName: String
  id: ID
  name: String
  pdf: String
  price: Int
}

type BillingPlanBaseInfo {
  capacity: String
  description: String
  displayName: String
  featuresTitle: String
  id: ID
  isCustom: Boolean
  isLegacy: Boolean
  limitMetrics: [BillingPlanLimitMetricItem]
  name: String
  pdf: String
  price: Int
  status: String
}

type BillingPlanFeature {
  displayName: String
  isActive: Boolean
  name: String
}

type BillingPlanLimitMetricItem {
  displayName: String
  hardLimit: Float
  name: String
  overagePrice: Int
  softLimit: Float
}

type BillingPlanLimitMetrics {
  hardLimit: String
  id: String
  name: String
  overagePrice: String
  softLimit: String
}

"""BillingPlanUpdateMutationInput"""
input BillingPlanUpdateMutationInput {
  planId: ID!
  projectID: ID!
}

type Book {
  Holds: Hold
  Loans: Loan
  Recommendations: Recommendation
  Reviews: Review
  _description: String
  author: String
  availability_status: String
  createdAt: DateTime
  deletedAt: Int
  genre: String
  id: ID
  isbn: String
  publication_date: DateTime
  title: String
  updatedAt: DateTime
}

"""Books create input"""
input BookCreateInput {
  Holds: BooksHoldsRelationInput
  Loans: BooksLoansRelationInput
  Recommendations: BooksRecommendationsRelationInput
  Reviews: BooksReviewsRelationInput
  author: String
  availability_status: String
  genre: String
  isbn: String
  publication_date: DateTime
  title: String
}

"""Books create many input"""
input BookCreateManyInput {
  Holds: BooksHoldsManyRelationInput!
  Loans: BooksLoansManyRelationInput!
  Recommendations: BooksRecommendationsManyRelationInput!
  Reviews: BooksReviewsManyRelationInput!
  author: String
  availability_status: String
  genre: String
  isbn: String
  publication_date: DateTime
  title: String
}

"""Books delete input"""
input BookDeleteInput {
  force: Boolean
  id: ID
}

"""BookFieldsPermissions create input"""
input BookFieldsPermissions {
  author: Boolean
  availability_status: Boolean
  createdAt: Boolean
  genre: Boolean
  isbn: Boolean
  publication_date: Boolean
  title: Boolean
  updatedAt: Boolean
}

input BookFilter {
  AND: [BookFilter!]
  Holds: HoldFilter
  Loans: LoanFilter
  OR: [BookFilter!]
  Recommendations: RecommendationFilter
  Reviews: ReviewFilter
  _fullText: String
  author: StringPredicate
  availability_status: StringPredicate
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  genre: StringPredicate
  id: IDPredicate
  isbn: StringPredicate
  publication_date: DateTimePredicate
  title: StringPredicate
  updatedAt: DateTimePredicate
}

input BookGroupBy {
  first: Int
  having: Having
  last: Int
  query: BookGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input BookGroupByQuery {
  Holds: HoldGroupByQuery
  Loans: LoanGroupByQuery
  Recommendations: RecommendationGroupByQuery
  Reviews: ReviewGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  author: [GroupByField!]
  availability_status: [GroupByField!]
  createdAt: [GroupByField!]
  genre: [GroupByField!]
  id: [GroupByField!]
  isbn: [GroupByField!]
  publication_date: [GroupByField!]
  title: [GroupByField!]
  updatedAt: [GroupByField!]
}

input BookKeyFilter {
  id: ID
  isbn: String
}

"""BookListResponse output"""
type BookListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Book!]!
}

"""BookManyResponse output"""
type BookManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [Book!]!
}

"""No longer supported. Use `sort` instead."""
enum BookOrderBy {
  author_ASC
  author_DESC
  availability_status_ASC
  availability_status_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  genre_ASC
  genre_DESC
  id_ASC
  id_DESC
  isbn_ASC
  isbn_DESC
  publication_date_ASC
  publication_date_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""Books subscription payload"""
type BookPayload {
  mutation: MutationType!
  node: Book
  previousValues: Book
  updatedFields: [String]
}

input BookSort {
  Holds: HoldSort
  Loans: LoanSort
  Recommendations: RecommendationSort
  Reviews: ReviewSort
  author: SortOrder
  availability_status: SortOrder
  createdAt: SortOrder
  deletedAt: SortOrder
  genre: SortOrder
  id: SortOrder
  isbn: SortOrder
  publication_date: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

"""Books subscription filter"""
input BookSubscriptionFilter {
  mutation_in: [MutationType]
  node: BookFilter
  updatedFields: UpdatedFieldsFilter
}

"""Books update input"""
input BookUpdateByFilterInput {
  author: [UpdateByFilterStringInput]
  availability_status: [UpdateByFilterStringInput]
  genre: [UpdateByFilterStringInput]
  isbn: [UpdateByFilterStringInput]
  title: [UpdateByFilterStringInput]
}

"""Books update input"""
input BookUpdateInput {
  Holds: BooksHoldsUpdateRelationInput
  Loans: BooksLoansUpdateRelationInput
  Recommendations: BooksRecommendationsUpdateRelationInput
  Reviews: BooksReviewsUpdateRelationInput
  author: String
  availability_status: String
  genre: String
  id: ID
  isbn: String
  publication_date: DateTime
  title: String
}

input Book_PermissionFilter {
  AND: [Book_PermissionFilter!]
  Holds: Hold_PermissionFilter
  Loans: Loan_PermissionFilter
  OR: [Book_PermissionFilter!]
  Recommendations: Recommendation_PermissionFilter
  Reviews: Review_PermissionFilter
  _fullText: String
  author: StringPredicate
  availability_status: StringPredicate
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  genre: StringPredicate
  id: IDPredicate
  isbn: StringPredicate
  publication_date: DateTimePredicate
  title: StringPredicate
  updatedAt: DateTimePredicate
}

"""Holds create input from book_id"""
input Book_id_HoldCreateInput {
  book_id: HoldsBook_idRelationInput
  patron_id: HoldsPatron_idRelationInput
  position_in_queue: Int
}

"""Holds update input from book_id"""
input Book_id_HoldUpdateInput {
  book_id: HoldsBook_idUpdateRelationInput
  patron_id: HoldsPatron_idUpdateRelationInput
  position_in_queue: Int
}

"""Loans create input from book_id"""
input Book_id_LoanCreateInput {
  book_id: LoansBook_idRelationInput
  due_date: DateTime
  patron_id: LoansPatron_idRelationInput
  status: String
}

"""Loans update input from book_id"""
input Book_id_LoanUpdateInput {
  book_id: LoansBook_idUpdateRelationInput
  due_date: DateTime
  patron_id: LoansPatron_idUpdateRelationInput
  status: String
}

"""Recommendations create input from book_id"""
input Book_id_RecommendationCreateInput {
  book_id: RecommendationsBook_idRelationInput
  patron_id: RecommendationsPatron_idRelationInput
  reason: String!
}

"""Recommendations update input from book_id"""
input Book_id_RecommendationUpdateInput {
  book_id: RecommendationsBook_idUpdateRelationInput
  patron_id: RecommendationsPatron_idUpdateRelationInput
  reason: String
}

"""Reviews create input from book_id"""
input Book_id_ReviewCreateInput {
  book_id: ReviewsBook_idRelationInput
  comment: String!
  patron_id: ReviewsPatron_idRelationInput
  rating: Int
}

"""Reviews update input from book_id"""
input Book_id_ReviewUpdateInput {
  book_id: ReviewsBook_idUpdateRelationInput
  comment: String
  patron_id: ReviewsPatron_idUpdateRelationInput
  rating: Int
}

"""Books relation input"""
input BooksHoldsManyRelationInput {
  connect: HoldKeyFilter
}

"""Books relation input"""
input BooksHoldsRelationInput {
  connect: HoldKeyFilter
  create: Book_id_HoldCreateInput
}

"""Books relation input"""
input BooksHoldsUpdateRelationInput {
  connect: HoldKeyFilter
  create: Book_id_HoldCreateInput
  disconnect: HoldKeyFilter
  reconnect: HoldKeyFilter
  update: Book_id_HoldUpdateInput
}

"""Books relation input"""
input BooksLoansManyRelationInput {
  connect: LoanKeyFilter
}

"""Books relation input"""
input BooksLoansRelationInput {
  connect: LoanKeyFilter
  create: Book_id_LoanCreateInput
}

"""Books relation input"""
input BooksLoansUpdateRelationInput {
  connect: LoanKeyFilter
  create: Book_id_LoanCreateInput
  disconnect: LoanKeyFilter
  reconnect: LoanKeyFilter
  update: Book_id_LoanUpdateInput
}

"""Books relation input"""
input BooksRecommendationsManyRelationInput {
  connect: RecommendationKeyFilter
}

"""Books relation input"""
input BooksRecommendationsRelationInput {
  connect: RecommendationKeyFilter
  create: Book_id_RecommendationCreateInput
}

"""Books relation input"""
input BooksRecommendationsUpdateRelationInput {
  connect: RecommendationKeyFilter
  create: Book_id_RecommendationCreateInput
  disconnect: RecommendationKeyFilter
  reconnect: RecommendationKeyFilter
  update: Book_id_RecommendationUpdateInput
}

"""Books relation input"""
input BooksReviewsManyRelationInput {
  connect: ReviewKeyFilter
}

"""Books relation input"""
input BooksReviewsRelationInput {
  connect: ReviewKeyFilter
  create: Book_id_ReviewCreateInput
}

"""Books relation input"""
input BooksReviewsUpdateRelationInput {
  connect: ReviewKeyFilter
  create: Book_id_ReviewCreateInput
  disconnect: ReviewKeyFilter
  reconnect: ReviewKeyFilter
  update: Book_id_ReviewUpdateInput
}

input BoolPredicate {
  equals: Boolean
  is_empty: Boolean
  is_not_empty: Boolean
  not_equals: Boolean
}

input BoolPredicateHaving {
  AND: [BoolPredicateHaving!]
  OR: [BoolPredicateHaving!]
  equals: Boolean
  is_empty: Boolean
  is_not_empty: Boolean
  not_equals: Boolean
}

"""ChangePasswordInput"""
input ChangePasswordInput {
  authProfileId: ID!
  email: String!
  newPassword: String!
  oldPassword: String!
  refreshToken: String!
}

"""Authentication Profile Attributes for Cognito"""
type CognitoAuthProfileAttributes {
  clientAuthDomain: String
}

"""Computed field mode"""
enum ComputedFieldMode {
  STORED
  VIRTUAL
}

"""Custom Table Field Type"""
type CustomTableField {
  computedMode: ComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: FieldType
  fieldTypeAttributes: FieldTypeAttributes
  isList: Boolean!
  isRequired: Boolean!
  isUnique: Boolean
  name: String
}

"""
A date string, such as `2007-12-25`, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""Date Field Attributes"""
type DateFieldTypeAttributes {
  format: String!
}

enum DatePartFunctionType {
  DATE
  DAY
  DAY_NAME
  DAY_OF_MONTH
  DAY_OF_WEEK
  DAY_OF_YEAR
  HOUR
  LAST_DAY
  MICROSECOND
  MINUTE
  MONTH
  MONTH_NAME
  QUARTER
  SECOND
  TIME
  WEEK
  WEEK_DAY
  WEEK_OF_YEAR
  YEAR
  YEAR_WEEK
}

input DatePredicateHaving {
  AND: [DatePredicateHaving!]
  OR: [DatePredicateHaving!]
  equals: Date
  gt: Date
  gte: Date
  in: [Date!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: Date
  lte: Date
  not_equals: Date
  not_in: [Date!]
}

input DateRelativePredicateType {
  op: RelativePredicateOpEnum
  unit: RelativePredicateUnitEnum
  value: String!
}

input DateRelativePredicates {
  gt: DateRelativePredicateType
  gte: DateRelativePredicateType
  lt: DateRelativePredicateType
  lte: DateRelativePredicateType
}

"""
A date-time string at UTC, such as `2007-12-25T16:15:30Z`, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimePredicate {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: DateTime
  lte: DateTime
  not_equals: DateTime
  not_in: [DateTime!]
  relative: DateRelativePredicates
}

input DateTimePredicateHaving {
  AND: [DateTimePredicateHaving!]
  OR: [DateTimePredicateHaving!]
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: DateTime
  lte: DateTime
  not_equals: DateTime
  not_in: [DateTime!]
}

"""Date Type Format Enum"""
enum DateTypeFormatEnum {
  DATE
  DATETIME
}

"""DeployDataResponse"""
type DeployDataResponse {
  buildName: String!
  uploadBuildUrl: String!
  uploadMetaDataUrl: String!
}

enum DeployModeEnum {
  FULL
  FUNCTIONS
  MIGRATIONS
  ONLY_PLUGINS
  ONLY_PROJECT
}

"""DeployOptions"""
input DeployOptions {
  extensionNames: [String]
  mode: DeployModeEnum = ONLY_PROJECT
  nodeVersion: String
  pluginNames: [String]
}

enum DeployStatusEnum {
  compiling
  complete_error
  complete_success
  deploying
  initialize
  preparing
}

"""DeployStatusResult"""
type DeployStatusResult {
  message: String
  status: DeployStatusEnum!
}

"""DeployingBuildInput"""
input DeployingBuildInput {
  buildName: String!
  options: DeployOptions
}

type DeploymentABItemResponse {
  dateDeploy: DateTime
  statusDeploy: String
  urlDeploy: String
  userDeploy: SystemMemberAccountInfo
  versionDeploy: String
  versionFrontEnd: String
}

type DigitalResource {
  _description: String
  author: String
  availability_status: String
  createdAt: DateTime
  deletedAt: Int
  format: String
  id: ID
  publication_date: DateTime
  title: String
  updatedAt: DateTime
}

"""DigitalResources create input"""
input DigitalResourceCreateInput {
  author: String
  availability_status: String
  format: String
  publication_date: DateTime
  title: String
}

"""DigitalResources create many input"""
input DigitalResourceCreateManyInput {
  author: String
  availability_status: String
  format: String
  publication_date: DateTime
  title: String
}

"""DigitalResources delete input"""
input DigitalResourceDeleteInput {
  force: Boolean
  id: ID
}

"""DigitalResourceFieldsPermissions create input"""
input DigitalResourceFieldsPermissions {
  author: Boolean
  availability_status: Boolean
  createdAt: Boolean
  format: Boolean
  publication_date: Boolean
  title: Boolean
  updatedAt: Boolean
}

input DigitalResourceFilter {
  AND: [DigitalResourceFilter!]
  OR: [DigitalResourceFilter!]
  _fullText: String
  author: StringPredicate
  availability_status: StringPredicate
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  format: StringPredicate
  id: IDPredicate
  publication_date: DateTimePredicate
  title: StringPredicate
  updatedAt: DateTimePredicate
}

input DigitalResourceGroupBy {
  first: Int
  having: Having
  last: Int
  query: DigitalResourceGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input DigitalResourceGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  author: [GroupByField!]
  availability_status: [GroupByField!]
  createdAt: [GroupByField!]
  format: [GroupByField!]
  id: [GroupByField!]
  publication_date: [GroupByField!]
  title: [GroupByField!]
  updatedAt: [GroupByField!]
}

input DigitalResourceKeyFilter {
  id: ID
}

"""DigitalResourceListResponse output"""
type DigitalResourceListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [DigitalResource!]!
}

"""DigitalResourceManyResponse output"""
type DigitalResourceManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [DigitalResource!]!
}

"""No longer supported. Use `sort` instead."""
enum DigitalResourceOrderBy {
  author_ASC
  author_DESC
  availability_status_ASC
  availability_status_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  format_ASC
  format_DESC
  id_ASC
  id_DESC
  publication_date_ASC
  publication_date_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""DigitalResources subscription payload"""
type DigitalResourcePayload {
  mutation: MutationType!
  node: DigitalResource
  previousValues: DigitalResource
  updatedFields: [String]
}

input DigitalResourceSort {
  author: SortOrder
  availability_status: SortOrder
  createdAt: SortOrder
  deletedAt: SortOrder
  format: SortOrder
  id: SortOrder
  publication_date: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

"""DigitalResources subscription filter"""
input DigitalResourceSubscriptionFilter {
  mutation_in: [MutationType]
  node: DigitalResourceFilter
  updatedFields: UpdatedFieldsFilter
}

"""DigitalResources update input"""
input DigitalResourceUpdateByFilterInput {
  author: [UpdateByFilterStringInput]
  availability_status: [UpdateByFilterStringInput]
  format: [UpdateByFilterStringInput]
  title: [UpdateByFilterStringInput]
}

"""DigitalResources update input"""
input DigitalResourceUpdateInput {
  author: String
  availability_status: String
  format: String
  id: ID
  publication_date: DateTime
  title: String
}

input DigitalResource_PermissionFilter {
  AND: [DigitalResource_PermissionFilter!]
  OR: [DigitalResource_PermissionFilter!]
  _fullText: String
  author: StringPredicate
  availability_status: StringPredicate
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  format: StringPredicate
  id: IDPredicate
  publication_date: DateTimePredicate
  title: StringPredicate
  updatedAt: DateTimePredicate
}

type EnvironmentBackupItem {
  name: String!
  size: Float!
}

type EnvironmentItem {
  id: ID!
  name: String!
}

"""EnvironmentSetupInput"""
input EnvironmentSetupInput {
  deleteLock: Boolean
  introspection: Boolean
}

type EnvironmentVariable {
  _description: String
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  id: ID
  name: String
  updatedAt: DateTime
  value: String
}

"""EnvironmentVariables create input"""
input EnvironmentVariableCreateInput {
  name: String!
  value: String!
}

"""EnvironmentVariables create many input"""
input EnvironmentVariableCreateManyInput {
  name: String!
  value: String!
}

"""EnvironmentVariables delete input"""
input EnvironmentVariableDeleteInput {
  force: Boolean
  id: ID
}

input EnvironmentVariableFilter {
  AND: [EnvironmentVariableFilter!]
  OR: [EnvironmentVariableFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  id: IDPredicate
  name: StringPredicate
  updatedAt: DateTimePredicate
  value: StringPredicate
}

input EnvironmentVariableGroupBy {
  first: Int
  having: Having
  last: Int
  query: EnvironmentVariableGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input EnvironmentVariableGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  id: [GroupByField!]
  name: [GroupByField!]
  updatedAt: [GroupByField!]
  value: [GroupByField!]
}

input EnvironmentVariableKeyFilter {
  id: ID
  name: String
}

"""EnvironmentVariableListResponse output"""
type EnvironmentVariableListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [EnvironmentVariable!]!
}

"""EnvironmentVariableManyResponse output"""
type EnvironmentVariableManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [EnvironmentVariable!]!
}

"""No longer supported. Use `sort` instead."""
enum EnvironmentVariableOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  value_ASC
  value_DESC
}

"""EnvironmentVariables subscription payload"""
type EnvironmentVariablePayload {
  mutation: MutationType!
  node: EnvironmentVariable
  previousValues: EnvironmentVariable
  updatedFields: [String]
}

input EnvironmentVariableSort {
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
  value: SortOrder
}

"""EnvironmentVariables subscription filter"""
input EnvironmentVariableSubscriptionFilter {
  mutation_in: [MutationType]
  node: EnvironmentVariableFilter
  updatedFields: UpdatedFieldsFilter
}

"""EnvironmentVariables update input"""
input EnvironmentVariableUpdateByFilterInput {
  name: [UpdateByFilterStringInput]
  value: [UpdateByFilterStringInput]
}

"""EnvironmentVariables update input"""
input EnvironmentVariableUpdateInput {
  id: ID
  name: String
  value: String
}

type Event {
  _description: String
  createdAt: DateTime
  deletedAt: Int
  description: String
  event_date: DateTime
  id: ID
  location: String
  title: String
  updatedAt: DateTime
}

"""Events create input"""
input EventCreateInput {
  description: String!
  event_date: DateTime
  location: String!
  title: String
}

"""Events create many input"""
input EventCreateManyInput {
  description: String!
  event_date: DateTime
  location: String!
  title: String
}

"""Events delete input"""
input EventDeleteInput {
  force: Boolean
  id: ID
}

"""EventFieldsPermissions create input"""
input EventFieldsPermissions {
  createdAt: Boolean
  description: Boolean
  event_date: Boolean
  location: Boolean
  title: Boolean
  updatedAt: Boolean
}

input EventFilter {
  AND: [EventFilter!]
  OR: [EventFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  event_date: DateTimePredicate
  id: IDPredicate
  location: StringPredicate
  title: StringPredicate
  updatedAt: DateTimePredicate
}

input EventGroupBy {
  first: Int
  having: Having
  last: Int
  query: EventGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input EventGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  description: [GroupByField!]
  event_date: [GroupByField!]
  id: [GroupByField!]
  location: [GroupByField!]
  title: [GroupByField!]
  updatedAt: [GroupByField!]
}

input EventKeyFilter {
  id: ID
}

"""EventListResponse output"""
type EventListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Event!]!
}

"""EventManyResponse output"""
type EventManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [Event!]!
}

"""No longer supported. Use `sort` instead."""
enum EventOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  event_date_ASC
  event_date_DESC
  id_ASC
  id_DESC
  location_ASC
  location_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""Events subscription payload"""
type EventPayload {
  mutation: MutationType!
  node: Event
  previousValues: Event
  updatedFields: [String]
}

input EventSort {
  createdAt: SortOrder
  deletedAt: SortOrder
  description: SortOrder
  event_date: SortOrder
  id: SortOrder
  location: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

"""Events subscription filter"""
input EventSubscriptionFilter {
  mutation_in: [MutationType]
  node: EventFilter
  updatedFields: UpdatedFieldsFilter
}

"""Events update input"""
input EventUpdateByFilterInput {
  description: [UpdateByFilterStringInput]
  location: [UpdateByFilterStringInput]
  title: [UpdateByFilterStringInput]
}

"""Events update input"""
input EventUpdateInput {
  description: String
  event_date: DateTime
  id: ID
  location: String
  title: String
}

input Event_PermissionFilter {
  AND: [Event_PermissionFilter!]
  OR: [Event_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  description: StringPredicate
  event_date: DateTimePredicate
  id: IDPredicate
  location: StringPredicate
  title: StringPredicate
  updatedAt: DateTimePredicate
}

"""Facebook connection params"""
type FacebookOptions {
  app_id: String!
  app_secret: String!
  enabled: Boolean!
}

"""Facebook connection params input"""
input FacebookOptionsInput {
  app_id: String!
  app_secret: String!
  enabled: Boolean!
}

"""Field Data Features"""
type FieldDataFeatures {
  create: Boolean!
  sort: Boolean!
  update: Boolean!
}

"""Field Schema Features"""
type FieldSchemaFeatures {
  delete: Boolean!
  update: Boolean!
}

"""Field types"""
enum FieldType {
  DATE
  FILE
  GEO
  ID
  JSON
  MISSING_RELATION
  NUMBER
  ONE_WAY_RELATION
  RELATION
  SMART
  SWITCH
  TEXT
  UUID
}

"""Field Type Attributes"""
union FieldTypeAttributes = DateFieldTypeAttributes | FileFieldTypeAttributes | GeoFieldTypeAttributes | MissingRelationFieldTypeAttributes | NumberFieldTypeAttributes | SmartFieldTypeAttributes | SwitchFieldTypeAttributes | TextFieldTypeAttributes | UUIDFieldTypeAttributes

"""Field Type Attributes Input"""
input FieldTypeAttributesInput {
  autoIncrement: Boolean
  currency: String
  expiration: Int
  fieldSize: Int
  format: String
  isBigInt: Boolean
  listOptions: [String!]
  maxSize: Int
  maxValue: Float
  minValue: Float
  precision: Int
  srid: Int
  typeRestrictions: [String!]
}

type File {
  _description: String
  createdAt: DateTime
  createdBy: User
  deletedAt: Int

  """No longer supported. Use `downloadUrl` instead."""
  downloadStorageUrl: String
  downloadUrl: String

  """
  No longer supported. Use `system.fileUploadSignInfo.AwsSignInfoResponse.fields` instead.
  """
  fields: JSON
  fileId: String
  filename: String
  id: ID
  meta: JSON
  mods: JSON
  previewUrl: String
  provider: String
  public: Boolean
  settings_landingPageImage(after: String, before: String, filter: SettingFilter, first: Int, groupBy: SettingGroupBy, last: Int, orderBy: [SettingOrderBy], skip: Int, sort: [SettingSort!]): SettingListResponse
  settings_menuBarLogo(after: String, before: String, filter: SettingFilter, first: Int, groupBy: SettingGroupBy, last: Int, orderBy: [SettingOrderBy], skip: Int, sort: [SettingSort!]): SettingListResponse
  shareUrl: String
  updatedAt: DateTime

  """No longer supported"""
  uploadUrl: String

  """No longer supported"""
  uploaded: Boolean
  users_avatar(after: String, before: String, filter: UserFilter, first: Int, groupBy: UserGroupBy, last: Int, orderBy: [UserOrderBy], skip: Int, sort: [UserSort!]): UserListResponse
}

"""Files create input"""
input FileCreateInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean = false
  users_avatar: FilesUsers_avatarRelationInput
}

"""Files create many input"""
input FileCreateManyInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean = false
  users_avatar: FilesUsers_avatarManyRelationInput
}

"""Files delete input"""
input FileDeleteInput {
  force: Boolean
  id: ID
}

"""File Field Attributes"""
type FileFieldTypeAttributes {
  expiration: Int
  format: String!
  maxSize: Int
  showTitle: Boolean @deprecated(reason: "Field is deprecated")
  showUrl: Boolean @deprecated(reason: "Field is deprecated")
  typeRestrictions: [String!]
}

"""FileFieldsPermissions create input"""
input FileFieldsPermissions {
  createdAt: Boolean
  downloadUrl: Boolean
  fields: Boolean
  fileId: Boolean
  filename: Boolean
  meta: Boolean
  mods: Boolean
  provider: Boolean
  public: Boolean
  shareUrl: Boolean
  updatedAt: Boolean
  uploadUrl: Boolean
  uploaded: Boolean
}

input FileFilter {
  AND: [FileFilter!]
  OR: [FileFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  downloadUrl: StringPredicate
  fileId: StringPredicate
  filename: StringPredicate
  id: IDPredicate
  provider: StringPredicate
  public: BoolPredicate
  settings_landingPageImage: SettingRelationFilter
  settings_menuBarLogo: SettingRelationFilter
  shareUrl: StringPredicate
  updatedAt: DateTimePredicate
  uploadUrl: StringPredicate
  uploaded: BoolPredicate
  users_avatar: UserRelationFilter
}

input FileGroupBy {
  first: Int
  having: Having
  last: Int
  query: FileGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input FileGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  downloadUrl: [GroupByField!]
  fields: [GroupByField!]
  fileId: [GroupByField!]
  filename: [GroupByField!]
  id: [GroupByField!]
  meta: [GroupByField!]
  mods: [GroupByField!]
  provider: [GroupByField!]
  public: [GroupByField!]
  settings_landingPageImage: SettingGroupByQuery
  settings_menuBarLogo: SettingGroupByQuery
  shareUrl: [GroupByField!]
  updatedAt: [GroupByField!]
  uploadUrl: [GroupByField!]
  uploaded: [GroupByField!]
  users_avatar: UserGroupByQuery
}

input FileKeyFilter {
  fileId: String
  id: ID
}

"""FileListResponse output"""
type FileListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [File!]!
}

"""FileManyResponse output"""
type FileManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [File!]!
}

"""No longer supported. Use `sort` instead."""
enum FileOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  downloadUrl_ASC
  downloadUrl_DESC
  fields_ASC
  fields_DESC
  fileId_ASC
  fileId_DESC
  filename_ASC
  filename_DESC
  id_ASC
  id_DESC
  meta_ASC
  meta_DESC
  mods_ASC
  mods_DESC
  provider_ASC
  provider_DESC
  public_ASC
  public_DESC
  shareUrl_ASC
  shareUrl_DESC
  updatedAt_ASC
  updatedAt_DESC
  uploadUrl_ASC
  uploadUrl_DESC
  uploaded_ASC
  uploaded_DESC
}

"""Files subscription payload"""
type FilePayload {
  mutation: MutationType!
  node: File
  previousValues: File
  updatedFields: [String]
}

input FileSort {
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  downloadUrl: SortOrder
  fileId: SortOrder
  filename: SortOrder
  id: SortOrder
  provider: SortOrder
  public: SortOrder
  shareUrl: SortOrder
  updatedAt: SortOrder
  uploadUrl: SortOrder
  uploaded: SortOrder
}

type FileStackSignInfoResponse {
  apiKey: String!
  path: String!
  policy: String!
  signature: String!
}

"""Files subscription filter"""
input FileSubscriptionFilter {
  mutation_in: [MutationType]
  node: FileFilter
  updatedFields: UpdatedFieldsFilter
}

"""File Type Format Enum"""
enum FileTypeFormatEnum {
  FILE
  IMAGE
}

"""Files update input"""
input FileUpdateByFilterInput {
  downloadUrl: [UpdateByFilterStringInput]
  fields: [UpdateByFilterJsonInput]
  fileId: [UpdateByFilterStringInput]
  filename: [UpdateByFilterStringInput]
  meta: [UpdateByFilterJsonInput]
  mods: [UpdateByFilterJsonInput]
  provider: [UpdateByFilterStringInput]
  public: [UpdateByFilterBooleanSwitchInput]
  shareUrl: [UpdateByFilterStringInput]
  uploadUrl: [UpdateByFilterStringInput]
  uploaded: [UpdateByFilterBooleanSwitchInput]
}

"""Files update input"""
input FileUpdateInput {
  fileId: String
  filename: String
  id: ID
  meta: JSON
  mods: JSON
  public: Boolean
  users_avatar: FilesUsers_avatarUpdateRelationInput
}

type FileUploadInfoResponse {
  apiKey: String!
  path: String!
  policy: String!
  signature: String!
}

input File_PermissionFilter {
  AND: [File_PermissionFilter!]
  OR: [File_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  downloadUrl: StringPredicate
  fileId: StringPredicate
  filename: StringPredicate
  id: IDPredicate
  provider: StringPredicate
  public: BoolPredicate
  settings_landingPageImage: Setting_PermissionRelationFilter
  settings_menuBarLogo: Setting_PermissionRelationFilter
  shareUrl: StringPredicate
  updatedAt: DateTimePredicate
  uploadUrl: StringPredicate
  uploaded: BoolPredicate
  users_avatar: User_PermissionRelationFilter
}

type FilesSetting {
  _description: String
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  filemanagername: String
  id: ID
  isEnabled: Boolean
  settings: JSON
  updatedAt: DateTime
}

"""FilesSettings create input"""
input FilesSettingCreateInput {
  filemanagername: String!
  isEnabled: Boolean = false
  settings: JSON!
}

"""FilesSettings create many input"""
input FilesSettingCreateManyInput {
  filemanagername: String!
  isEnabled: Boolean = false
  settings: JSON!
}

"""FilesSettings delete input"""
input FilesSettingDeleteInput {
  force: Boolean
  id: ID
}

"""FilesSettingFieldsPermissions create input"""
input FilesSettingFieldsPermissions {
  createdAt: Boolean
  filemanagername: Boolean
  isEnabled: Boolean
  settings: Boolean
  updatedAt: Boolean
}

input FilesSettingFilter {
  AND: [FilesSettingFilter!]
  OR: [FilesSettingFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  filemanagername: StringPredicate
  id: IDPredicate
  isEnabled: BoolPredicate
  updatedAt: DateTimePredicate
}

input FilesSettingGroupBy {
  first: Int
  having: Having
  last: Int
  query: FilesSettingGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input FilesSettingGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  filemanagername: [GroupByField!]
  id: [GroupByField!]
  isEnabled: [GroupByField!]
  settings: [GroupByField!]
  updatedAt: [GroupByField!]
}

input FilesSettingKeyFilter {
  filemanagername: String
  id: ID
}

"""FilesSettingListResponse output"""
type FilesSettingListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [FilesSetting!]!
}

"""FilesSettingManyResponse output"""
type FilesSettingManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [FilesSetting!]!
}

"""No longer supported. Use `sort` instead."""
enum FilesSettingOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  filemanagername_ASC
  filemanagername_DESC
  id_ASC
  id_DESC
  isEnabled_ASC
  isEnabled_DESC
  settings_ASC
  settings_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""FilesSettings subscription payload"""
type FilesSettingPayload {
  mutation: MutationType!
  node: FilesSetting
  previousValues: FilesSetting
  updatedFields: [String]
}

input FilesSettingSort {
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  filemanagername: SortOrder
  id: SortOrder
  isEnabled: SortOrder
  updatedAt: SortOrder
}

"""FilesSettings subscription filter"""
input FilesSettingSubscriptionFilter {
  mutation_in: [MutationType]
  node: FilesSettingFilter
  updatedFields: UpdatedFieldsFilter
}

"""FilesSettings update input"""
input FilesSettingUpdateByFilterInput {
  filemanagername: [UpdateByFilterStringInput]
  isEnabled: [UpdateByFilterBooleanSwitchInput]
  settings: [UpdateByFilterJsonInput]
}

"""FilesSettings update input"""
input FilesSettingUpdateInput {
  filemanagername: String
  id: ID
  isEnabled: Boolean
  settings: JSON
}

input FilesSetting_PermissionFilter {
  AND: [FilesSetting_PermissionFilter!]
  OR: [FilesSetting_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  filemanagername: StringPredicate
  id: IDPredicate
  isEnabled: BoolPredicate
  updatedAt: DateTimePredicate
}

"""Files relation input"""
input FilesUsers_avatarManyRelationInput {
  connect: [UserKeyFilter!]
}

"""Files relation input"""
input FilesUsers_avatarRelationInput {
  connect: [UserKeyFilter!]
  create: [Avatar_UserCreateInput]
}

"""Files relation input"""
input FilesUsers_avatarUpdateRelationInput {
  connect: [UserKeyFilter!]
  create: [Avatar_UserCreateInput]
  disconnect: [UserKeyFilter!]
  reconnect: [UserKeyFilter!]
  update: [Avatar_UserUpdateInput]
}

input FloatPredicateHaving {
  AND: [FloatPredicateHaving!]
  OR: [FloatPredicateHaving!]
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: Float
  lte: Float
  not_equals: Float
  not_in: [Float!]
}

type FrontendUtilizationABResponse {
  CDN: Boolean
  assets: Int
  customStates: Int
  functions: Int
  layouts: Int
  libraries: Int
  pages: Int
  requests: Int
  resources: Int
}

"""FunctionInfo"""
interface FunctionInfo {
  application: Application
  description: String
  functionType: FunctionType!
  name: String!
}

"""FunctionInfoCheck"""
type FunctionInfoCheck {
  version: String
}

"""FunctionInfoFilter"""
input FunctionInfoFilter {
  description: String
  functionType: FunctionType
  name: String
}

"""FunctionInfoOrderBy"""
enum FunctionInfoOrderBy {
  description_ASC
  description_DESC
  functionType_ASC
  functionType_DESC
  name_ASC
  name_DESC
}

"""FunctionListResponse output"""
type FunctionListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [FunctionInfo!]!
}

"""FunctionResolverInfo"""
type FunctionResolverInfo implements FunctionInfo {
  application: Application
  description: String
  functionType: FunctionType!
  gqlType: String!
  name: String!
}

"""FunctionTaskInfo"""
type FunctionTaskInfo implements FunctionInfo {
  application: Application
  description: String
  functionType: FunctionType!
  name: String!
  scheduleExpression: String
}

"""FunctionTriggerInfo"""
type FunctionTriggerInfo implements FunctionInfo {
  application: Application
  description: String
  functionType: FunctionType!
  name: String!
  operation: String!
  tableName: String!
  type: String!
}

"""FunctionType"""
enum FunctionType {
  resolver
  schedule
  task
  trigger
  webhook
}

"""FunctionWebhookInfo"""
type FunctionWebhookInfo implements FunctionInfo {
  application: Application
  description: String
  functionType: FunctionType!
  httpMethod: String!
  name: String!
  workspaceFullPath: String!
  workspaceRelativePath: String!
}

"""Geo Field Attributes"""
type GeoFieldTypeAttributes {
  format: String!
  srid: Int
}

"""Github connection params"""
type GithubOptions {
  client_id: String!
  client_secret: String!
  enabled: Boolean!
}

"""Github connection params input"""
input GithubOptionsInput {
  client_id: String!
  client_secret: String!
  enabled: Boolean!
}

"""Google connection params"""
type GoogleOptions {
  client_id: String!
  client_secret: String!
  enabled: Boolean!
}

"""Google connection params input"""
input GoogleOptionsInput {
  client_id: String!
  client_secret: String!
  enabled: Boolean!
}

"""GraphQLCreateFileCustomInput"""
input GraphQLCreateFileCustomInput {
  fileId: String
  filename: String
  public: Boolean
}

"""GraphQLCreateFileItemInput"""
input GraphQLCreateFileItemInput {
  create: GraphQLCreateFileCustomInput
}

"""GraphQLFileItemResponse"""
type GraphQLFileItemResponse {
  downloadUrl: String
  id: String
}

input GroupByField {
  as: String
  fn: [GroupByFieldFunction]
}

input GroupByFieldFunction {
  abs: Boolean
  aggregate: AggregationFunctionType
  ascii: Boolean
  bitLength: Boolean
  ceil: Boolean
  charLength: Boolean
  crc32: Boolean
  datePart: DatePartFunctionType
  distinct: Boolean
  floor: Boolean
  hex: Boolean
  ifNull: String
  isNull: Boolean
  left: Int
  length: Boolean
  like: PatternFunctionArguments
  locate: LocateFunctionArguments
  lower: Boolean
  lpad: StringPadFunctionArguments
  ltrim: Boolean
  mod: Int
  notLike: PatternFunctionArguments
  nullIf: String
  replace: ReplaceFunctionArguments
  reverse: Boolean
  right: Int
  round: Int
  rpad: StringPadFunctionArguments
  rtrim: Boolean
  sign: Boolean
  substring: SubstringFunctionArguments
  trim: TrimFunctionArguments
  truncate: Int
  upper: Boolean
}

type GroupByResponse {
  ApiTokenGroup(after: String, before: String, filter: ApiTokenFilter, first: Int, groupBy: ApiTokenGroupBy, last: Int, orderBy: [ApiTokenOrderBy], skip: Int, sort: [ApiTokenSort!]): ApiTokenListResponse!
  AuthenticationProfileGroup(after: String, before: String, filter: AuthenticationProfileFilter, first: Int, groupBy: AuthenticationProfileGroupBy, last: Int, orderBy: [AuthenticationProfileOrderBy], skip: Int, sort: [AuthenticationProfileSort!]): AuthenticationProfileListResponse!
  BigInt: BigInt
  BookGroup(after: String, before: String, filter: BookFilter, first: Int, groupBy: BookGroupBy, last: Int, orderBy: [BookOrderBy], skip: Int, sort: [BookSort!]): BookListResponse!
  Boolean: Boolean
  Date: Date
  DateTime: DateTime
  DigitalResourceGroup(after: String, before: String, filter: DigitalResourceFilter, first: Int, groupBy: DigitalResourceGroupBy, last: Int, orderBy: [DigitalResourceOrderBy], skip: Int, sort: [DigitalResourceSort!]): DigitalResourceListResponse!
  EnvironmentVariableGroup(after: String, before: String, filter: EnvironmentVariableFilter, first: Int, groupBy: EnvironmentVariableGroupBy, last: Int, orderBy: [EnvironmentVariableOrderBy], skip: Int, sort: [EnvironmentVariableSort!]): EnvironmentVariableListResponse!
  EventGroup(after: String, before: String, filter: EventFilter, first: Int, groupBy: EventGroupBy, last: Int, orderBy: [EventOrderBy], skip: Int, sort: [EventSort!]): EventListResponse!
  FileGroup(after: String, before: String, filter: FileFilter, first: Int, groupBy: FileGroupBy, last: Int, orderBy: [FileOrderBy], skip: Int, sort: [FileSort!]): FileListResponse!
  FilesSettingGroup(after: String, before: String, filter: FilesSettingFilter, first: Int, groupBy: FilesSettingGroupBy, last: Int, orderBy: [FilesSettingOrderBy], skip: Int, sort: [FilesSettingSort!]): FilesSettingListResponse!
  Float: Float
  GroupIds: [ID!]
  HoldGroup(after: String, before: String, filter: HoldFilter, first: Int, groupBy: HoldGroupBy, last: Int, orderBy: [HoldOrderBy], skip: Int, sort: [HoldSort!]): HoldListResponse!
  ID: ID
  Int: Int
  JSON: JSON
  LibraryStaffGroup(after: String, before: String, filter: LibraryStaffFilter, first: Int, groupBy: LibraryStaffGroupBy, last: Int, orderBy: [LibraryStaffOrderBy], skip: Int, sort: [LibraryStaffSort!]): LibraryStaffListResponse!
  LoanGroup(after: String, before: String, filter: LoanFilter, first: Int, groupBy: LoanGroupBy, last: Int, orderBy: [LoanOrderBy], skip: Int, sort: [LoanSort!]): LoanListResponse!
  NotificationGroup(after: String, before: String, filter: NotificationFilter, first: Int, groupBy: NotificationGroupBy, last: Int, orderBy: [NotificationOrderBy], skip: Int, sort: [NotificationSort!]): NotificationListResponse!
  PatronGroup(after: String, before: String, filter: PatronFilter, first: Int, groupBy: PatronGroupBy, last: Int, orderBy: [PatronOrderBy], skip: Int, sort: [PatronSort!]): PatronListResponse!
  RecommendationGroup(after: String, before: String, filter: RecommendationFilter, first: Int, groupBy: RecommendationGroupBy, last: Int, orderBy: [RecommendationOrderBy], skip: Int, sort: [RecommendationSort!]): RecommendationListResponse!
  ReviewGroup(after: String, before: String, filter: ReviewFilter, first: Int, groupBy: ReviewGroupBy, last: Int, orderBy: [ReviewOrderBy], skip: Int, sort: [ReviewSort!]): ReviewListResponse!
  RoleGroup(after: String, before: String, filter: RoleFilter, first: Int, groupBy: RoleGroupBy, last: Int, orderBy: [RoleOrderBy], skip: Int, sort: [RoleSort!]): RoleListResponse!
  String: String
  UserGroup(after: String, before: String, filter: UserFilter, first: Int, groupBy: UserGroupBy, last: Int, orderBy: [UserOrderBy], skip: Int, sort: [UserSort!]): UserListResponse!
}

input GroupBySort {
  alias: String!
  direction: SortOrder!
}

input GroupIdentifiersGroupByField {
  as: String!
}

input Having {
  AND: [Having!]
  OR: [Having!]
  alias: String
  bigint: BigIntPredicateHaving
  bool: BoolPredicateHaving
  date: DatePredicateHaving
  datetime: DateTimePredicateHaving
  float: FloatPredicateHaving
  id: IDPredicateHaving
  int: IntPredicateHaving
  string: StringPredicateHaving
}

type Hold {
  _description: String
  book_id: Book
  createdAt: DateTime
  deletedAt: Int
  id: ID
  patron_id: Patron
  position_in_queue: Int
  updatedAt: DateTime
}

"""Holds create input"""
input HoldCreateInput {
  book_id: HoldsBook_idRelationInput
  patron_id: HoldsPatron_idRelationInput
  position_in_queue: Int
}

"""Holds create many input"""
input HoldCreateManyInput {
  book_id: HoldsBook_idManyRelationInput
  patron_id: HoldsPatron_idManyRelationInput
  position_in_queue: Int
}

"""Holds delete input"""
input HoldDeleteInput {
  force: Boolean
  id: ID
}

"""HoldFieldsPermissions create input"""
input HoldFieldsPermissions {
  createdAt: Boolean
  position_in_queue: Boolean
  updatedAt: Boolean
}

input HoldFilter {
  AND: [HoldFilter!]
  OR: [HoldFilter!]
  _fullText: String
  book_id: BookFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  patron_id: PatronFilter
  position_in_queue: IntPredicate
  updatedAt: DateTimePredicate
}

input HoldGroupBy {
  first: Int
  having: Having
  last: Int
  query: HoldGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input HoldGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  book_id: BookGroupByQuery
  createdAt: [GroupByField!]
  id: [GroupByField!]
  patron_id: PatronGroupByQuery
  position_in_queue: [GroupByField!]
  updatedAt: [GroupByField!]
}

input HoldKeyFilter {
  id: ID
}

"""HoldListResponse output"""
type HoldListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Hold!]!
}

"""HoldManyResponse output"""
type HoldManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [Hold!]!
}

"""No longer supported. Use `sort` instead."""
enum HoldOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  position_in_queue_ASC
  position_in_queue_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""Holds subscription payload"""
type HoldPayload {
  mutation: MutationType!
  node: Hold
  previousValues: Hold
  updatedFields: [String]
}

input HoldSort {
  book_id: BookSort
  createdAt: SortOrder
  deletedAt: SortOrder
  id: SortOrder
  patron_id: PatronSort
  position_in_queue: SortOrder
  updatedAt: SortOrder
}

"""Holds subscription filter"""
input HoldSubscriptionFilter {
  mutation_in: [MutationType]
  node: HoldFilter
  updatedFields: UpdatedFieldsFilter
}

"""Holds update input"""
input HoldUpdateByFilterInput {
  position_in_queue: [UpdateByFilterIntInput]
}

"""Holds update input"""
input HoldUpdateInput {
  book_id: HoldsBook_idUpdateRelationInput
  id: ID
  patron_id: HoldsPatron_idUpdateRelationInput
  position_in_queue: Int
}

input Hold_PermissionFilter {
  AND: [Hold_PermissionFilter!]
  OR: [Hold_PermissionFilter!]
  _fullText: String
  book_id: Book_PermissionFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  patron_id: Patron_PermissionFilter
  position_in_queue: IntPredicate
  updatedAt: DateTimePredicate
}

"""Holds relation input"""
input HoldsBook_idManyRelationInput {
  connect: BookKeyFilter
}

"""Holds relation input"""
input HoldsBook_idRelationInput {
  connect: BookKeyFilter
  create: Holds_BookCreateInput
}

"""Holds relation input"""
input HoldsBook_idUpdateRelationInput {
  connect: BookKeyFilter
  create: Holds_BookCreateInput
  disconnect: BookKeyFilter
  reconnect: BookKeyFilter
  update: Holds_BookUpdateInput
}

"""Holds relation input"""
input HoldsPatron_idManyRelationInput {
  connect: PatronKeyFilter
}

"""Holds relation input"""
input HoldsPatron_idRelationInput {
  connect: PatronKeyFilter
  create: Holds_PatronCreateInput
}

"""Holds relation input"""
input HoldsPatron_idUpdateRelationInput {
  connect: PatronKeyFilter
  create: Holds_PatronCreateInput
  disconnect: PatronKeyFilter
  reconnect: PatronKeyFilter
  update: Holds_PatronUpdateInput
}

"""Books create input from Holds"""
input Holds_BookCreateInput {
  Holds: BooksHoldsRelationInput
  Loans: BooksLoansRelationInput
  Recommendations: BooksRecommendationsRelationInput
  Reviews: BooksReviewsRelationInput!
  author: String
  availability_status: String
  genre: String
  isbn: String
  publication_date: DateTime
  title: String
}

"""Books update input from Holds"""
input Holds_BookUpdateInput {
  Holds: BooksHoldsUpdateRelationInput
  Loans: BooksLoansUpdateRelationInput
  Recommendations: BooksRecommendationsUpdateRelationInput
  Reviews: BooksReviewsUpdateRelationInput
  author: String
  availability_status: String
  genre: String
  isbn: String
  publication_date: DateTime
  title: String
}

"""Patrons create input from Holds"""
input Holds_PatronCreateInput {
  Holds: PatronsHoldsRelationInput
  Loans: PatronsLoansRelationInput
  Recommendations: PatronsRecommendationsRelationInput!
  Reviews: PatronsReviewsRelationInput!
  borrowing_history: JSON!
  membership_status: String
  user_id: PatronsUser_idRelationInput
}

"""Patrons update input from Holds"""
input Holds_PatronUpdateInput {
  Holds: PatronsHoldsUpdateRelationInput
  Loans: PatronsLoansUpdateRelationInput
  Recommendations: PatronsRecommendationsUpdateRelationInput
  Reviews: PatronsReviewsUpdateRelationInput
  borrowing_history: JSON
  membership_status: String
  user_id: PatronsUser_idUpdateRelationInput
}

input IDPredicate {
  contains: ID
  ends_with: ID
  equals: ID
  gt: ID
  gte: ID
  in: [ID!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: ID
  lte: ID
  not_contains: ID
  not_ends_with: ID
  not_equals: ID
  not_in: [ID!]
  not_starts_with: ID
  starts_with: ID
}

input IDPredicateHaving {
  AND: [IDPredicateHaving!]
  OR: [IDPredicateHaving!]
  contains: ID
  ends_with: ID
  equals: ID
  gt: ID
  gte: ID
  in: [ID!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: ID
  lte: ID
  not_contains: ID
  not_ends_with: ID
  not_equals: ID
  not_in: [ID!]
  not_starts_with: ID
  starts_with: ID
}

"""ImportCSV"""
input ImportCSV {
  data: ImportCSVData!
  tableId: String!
}

input ImportCSVData {
  fields: String
  hasHeader: Boolean
  matchField: String
  overwrite: Boolean
  tableFields: String
  url: String!
}

"""ImportedTable"""
type ImportedTable {
  id: ID!
  name: String!
}

"""Inbox Events List Filter"""
input InboxEventsListFilter {
  isCompleted: IntPredicate
}

"""Table Create Index Input"""
input IndexCreateInput {
  columns: [TableIndexColumnInput!]!
  force: Boolean
  name: String
  tableId: ID!
  type: TableIndexType!
}

"""Table Delete Index Input"""
input IndexDeleteInput {
  id: ID!
}

"""Table Update Index Input"""
input IndexUpdateInput {
  columns: [TableIndexColumnInput!]
  force: Boolean
  id: ID!
  name: String
  type: TableIndexType
}

input IntPredicate {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: Int
  lte: Int
  not_equals: Int
  not_in: [Int!]
}

input IntPredicateHaving {
  AND: [IntPredicateHaving!]
  OR: [IntPredicateHaving!]
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  is_empty: Boolean
  is_not_empty: Boolean
  lt: Int
  lte: Int
  not_equals: Int
  not_in: [Int!]
}

type IntrospectionQueryResponse {
  url: String!
}

enum InvitationRoleEnum {
  ADMIN
  EDITOR
  VIEWER
}

"""Invited By Name"""
type InvitedByName {
  email: String
  firstName: String
  lastName: String
  projectId: String
  projectName: String
  workspaceName: String
}

"""InvokeData"""
input InvokeData {
  functionName: String!
  inputArgs: String
  nodeVersion: String
}

"""InvokeFunctionResponse"""
type InvokeFunctionResponse {
  responseData: String!
}

"""IsSocialUser"""
input IsSocialUser {
  email: String!
}

type IsSocialUserResponse {
  isSocialUser: Boolean
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type LibraryStaff {
  _description: String
  createdAt: DateTime
  deletedAt: Int
  id: ID
  position: String
  updatedAt: DateTime
  user_id: User
}

"""LibraryStaff create input"""
input LibraryStaffCreateInput {
  position: String
  user_id: LibraryStaffUser_idRelationInput
}

"""LibraryStaff create many input"""
input LibraryStaffCreateManyInput {
  position: String
  user_id: LibraryStaffUser_idManyRelationInput
}

"""LibraryStaff delete input"""
input LibraryStaffDeleteInput {
  force: Boolean
  id: ID
}

"""LibraryStaffFieldsPermissions create input"""
input LibraryStaffFieldsPermissions {
  createdAt: Boolean
  position: Boolean
  updatedAt: Boolean
}

input LibraryStaffFilter {
  AND: [LibraryStaffFilter!]
  OR: [LibraryStaffFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  position: StringPredicate
  updatedAt: DateTimePredicate
  user_id: UserFilter
}

input LibraryStaffGroupBy {
  first: Int
  having: Having
  last: Int
  query: LibraryStaffGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input LibraryStaffGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  id: [GroupByField!]
  position: [GroupByField!]
  updatedAt: [GroupByField!]
  user_id: UserGroupByQuery
}

input LibraryStaffKeyFilter {
  id: ID
}

"""LibraryStaffListResponse output"""
type LibraryStaffListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [LibraryStaff!]!
}

"""LibraryStaffManyResponse output"""
type LibraryStaffManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [LibraryStaff!]!
}

"""No longer supported. Use `sort` instead."""
enum LibraryStaffOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  position_ASC
  position_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""LibraryStaff subscription payload"""
type LibraryStaffPayload {
  mutation: MutationType!
  node: LibraryStaff
  previousValues: LibraryStaff
  updatedFields: [String]
}

input LibraryStaffSort {
  createdAt: SortOrder
  deletedAt: SortOrder
  id: SortOrder
  position: SortOrder
  updatedAt: SortOrder
  user_id: UserSort
}

"""LibraryStaff subscription filter"""
input LibraryStaffSubscriptionFilter {
  mutation_in: [MutationType]
  node: LibraryStaffFilter
  updatedFields: UpdatedFieldsFilter
}

"""LibraryStaff update input"""
input LibraryStaffUpdateByFilterInput {
  position: [UpdateByFilterStringInput]
}

"""LibraryStaff update input"""
input LibraryStaffUpdateInput {
  id: ID
  position: String
  user_id: LibraryStaffUser_idUpdateRelationInput
}

"""LibraryStaff relation input"""
input LibraryStaffUser_idManyRelationInput {
  connect: UserKeyFilter
}

"""LibraryStaff relation input"""
input LibraryStaffUser_idRelationInput {
  connect: UserKeyFilter
  create: LibraryStaff_UserCreateInput
}

"""LibraryStaff relation input"""
input LibraryStaffUser_idUpdateRelationInput {
  connect: UserKeyFilter
  create: LibraryStaff_UserCreateInput
  disconnect: UserKeyFilter
  reconnect: UserKeyFilter
  update: LibraryStaff_UserUpdateInput
}

input LibraryStaff_PermissionFilter {
  AND: [LibraryStaff_PermissionFilter!]
  OR: [LibraryStaff_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  position: StringPredicate
  updatedAt: DateTimePredicate
  user_id: User_PermissionFilter
}

"""Users create input from LibraryStaff"""
input LibraryStaff_UserCreateInput {
  LibraryStaff: UsersLibraryStaffRelationInput
  Notifications: UsersNotificationsRelationInput!
  Patrons: UsersPatronsRelationInput
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""Users update input from LibraryStaff"""
input LibraryStaff_UserUpdateInput {
  LibraryStaff: UsersLibraryStaffUpdateRelationInput
  Notifications: UsersNotificationsUpdateRelationInput
  Patrons: UsersPatronsUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

type Loan {
  _description: String
  book_id: Book
  createdAt: DateTime
  deletedAt: Int
  due_date: DateTime
  id: ID
  patron_id: Patron
  status: String
  updatedAt: DateTime
}

"""Loans create input"""
input LoanCreateInput {
  book_id: LoansBook_idRelationInput
  due_date: DateTime
  patron_id: LoansPatron_idRelationInput
  status: String
}

"""Loans create many input"""
input LoanCreateManyInput {
  book_id: LoansBook_idManyRelationInput
  due_date: DateTime
  patron_id: LoansPatron_idManyRelationInput
  status: String
}

"""Loans delete input"""
input LoanDeleteInput {
  force: Boolean
  id: ID
}

"""LoanFieldsPermissions create input"""
input LoanFieldsPermissions {
  createdAt: Boolean
  due_date: Boolean
  status: Boolean
  updatedAt: Boolean
}

input LoanFilter {
  AND: [LoanFilter!]
  OR: [LoanFilter!]
  _fullText: String
  book_id: BookFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  due_date: DateTimePredicate
  id: IDPredicate
  patron_id: PatronFilter
  status: StringPredicate
  updatedAt: DateTimePredicate
}

input LoanGroupBy {
  first: Int
  having: Having
  last: Int
  query: LoanGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input LoanGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  book_id: BookGroupByQuery
  createdAt: [GroupByField!]
  due_date: [GroupByField!]
  id: [GroupByField!]
  patron_id: PatronGroupByQuery
  status: [GroupByField!]
  updatedAt: [GroupByField!]
}

input LoanKeyFilter {
  id: ID
}

"""LoanListResponse output"""
type LoanListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Loan!]!
}

"""LoanManyResponse output"""
type LoanManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [Loan!]!
}

"""No longer supported. Use `sort` instead."""
enum LoanOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  due_date_ASC
  due_date_DESC
  id_ASC
  id_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""Loans subscription payload"""
type LoanPayload {
  mutation: MutationType!
  node: Loan
  previousValues: Loan
  updatedFields: [String]
}

input LoanSort {
  book_id: BookSort
  createdAt: SortOrder
  deletedAt: SortOrder
  due_date: SortOrder
  id: SortOrder
  patron_id: PatronSort
  status: SortOrder
  updatedAt: SortOrder
}

"""Loans subscription filter"""
input LoanSubscriptionFilter {
  mutation_in: [MutationType]
  node: LoanFilter
  updatedFields: UpdatedFieldsFilter
}

"""Loans update input"""
input LoanUpdateByFilterInput {
  status: [UpdateByFilterStringInput]
}

"""Loans update input"""
input LoanUpdateInput {
  book_id: LoansBook_idUpdateRelationInput
  due_date: DateTime
  id: ID
  patron_id: LoansPatron_idUpdateRelationInput
  status: String
}

input Loan_PermissionFilter {
  AND: [Loan_PermissionFilter!]
  OR: [Loan_PermissionFilter!]
  _fullText: String
  book_id: Book_PermissionFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  due_date: DateTimePredicate
  id: IDPredicate
  patron_id: Patron_PermissionFilter
  status: StringPredicate
  updatedAt: DateTimePredicate
}

"""Loans relation input"""
input LoansBook_idManyRelationInput {
  connect: BookKeyFilter
}

"""Loans relation input"""
input LoansBook_idRelationInput {
  connect: BookKeyFilter
  create: Loans_BookCreateInput
}

"""Loans relation input"""
input LoansBook_idUpdateRelationInput {
  connect: BookKeyFilter
  create: Loans_BookCreateInput
  disconnect: BookKeyFilter
  reconnect: BookKeyFilter
  update: Loans_BookUpdateInput
}

"""Loans relation input"""
input LoansPatron_idManyRelationInput {
  connect: PatronKeyFilter
}

"""Loans relation input"""
input LoansPatron_idRelationInput {
  connect: PatronKeyFilter
  create: Loans_PatronCreateInput
}

"""Loans relation input"""
input LoansPatron_idUpdateRelationInput {
  connect: PatronKeyFilter
  create: Loans_PatronCreateInput
  disconnect: PatronKeyFilter
  reconnect: PatronKeyFilter
  update: Loans_PatronUpdateInput
}

"""Books create input from Loans"""
input Loans_BookCreateInput {
  Holds: BooksHoldsRelationInput!
  Loans: BooksLoansRelationInput
  Recommendations: BooksRecommendationsRelationInput
  Reviews: BooksReviewsRelationInput!
  author: String
  availability_status: String
  genre: String
  isbn: String
  publication_date: DateTime
  title: String
}

"""Books update input from Loans"""
input Loans_BookUpdateInput {
  Holds: BooksHoldsUpdateRelationInput
  Loans: BooksLoansUpdateRelationInput
  Recommendations: BooksRecommendationsUpdateRelationInput
  Reviews: BooksReviewsUpdateRelationInput
  author: String
  availability_status: String
  genre: String
  isbn: String
  publication_date: DateTime
  title: String
}

"""Patrons create input from Loans"""
input Loans_PatronCreateInput {
  Holds: PatronsHoldsRelationInput!
  Loans: PatronsLoansRelationInput
  Recommendations: PatronsRecommendationsRelationInput!
  Reviews: PatronsReviewsRelationInput!
  borrowing_history: JSON!
  membership_status: String
  user_id: PatronsUser_idRelationInput
}

"""Patrons update input from Loans"""
input Loans_PatronUpdateInput {
  Holds: PatronsHoldsUpdateRelationInput
  Loans: PatronsLoansUpdateRelationInput
  Recommendations: PatronsRecommendationsUpdateRelationInput
  Reviews: PatronsReviewsUpdateRelationInput
  borrowing_history: JSON
  membership_status: String
  user_id: PatronsUser_idUpdateRelationInput
}

input LocateFunctionArguments {
  pos: Int
  str: String!
}

"""LoginResponse"""
type LoginResponse {
  auth: Auth
  success: Boolean
  workspaces: [WorkspaceInfo!]
}

"""MissingRelation"""
type MissingRelation {
  table: String!
}

"""MissingRelation Field Attributes"""
type MissingRelationFieldTypeAttributes {
  missingTable: String!
}

type Mutation {
  ImportCSV(data: ImportCSV!): AsyncSession
  IsSocialUser(data: IsSocialUser!): IsSocialUserResponse
  apiTokenCreate(data: ApiTokenCreateInput!): ApiTokenResponse!
  apiTokenDelete(data: ApiTokenDeleteInput, filter: ApiTokenKeyFilter, force: Boolean): SuccessResponse
  apiTokenDeleteByFilter(filter: ApiTokenFilter!, force: Boolean): SuccessResponse
  apiTokenDestroy(filter: ApiTokenKeyFilter, force: Boolean): SuccessResponse
  apiTokenDestroyByFilter(filter: ApiTokenFilter!, force: Boolean): SuccessResponse
  apiTokenRestore(id: String!): ApiToken!
  apiTokenUpdate(data: ApiTokenUpdateInput!, destroyDetached: Boolean, filter: ApiTokenKeyFilter, force: Boolean): ApiToken!
  apiTokenUpdateByFilter(data: ApiTokenUpdateByFilterInput!, filter: ApiTokenFilter): ApiTokenManyResponse!
  applicationDelete(data: ApplicationDeleteMutationInput!): SuccessResponse @deprecated(reason: "No longer supported. Use `system.applicationDelete` instead.")
  applicationInstall(data: ApplicationInstallInput!): Application @deprecated(reason: "No longer supported. Use `system.applicationInstall` instead.")
  applicationUpdate(data: ApplicationUpdateInput!): Application @deprecated(reason: "No longer supported. Use `system.applicationUpdate` instead.")
  authenticationProfileCreate(data: AuthenticationProfileCreateInput!): AuthenticationProfile!
  authenticationProfileCreateMany(data: [AuthenticationProfileCreateManyInput]!): AuthenticationProfileManyResponse!
  authenticationProfileDelete(data: AuthenticationProfileDeleteInput, filter: AuthenticationProfileKeyFilter, force: Boolean): SuccessResponse
  authenticationProfileDeleteByFilter(filter: AuthenticationProfileFilter!, force: Boolean): SuccessResponse
  authenticationProfileDestroy(filter: AuthenticationProfileKeyFilter, force: Boolean): SuccessResponse
  authenticationProfileDestroyByFilter(filter: AuthenticationProfileFilter!, force: Boolean): SuccessResponse
  authenticationProfileRestore(id: String!): AuthenticationProfile!
  authenticationProfileUpdate(data: AuthenticationProfileUpdateInput!, destroyDetached: Boolean, filter: AuthenticationProfileKeyFilter, force: Boolean): AuthenticationProfile!
  authenticationProfileUpdateByFilter(data: AuthenticationProfileUpdateByFilterInput!, filter: AuthenticationProfileFilter): AuthenticationProfileManyResponse!
  authenticationSettingsUpdate(data: AuthenticationSettingUpdateInput!): AuthenticationSetting!
  billingPlanUpdate(data: BillingPlanUpdateMutationInput!): BillingCurrentPlanResponse @deprecated(reason: "No longer supported. Use `system.billingPlanUpdate` instead.")
  bookCreate(data: BookCreateInput!): Book!
  bookCreateMany(data: [BookCreateManyInput]!): BookManyResponse!
  bookDelete(data: BookDeleteInput, filter: BookKeyFilter, force: Boolean): SuccessResponse
  bookDeleteByFilter(filter: BookFilter!, force: Boolean): SuccessResponse
  bookDestroy(filter: BookKeyFilter, force: Boolean): SuccessResponse
  bookDestroyByFilter(filter: BookFilter!, force: Boolean): SuccessResponse
  bookRestore(id: String!): Book!
  bookUpdate(data: BookUpdateInput!, destroyDetached: Boolean, filter: BookKeyFilter, force: Boolean): Book!
  bookUpdateByFilter(data: BookUpdateByFilterInput!, filter: BookFilter): BookManyResponse!
  deploy(data: DeployingBuildInput): Boolean @deprecated(reason: "No longer supported. Use `system.deploy` instead.")
  digitalResourceCreate(data: DigitalResourceCreateInput!): DigitalResource!
  digitalResourceCreateMany(data: [DigitalResourceCreateManyInput]!): DigitalResourceManyResponse!
  digitalResourceDelete(data: DigitalResourceDeleteInput, filter: DigitalResourceKeyFilter, force: Boolean): SuccessResponse
  digitalResourceDeleteByFilter(filter: DigitalResourceFilter!, force: Boolean): SuccessResponse
  digitalResourceDestroy(filter: DigitalResourceKeyFilter, force: Boolean): SuccessResponse
  digitalResourceDestroyByFilter(filter: DigitalResourceFilter!, force: Boolean): SuccessResponse
  digitalResourceRestore(id: String!): DigitalResource!
  digitalResourceUpdate(data: DigitalResourceUpdateInput!, destroyDetached: Boolean, filter: DigitalResourceKeyFilter, force: Boolean): DigitalResource!
  digitalResourceUpdateByFilter(data: DigitalResourceUpdateByFilterInput!, filter: DigitalResourceFilter): DigitalResourceManyResponse!
  environmentVariableCreate(data: EnvironmentVariableCreateInput!): EnvironmentVariable!
  environmentVariableCreateMany(data: [EnvironmentVariableCreateManyInput]!): EnvironmentVariableManyResponse!
  environmentVariableDelete(data: EnvironmentVariableDeleteInput, filter: EnvironmentVariableKeyFilter, force: Boolean): SuccessResponse
  environmentVariableDeleteByFilter(filter: EnvironmentVariableFilter!, force: Boolean): SuccessResponse
  environmentVariableDestroy(filter: EnvironmentVariableKeyFilter, force: Boolean): SuccessResponse
  environmentVariableDestroyByFilter(filter: EnvironmentVariableFilter!, force: Boolean): SuccessResponse
  environmentVariableRestore(id: String!): EnvironmentVariable!
  environmentVariableUpdate(data: EnvironmentVariableUpdateInput!, destroyDetached: Boolean, filter: EnvironmentVariableKeyFilter, force: Boolean): EnvironmentVariable!
  environmentVariableUpdateByFilter(data: EnvironmentVariableUpdateByFilterInput!, filter: EnvironmentVariableFilter): EnvironmentVariableManyResponse!
  eventCreate(data: EventCreateInput!): Event!
  eventCreateMany(data: [EventCreateManyInput]!): EventManyResponse!
  eventDelete(data: EventDeleteInput, filter: EventKeyFilter, force: Boolean): SuccessResponse
  eventDeleteByFilter(filter: EventFilter!, force: Boolean): SuccessResponse
  eventDestroy(filter: EventKeyFilter, force: Boolean): SuccessResponse
  eventDestroyByFilter(filter: EventFilter!, force: Boolean): SuccessResponse
  eventRestore(id: String!): Event!
  eventUpdate(data: EventUpdateInput!, destroyDetached: Boolean, filter: EventKeyFilter, force: Boolean): Event!
  eventUpdateByFilter(data: EventUpdateByFilterInput!, filter: EventFilter): EventManyResponse!
  fieldCreate(data: TableFieldCreateInput!): TableField! @deprecated(reason: "No longer supported. Use `system.fieldCreate` instead.")
  fieldDelete(data: TableFieldDeleteInput!): SuccessResponse! @deprecated(reason: "No longer supported. Use `system.fieldDelete` instead.")
  fieldUpdate(data: TableFieldUpdateInput!): TableField! @deprecated(reason: "No longer supported. Use `system.fieldUpdate` instead.")
  fieldUpdatePosition(data: TableFieldPositionUpdateInput!): SuccessResponse! @deprecated(reason: "No longer supported. Use `system.fieldUpdatePosition` instead.")
  fileCreate(data: FileCreateInput!): File!
  fileCreateMany(data: [FileCreateManyInput]!): FileManyResponse!
  fileDelete(data: FileDeleteInput, filter: FileKeyFilter, force: Boolean): SuccessResponse
  fileDeleteByFilter(filter: FileFilter!, force: Boolean): SuccessResponse
  fileDestroy(filter: FileKeyFilter, force: Boolean): SuccessResponse
  fileDestroyByFilter(filter: FileFilter!, force: Boolean): SuccessResponse
  fileRestore(id: String!): File!
  fileUpdate(data: FileUpdateInput!, destroyDetached: Boolean, filter: FileKeyFilter, force: Boolean): File!
  fileUpdateByFilter(data: FileUpdateByFilterInput!, filter: FileFilter): FileManyResponse!
  filesSettingCreate(data: FilesSettingCreateInput!): FilesSetting!
  filesSettingCreateMany(data: [FilesSettingCreateManyInput]!): FilesSettingManyResponse!
  filesSettingDelete(data: FilesSettingDeleteInput, filter: FilesSettingKeyFilter, force: Boolean): SuccessResponse
  filesSettingDeleteByFilter(filter: FilesSettingFilter!, force: Boolean): SuccessResponse
  filesSettingDestroy(filter: FilesSettingKeyFilter, force: Boolean): SuccessResponse
  filesSettingDestroyByFilter(filter: FilesSettingFilter!, force: Boolean): SuccessResponse
  filesSettingRestore(id: String!): FilesSetting!
  filesSettingUpdate(data: FilesSettingUpdateInput!, destroyDetached: Boolean, filter: FilesSettingKeyFilter, force: Boolean): FilesSetting!
  filesSettingUpdateByFilter(data: FilesSettingUpdateByFilterInput!, filter: FilesSettingFilter): FilesSettingManyResponse!
  holdCreate(data: HoldCreateInput!): Hold!
  holdCreateMany(data: [HoldCreateManyInput]!): HoldManyResponse!
  holdDelete(data: HoldDeleteInput, filter: HoldKeyFilter, force: Boolean): SuccessResponse
  holdDeleteByFilter(filter: HoldFilter!, force: Boolean): SuccessResponse
  holdDestroy(filter: HoldKeyFilter, force: Boolean): SuccessResponse
  holdDestroyByFilter(filter: HoldFilter!, force: Boolean): SuccessResponse
  holdRestore(id: String!): Hold!
  holdUpdate(data: HoldUpdateInput!, destroyDetached: Boolean, filter: HoldKeyFilter, force: Boolean): Hold!
  holdUpdateByFilter(data: HoldUpdateByFilterInput!, filter: HoldFilter): HoldManyResponse!
  indexCreate(data: IndexCreateInput!): TableIndex!
  indexDelete(data: IndexDeleteInput!): SuccessResponse
  indexUpdate(data: IndexUpdateInput!): TableIndex!
  invoke(data: InvokeData): InvokeFunctionResponse @deprecated(reason: "No longer supported. Use `system.invoke` instead.")
  libraryStaffCreate(data: LibraryStaffCreateInput!): LibraryStaff!
  libraryStaffCreateMany(data: [LibraryStaffCreateManyInput]!): LibraryStaffManyResponse!
  libraryStaffDelete(data: LibraryStaffDeleteInput, filter: LibraryStaffKeyFilter, force: Boolean): SuccessResponse
  libraryStaffDeleteByFilter(filter: LibraryStaffFilter!, force: Boolean): SuccessResponse
  libraryStaffDestroy(filter: LibraryStaffKeyFilter, force: Boolean): SuccessResponse
  libraryStaffDestroyByFilter(filter: LibraryStaffFilter!, force: Boolean): SuccessResponse
  libraryStaffRestore(id: String!): LibraryStaff!
  libraryStaffUpdate(data: LibraryStaffUpdateInput!, destroyDetached: Boolean, filter: LibraryStaffKeyFilter, force: Boolean): LibraryStaff!
  libraryStaffUpdateByFilter(data: LibraryStaffUpdateByFilterInput!, filter: LibraryStaffFilter): LibraryStaffManyResponse!
  loanCreate(data: LoanCreateInput!): Loan!
  loanCreateMany(data: [LoanCreateManyInput]!): LoanManyResponse!
  loanDelete(data: LoanDeleteInput, filter: LoanKeyFilter, force: Boolean): SuccessResponse
  loanDeleteByFilter(filter: LoanFilter!, force: Boolean): SuccessResponse
  loanDestroy(filter: LoanKeyFilter, force: Boolean): SuccessResponse
  loanDestroyByFilter(filter: LoanFilter!, force: Boolean): SuccessResponse
  loanRestore(id: String!): Loan!
  loanUpdate(data: LoanUpdateInput!, destroyDetached: Boolean, filter: LoanKeyFilter, force: Boolean): Loan!
  loanUpdateByFilter(data: LoanUpdateByFilterInput!, filter: LoanFilter): LoanManyResponse!
  notificationCreate(data: NotificationCreateInput!): Notification!
  notificationCreateMany(data: [NotificationCreateManyInput]!): NotificationManyResponse!
  notificationDelete(data: NotificationDeleteInput, filter: NotificationKeyFilter, force: Boolean): SuccessResponse
  notificationDeleteByFilter(filter: NotificationFilter!, force: Boolean): SuccessResponse
  notificationDestroy(filter: NotificationKeyFilter, force: Boolean): SuccessResponse
  notificationDestroyByFilter(filter: NotificationFilter!, force: Boolean): SuccessResponse
  notificationRestore(id: String!): Notification!
  notificationUpdate(data: NotificationUpdateInput!, destroyDetached: Boolean, filter: NotificationKeyFilter, force: Boolean): Notification!
  notificationUpdateByFilter(data: NotificationUpdateByFilterInput!, filter: NotificationFilter): NotificationManyResponse!
  patronCreate(data: PatronCreateInput!): Patron!
  patronCreateMany(data: [PatronCreateManyInput]!): PatronManyResponse!
  patronDelete(data: PatronDeleteInput, filter: PatronKeyFilter, force: Boolean): SuccessResponse
  patronDeleteByFilter(filter: PatronFilter!, force: Boolean): SuccessResponse
  patronDestroy(filter: PatronKeyFilter, force: Boolean): SuccessResponse
  patronDestroyByFilter(filter: PatronFilter!, force: Boolean): SuccessResponse
  patronRestore(id: String!): Patron!
  patronUpdate(data: PatronUpdateInput!, destroyDetached: Boolean, filter: PatronKeyFilter, force: Boolean): Patron!
  patronUpdateByFilter(data: PatronUpdateByFilterInput!, filter: PatronFilter): PatronManyResponse!
  prepareDeploy: DeployDataResponse! @deprecated(reason: "No longer supported. Use `system.prepareDeploy` instead.")
  recommendationCreate(data: RecommendationCreateInput!): Recommendation!
  recommendationCreateMany(data: [RecommendationCreateManyInput]!): RecommendationManyResponse!
  recommendationDelete(data: RecommendationDeleteInput, filter: RecommendationKeyFilter, force: Boolean): SuccessResponse
  recommendationDeleteByFilter(filter: RecommendationFilter!, force: Boolean): SuccessResponse
  recommendationDestroy(filter: RecommendationKeyFilter, force: Boolean): SuccessResponse
  recommendationDestroyByFilter(filter: RecommendationFilter!, force: Boolean): SuccessResponse
  recommendationRestore(id: String!): Recommendation!
  recommendationUpdate(data: RecommendationUpdateInput!, destroyDetached: Boolean, filter: RecommendationKeyFilter, force: Boolean): Recommendation!
  recommendationUpdateByFilter(data: RecommendationUpdateByFilterInput!, filter: RecommendationFilter): RecommendationManyResponse!
  reviewCreate(data: ReviewCreateInput!): Review!
  reviewCreateMany(data: [ReviewCreateManyInput]!): ReviewManyResponse!
  reviewDelete(data: ReviewDeleteInput, filter: ReviewKeyFilter, force: Boolean): SuccessResponse
  reviewDeleteByFilter(filter: ReviewFilter!, force: Boolean): SuccessResponse
  reviewDestroy(filter: ReviewKeyFilter, force: Boolean): SuccessResponse
  reviewDestroyByFilter(filter: ReviewFilter!, force: Boolean): SuccessResponse
  reviewRestore(id: String!): Review!
  reviewUpdate(data: ReviewUpdateInput!, destroyDetached: Boolean, filter: ReviewKeyFilter, force: Boolean): Review!
  reviewUpdateByFilter(data: ReviewUpdateByFilterInput!, filter: ReviewFilter): ReviewManyResponse!
  roleCreate(data: RoleCreateInput!): Role!
  roleCreateMany(data: [RoleCreateManyInput]!): RoleManyResponse!
  roleDelete(data: RoleDeleteInput, filter: RoleKeyFilter, force: Boolean): SuccessResponse
  roleDeleteByFilter(filter: RoleFilter!, force: Boolean): SuccessResponse
  roleDestroy(filter: RoleKeyFilter, force: Boolean): SuccessResponse
  roleDestroyByFilter(filter: RoleFilter!, force: Boolean): SuccessResponse
  roleRestore(id: String!): Role!
  roleUpdate(data: RoleUpdateInput!, destroyDetached: Boolean, filter: RoleKeyFilter, force: Boolean): Role!
  roleUpdateByFilter(data: RoleUpdateByFilterInput!, filter: RoleFilter): RoleManyResponse!
  sendInvitationTo8base(inviteEmail: String!): SuccessResponse
  settingsUpdate(data: SettingUpdateInput!): Setting!
  system: SystemMutation
  tableCreate(data: TableCreateInput!): Table! @deprecated(reason: "No longer supported. Use `system.tableCreate` instead.")
  tableDelete(data: TableDeleteInput!): SuccessResponse! @deprecated(reason: "No longer supported. Use `system.tableDelete` instead.")
  tableUpdate(data: TableUpdateInput!): Table! @deprecated(reason: "No longer supported. Use `system.tableUpdate` instead.")
  userChangePassword(data: ChangePasswordInput!): SuccessResponse
  userCreate(data: UserCreateInput!): User!
  userCreateMany(data: [UserCreateManyInput]!): UserManyResponse!
  userDelete(data: UserDeleteInput, filter: UserKeyFilter, force: Boolean): SuccessResponse
  userDeleteByFilter(filter: UserFilter!, force: Boolean): SuccessResponse
  userDestroy(filter: UserKeyFilter, force: Boolean): SuccessResponse
  userDestroyByFilter(filter: UserFilter!, force: Boolean): SuccessResponse
  userLogin(data: UserLoginInput!): LoginResponse
  userPasswordForgot(data: PasswordForgotInput!): SuccessResponse
  userPasswordForgotConfirm(data: PasswordForgotConfirmInput!): SuccessResponse
  userRefreshToken(data: RefreshTokenInput!): Auth
  userRestore(id: String!): User!
  userSignUp(authProfileId: ID, user: UserCreateInput!): User! @deprecated(reason: "No longer supported. Use `userSignUpWithToken` instead.")
  userSignUpResend(data: SignUpResendInput!): SuccessResponse @deprecated(reason: "No longer supported. Use `userVerificationEmailResend` instead.")
  userSignUpWithPassword(authProfileId: ID, password: String!, user: UserCreateInput!): User!
  userSignUpWithToken(authProfileId: ID, user: UserCreateInput!): User!
  userUpdate(data: UserUpdateInput!, destroyDetached: Boolean, filter: UserKeyFilter, force: Boolean): User!
  userUpdateByFilter(data: UserUpdateByFilterInput!, filter: UserFilter): UserManyResponse!
  userVerificationEmailResend(authProfileId: ID, data: VerificationEmailResendInput!): SuccessResponse
  viewCreate(data: ViewCreateInput!): Table! @deprecated(reason: "No longer supported. Use `system.viewCreate` instead.")
  viewUpdate(data: ViewUpdateInput!): Table!
  workspaceCreate(data: WorkspaceCreateMutationInput!): WorkspaceCreateResponse @deprecated(reason: "No longer supported. Use `system.workspaceCreate` instead.")
  workspaceCreateAsync(data: WorkspaceCreateMutationInput!): WorkspaceCreateResponse @deprecated(reason: "No longer supported. Use `system.workspaceCreateAsync` instead.")
  workspaceDelete(data: WorkspaceDeleteMutationInput!): SuccessResponse
  workspaceLeave(force: Boolean): SuccessResponse @deprecated(reason: "No longer supported. Use `system.workspaceLeave` instead.")
  workspaceUpdate(data: WorkspaceUpdateMutationInput!): WorkspaceUpdateResponse @deprecated(reason: "No longer supported. Use `system.workspaceUpdate` instead.")
}

enum MutationType {
  create
  delete
  destroy
  update
}

type Notification {
  _description: String
  createdAt: DateTime
  deletedAt: Int
  id: ID
  is_read: Boolean
  message: String
  recipient_id: User
  updatedAt: DateTime
}

"""Notifications create input"""
input NotificationCreateInput {
  is_read: Boolean
  message: String
  recipient_id: NotificationsRecipient_idRelationInput
}

"""Notifications create many input"""
input NotificationCreateManyInput {
  is_read: Boolean
  message: String
  recipient_id: NotificationsRecipient_idManyRelationInput
}

"""Notifications delete input"""
input NotificationDeleteInput {
  force: Boolean
  id: ID
}

"""NotificationFieldsPermissions create input"""
input NotificationFieldsPermissions {
  createdAt: Boolean
  is_read: Boolean
  message: Boolean
  updatedAt: Boolean
}

input NotificationFilter {
  AND: [NotificationFilter!]
  OR: [NotificationFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  is_read: BoolPredicate
  message: StringPredicate
  recipient_id: UserFilter
  updatedAt: DateTimePredicate
}

input NotificationGroupBy {
  first: Int
  having: Having
  last: Int
  query: NotificationGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input NotificationGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  createdAt: [GroupByField!]
  id: [GroupByField!]
  is_read: [GroupByField!]
  message: [GroupByField!]
  recipient_id: UserGroupByQuery
  updatedAt: [GroupByField!]
}

input NotificationKeyFilter {
  id: ID
}

"""NotificationListResponse output"""
type NotificationListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Notification!]!
}

"""NotificationManyResponse output"""
type NotificationManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [Notification!]!
}

"""No longer supported. Use `sort` instead."""
enum NotificationOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  is_read_ASC
  is_read_DESC
  message_ASC
  message_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""Notifications subscription payload"""
type NotificationPayload {
  mutation: MutationType!
  node: Notification
  previousValues: Notification
  updatedFields: [String]
}

input NotificationSort {
  createdAt: SortOrder
  deletedAt: SortOrder
  id: SortOrder
  is_read: SortOrder
  message: SortOrder
  recipient_id: UserSort
  updatedAt: SortOrder
}

enum NotificationStatusType {
  done
}

"""Notifications subscription filter"""
input NotificationSubscriptionFilter {
  mutation_in: [MutationType]
  node: NotificationFilter
  updatedFields: UpdatedFieldsFilter
}

"""Notifications update input"""
input NotificationUpdateByFilterInput {
  is_read: [UpdateByFilterBooleanSwitchInput]
  message: [UpdateByFilterStringInput]
}

"""Notifications update input"""
input NotificationUpdateInput {
  id: ID
  is_read: Boolean
  message: String
  recipient_id: NotificationsRecipient_idUpdateRelationInput
}

input Notification_PermissionFilter {
  AND: [Notification_PermissionFilter!]
  OR: [Notification_PermissionFilter!]
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  is_read: BoolPredicate
  message: StringPredicate
  recipient_id: User_PermissionFilter
  updatedAt: DateTimePredicate
}

"""Notifications relation input"""
input NotificationsRecipient_idManyRelationInput {
  connect: UserKeyFilter
}

"""Notifications relation input"""
input NotificationsRecipient_idRelationInput {
  connect: UserKeyFilter
  create: Notifications_UserCreateInput
}

"""Notifications relation input"""
input NotificationsRecipient_idUpdateRelationInput {
  connect: UserKeyFilter
  create: Notifications_UserCreateInput
  disconnect: UserKeyFilter
  reconnect: UserKeyFilter
  update: Notifications_UserUpdateInput
}

"""Users create input from Notifications"""
input Notifications_UserCreateInput {
  LibraryStaff: UsersLibraryStaffRelationInput
  Notifications: UsersNotificationsRelationInput
  Patrons: UsersPatronsRelationInput
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""Users update input from Notifications"""
input Notifications_UserUpdateInput {
  LibraryStaff: UsersLibraryStaffUpdateRelationInput
  Notifications: UsersNotificationsUpdateRelationInput
  Patrons: UsersPatronsUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

"""Number Field Attributes"""
type NumberFieldTypeAttributes {
  autoIncrement: Boolean
  currency: String
  format: String!
  isBigInt: Boolean
  maxValue: Float
  minValue: Float
  precision: Int
}

"""Number Type Format Enum"""
enum NumberTypeFormatEnum {
  CURRENCY
  FRACTION
  NUMBER
  PERCENTAGE
  SCIENTIFIC
}

type OrganizationUpgradeResponse {
  organizationId: String!
}

type OrganizationUserInvitationResponse {
  invitationId: String!
}

"""PasswordForgotConfirmInput"""
input PasswordForgotConfirmInput {
  authProfileId: ID!
  code: String!
  email: String!
  newPassword: String!
}

"""PasswordForgotInput"""
input PasswordForgotInput {
  authProfileId: ID!
  email: String!
}

type Patron {
  Holds: Hold
  Loans: Loan
  Recommendations: Recommendation
  Reviews: Review
  _description: String
  borrowing_history: JSON
  createdAt: DateTime
  deletedAt: Int
  id: ID
  membership_status: String
  updatedAt: DateTime
  user_id: User
}

"""Patrons create input"""
input PatronCreateInput {
  Holds: PatronsHoldsRelationInput
  Loans: PatronsLoansRelationInput
  Recommendations: PatronsRecommendationsRelationInput
  Reviews: PatronsReviewsRelationInput
  borrowing_history: JSON!
  membership_status: String
  user_id: PatronsUser_idRelationInput
}

"""Patrons create many input"""
input PatronCreateManyInput {
  Holds: PatronsHoldsManyRelationInput!
  Loans: PatronsLoansManyRelationInput!
  Recommendations: PatronsRecommendationsManyRelationInput!
  Reviews: PatronsReviewsManyRelationInput!
  borrowing_history: JSON!
  membership_status: String
  user_id: PatronsUser_idManyRelationInput
}

"""Patrons delete input"""
input PatronDeleteInput {
  force: Boolean
  id: ID
}

"""PatronFieldsPermissions create input"""
input PatronFieldsPermissions {
  borrowing_history: Boolean
  createdAt: Boolean
  membership_status: Boolean
  updatedAt: Boolean
}

input PatronFilter {
  AND: [PatronFilter!]
  Holds: HoldFilter
  Loans: LoanFilter
  OR: [PatronFilter!]
  Recommendations: RecommendationFilter
  Reviews: ReviewFilter
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  membership_status: StringPredicate
  updatedAt: DateTimePredicate
  user_id: UserFilter
}

input PatronGroupBy {
  first: Int
  having: Having
  last: Int
  query: PatronGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input PatronGroupByQuery {
  Holds: HoldGroupByQuery
  Loans: LoanGroupByQuery
  Recommendations: RecommendationGroupByQuery
  Reviews: ReviewGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  borrowing_history: [GroupByField!]
  createdAt: [GroupByField!]
  id: [GroupByField!]
  membership_status: [GroupByField!]
  updatedAt: [GroupByField!]
  user_id: UserGroupByQuery
}

input PatronKeyFilter {
  id: ID
}

"""PatronListResponse output"""
type PatronListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Patron!]!
}

"""PatronManyResponse output"""
type PatronManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [Patron!]!
}

"""No longer supported. Use `sort` instead."""
enum PatronOrderBy {
  borrowing_history_ASC
  borrowing_history_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  membership_status_ASC
  membership_status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""Patrons subscription payload"""
type PatronPayload {
  mutation: MutationType!
  node: Patron
  previousValues: Patron
  updatedFields: [String]
}

input PatronSort {
  Holds: HoldSort
  Loans: LoanSort
  Recommendations: RecommendationSort
  Reviews: ReviewSort
  createdAt: SortOrder
  deletedAt: SortOrder
  id: SortOrder
  membership_status: SortOrder
  updatedAt: SortOrder
  user_id: UserSort
}

"""Patrons subscription filter"""
input PatronSubscriptionFilter {
  mutation_in: [MutationType]
  node: PatronFilter
  updatedFields: UpdatedFieldsFilter
}

"""Patrons update input"""
input PatronUpdateByFilterInput {
  borrowing_history: [UpdateByFilterJsonInput]
  membership_status: [UpdateByFilterStringInput]
}

"""Patrons update input"""
input PatronUpdateInput {
  Holds: PatronsHoldsUpdateRelationInput
  Loans: PatronsLoansUpdateRelationInput
  Recommendations: PatronsRecommendationsUpdateRelationInput
  Reviews: PatronsReviewsUpdateRelationInput
  borrowing_history: JSON
  id: ID
  membership_status: String
  user_id: PatronsUser_idUpdateRelationInput
}

input Patron_PermissionFilter {
  AND: [Patron_PermissionFilter!]
  Holds: Hold_PermissionFilter
  Loans: Loan_PermissionFilter
  OR: [Patron_PermissionFilter!]
  Recommendations: Recommendation_PermissionFilter
  Reviews: Review_PermissionFilter
  _fullText: String
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  membership_status: StringPredicate
  updatedAt: DateTimePredicate
  user_id: User_PermissionFilter
}

"""Holds create input from patron_id"""
input Patron_id_HoldCreateInput {
  book_id: HoldsBook_idRelationInput
  patron_id: HoldsPatron_idRelationInput
  position_in_queue: Int
}

"""Holds update input from patron_id"""
input Patron_id_HoldUpdateInput {
  book_id: HoldsBook_idUpdateRelationInput
  patron_id: HoldsPatron_idUpdateRelationInput
  position_in_queue: Int
}

"""Loans create input from patron_id"""
input Patron_id_LoanCreateInput {
  book_id: LoansBook_idRelationInput
  due_date: DateTime
  patron_id: LoansPatron_idRelationInput
  status: String
}

"""Loans update input from patron_id"""
input Patron_id_LoanUpdateInput {
  book_id: LoansBook_idUpdateRelationInput
  due_date: DateTime
  patron_id: LoansPatron_idUpdateRelationInput
  status: String
}

"""Recommendations create input from patron_id"""
input Patron_id_RecommendationCreateInput {
  book_id: RecommendationsBook_idRelationInput
  patron_id: RecommendationsPatron_idRelationInput
  reason: String!
}

"""Recommendations update input from patron_id"""
input Patron_id_RecommendationUpdateInput {
  book_id: RecommendationsBook_idUpdateRelationInput
  patron_id: RecommendationsPatron_idUpdateRelationInput
  reason: String
}

"""Reviews create input from patron_id"""
input Patron_id_ReviewCreateInput {
  book_id: ReviewsBook_idRelationInput
  comment: String!
  patron_id: ReviewsPatron_idRelationInput
  rating: Int
}

"""Reviews update input from patron_id"""
input Patron_id_ReviewUpdateInput {
  book_id: ReviewsBook_idUpdateRelationInput
  comment: String
  patron_id: ReviewsPatron_idUpdateRelationInput
  rating: Int
}

"""Patrons relation input"""
input PatronsHoldsManyRelationInput {
  connect: HoldKeyFilter
}

"""Patrons relation input"""
input PatronsHoldsRelationInput {
  connect: HoldKeyFilter
  create: Patron_id_HoldCreateInput
}

"""Patrons relation input"""
input PatronsHoldsUpdateRelationInput {
  connect: HoldKeyFilter
  create: Patron_id_HoldCreateInput
  disconnect: HoldKeyFilter
  reconnect: HoldKeyFilter
  update: Patron_id_HoldUpdateInput
}

"""Patrons relation input"""
input PatronsLoansManyRelationInput {
  connect: LoanKeyFilter
}

"""Patrons relation input"""
input PatronsLoansRelationInput {
  connect: LoanKeyFilter
  create: Patron_id_LoanCreateInput
}

"""Patrons relation input"""
input PatronsLoansUpdateRelationInput {
  connect: LoanKeyFilter
  create: Patron_id_LoanCreateInput
  disconnect: LoanKeyFilter
  reconnect: LoanKeyFilter
  update: Patron_id_LoanUpdateInput
}

"""Patrons relation input"""
input PatronsRecommendationsManyRelationInput {
  connect: RecommendationKeyFilter
}

"""Patrons relation input"""
input PatronsRecommendationsRelationInput {
  connect: RecommendationKeyFilter
  create: Patron_id_RecommendationCreateInput
}

"""Patrons relation input"""
input PatronsRecommendationsUpdateRelationInput {
  connect: RecommendationKeyFilter
  create: Patron_id_RecommendationCreateInput
  disconnect: RecommendationKeyFilter
  reconnect: RecommendationKeyFilter
  update: Patron_id_RecommendationUpdateInput
}

"""Patrons relation input"""
input PatronsReviewsManyRelationInput {
  connect: ReviewKeyFilter
}

"""Patrons relation input"""
input PatronsReviewsRelationInput {
  connect: ReviewKeyFilter
  create: Patron_id_ReviewCreateInput
}

"""Patrons relation input"""
input PatronsReviewsUpdateRelationInput {
  connect: ReviewKeyFilter
  create: Patron_id_ReviewCreateInput
  disconnect: ReviewKeyFilter
  reconnect: ReviewKeyFilter
  update: Patron_id_ReviewUpdateInput
}

"""Patrons relation input"""
input PatronsUser_idManyRelationInput {
  connect: UserKeyFilter
}

"""Patrons relation input"""
input PatronsUser_idRelationInput {
  connect: UserKeyFilter
  create: Patrons_UserCreateInput
}

"""Patrons relation input"""
input PatronsUser_idUpdateRelationInput {
  connect: UserKeyFilter
  create: Patrons_UserCreateInput
  disconnect: UserKeyFilter
  reconnect: UserKeyFilter
  update: Patrons_UserUpdateInput
}

"""Users create input from Patrons"""
input Patrons_UserCreateInput {
  LibraryStaff: UsersLibraryStaffRelationInput!
  Notifications: UsersNotificationsRelationInput!
  Patrons: UsersPatronsRelationInput
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""Users update input from Patrons"""
input Patrons_UserUpdateInput {
  LibraryStaff: UsersLibraryStaffUpdateRelationInput
  Notifications: UsersNotificationsUpdateRelationInput
  Patrons: UsersPatronsUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

input PatternFunctionArguments {
  escape: String
  pattern: String!
}

type Permission {
  _description: String
  appId: String
  createdAt: DateTime
  createdBy: User
  permission: JSON
  resource: String
  resourceType: String
  role: Role
  updatedAt: DateTime
}

input PermissionFilter {
  AND: [PermissionFilter!]
  OR: [PermissionFilter!]
  _fullText: String
  appId: StringPredicate
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  resource: StringPredicate
  resourceType: StringPredicate
  role: RoleFilter
  updatedAt: DateTimePredicate
}

input PermissionGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  appId: [GroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  permission: [GroupByField!]
  resource: [GroupByField!]
  resourceType: [GroupByField!]
  role: RoleGroupByQuery
  updatedAt: [GroupByField!]
}

"""Permission Filter"""
input PermissionInputFilter {
  action: String
  applicationName: String
  resource: String
  resourceType: PermissionResourceTypeEnum
}

"""PermissionListResponse output"""
type PermissionListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Permission!]!
}

"""Permissions subscription payload"""
type PermissionPayload {
  mutation: MutationType!
  node: Permission
  previousValues: Permission
  updatedFields: [String]
}

input PermissionRelationFilter {
  every: PermissionFilter
  none: PermissionFilter
  some: PermissionFilter
}

enum PermissionResourceTypeEnum {
  custom
  data
}

"""Permissions subscription filter"""
input PermissionSubscriptionFilter {
  mutation_in: [MutationType]
  node: PermissionFilter
  updatedFields: UpdatedFieldsFilter
}

input Permission_PermissionFilter {
  AND: [Permission_PermissionFilter!]
  OR: [Permission_PermissionFilter!]
  _fullText: String
  appId: StringPredicate
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  resource: StringPredicate
  resourceType: StringPredicate
  role: Role_PermissionFilter
  updatedAt: DateTimePredicate
}

input Permission_PermissionRelationFilter {
  every: Permission_PermissionFilter
  none: Permission_PermissionFilter
  some: Permission_PermissionFilter
}

"""custom permissions input"""
input PermissionsCustom {
  data: PermissionsCustomData
  logic: PermissionsCustomLogic
  settings: PermissionsCustomSettings
  users: PermissionsCustomUsers
}

input PermissionsCustomData {
  schemaManagement: PermissionsCustomDataSchemaManagement
  viewerAccess: PermissionsCustomDataViewerAccess
}

input PermissionsCustomDataSchemaManagement {
  allow: Boolean!
}

input PermissionsCustomDataViewerAccess {
  allow: Boolean!
}

input PermissionsCustomLogic {
  deploy: PermissionsCustomLogicDeploy
  invoke: PermissionsCustomLogicInvoke
  logs: PermissionsCustomLogicLogs
  view: PermissionsCustomLogicView
}

input PermissionsCustomLogicDeploy {
  allow: Boolean!
}

input PermissionsCustomLogicInvoke {
  allow: Boolean!
}

input PermissionsCustomLogicLogs {
  allow: Boolean!
}

input PermissionsCustomLogicView {
  allow: Boolean!
}

input PermissionsCustomSettings {
  workspaceAdministration: PermissionsCustomSettingsWorkspaceAdministration
}

input PermissionsCustomSettingsWorkspaceAdministration {
  allow: Boolean!
}

input PermissionsCustomUsers {
  teamAdministration: PermissionsCustomUsersTeamAdministration
}

input PermissionsCustomUsersTeamAdministration {
  allow: Boolean!
}

"""Schema tables permissions input"""
input PermissionsData {
  Books: PermissionsDataBooks
  DigitalResources: PermissionsDataDigitalResources
  Events: PermissionsDataEvents
  Files: PermissionsDataFiles
  FilesSettings: PermissionsDataFilesSettings
  Holds: PermissionsDataHolds
  LibraryStaff: PermissionsDataLibraryStaff
  Loans: PermissionsDataLoans
  Notifications: PermissionsDataNotifications
  Patrons: PermissionsDataPatrons
  Recommendations: PermissionsDataRecommendations
  Reviews: PermissionsDataReviews
  Roles: PermissionsDataRoles
  Users: PermissionsDataUsers
}

input PermissionsDataBooks {
  create: PermissionsDataBooksCreate
  delete: PermissionsDataBooksDelete
  destroy: PermissionsDataBooksDestroy
  read: PermissionsDataBooksRead
  update: PermissionsDataBooksUpdate
}

input PermissionsDataBooksCreate {
  allow: Boolean!
}

input PermissionsDataBooksDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataBooksDestroy {
  allow: Boolean!
}

input PermissionsDataBooksRead {
  allow: Boolean!
  fields: BookFieldsPermissions
  filter: Book_PermissionFilter
}

input PermissionsDataBooksUpdate {
  allow: Boolean!
  fields: BookFieldsPermissions
  filter: Book_PermissionFilter
}

input PermissionsDataDigitalResources {
  create: PermissionsDataDigitalResourcesCreate
  delete: PermissionsDataDigitalResourcesDelete
  destroy: PermissionsDataDigitalResourcesDestroy
  read: PermissionsDataDigitalResourcesRead
  update: PermissionsDataDigitalResourcesUpdate
}

input PermissionsDataDigitalResourcesCreate {
  allow: Boolean!
}

input PermissionsDataDigitalResourcesDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataDigitalResourcesDestroy {
  allow: Boolean!
}

input PermissionsDataDigitalResourcesRead {
  allow: Boolean!
  fields: DigitalResourceFieldsPermissions
  filter: DigitalResource_PermissionFilter
}

input PermissionsDataDigitalResourcesUpdate {
  allow: Boolean!
  fields: DigitalResourceFieldsPermissions
  filter: DigitalResource_PermissionFilter
}

input PermissionsDataEvents {
  create: PermissionsDataEventsCreate
  delete: PermissionsDataEventsDelete
  destroy: PermissionsDataEventsDestroy
  read: PermissionsDataEventsRead
  update: PermissionsDataEventsUpdate
}

input PermissionsDataEventsCreate {
  allow: Boolean!
}

input PermissionsDataEventsDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataEventsDestroy {
  allow: Boolean!
}

input PermissionsDataEventsRead {
  allow: Boolean!
  fields: EventFieldsPermissions
  filter: Event_PermissionFilter
}

input PermissionsDataEventsUpdate {
  allow: Boolean!
  fields: EventFieldsPermissions
  filter: Event_PermissionFilter
}

input PermissionsDataFiles {
  create: PermissionsDataFilesCreate
  delete: PermissionsDataFilesDelete
  destroy: PermissionsDataFilesDestroy
  read: PermissionsDataFilesRead
  update: PermissionsDataFilesUpdate
}

input PermissionsDataFilesCreate {
  allow: Boolean!
}

input PermissionsDataFilesDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataFilesDestroy {
  allow: Boolean!
}

input PermissionsDataFilesRead {
  allow: Boolean!
  fields: FileFieldsPermissions
  filter: File_PermissionFilter
}

input PermissionsDataFilesSettings {
  create: PermissionsDataFilesSettingsCreate
  delete: PermissionsDataFilesSettingsDelete
  destroy: PermissionsDataFilesSettingsDestroy
  read: PermissionsDataFilesSettingsRead
  update: PermissionsDataFilesSettingsUpdate
}

input PermissionsDataFilesSettingsCreate {
  allow: Boolean!
}

input PermissionsDataFilesSettingsDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataFilesSettingsDestroy {
  allow: Boolean!
}

input PermissionsDataFilesSettingsRead {
  allow: Boolean!
  fields: FilesSettingFieldsPermissions
  filter: FilesSetting_PermissionFilter
}

input PermissionsDataFilesSettingsUpdate {
  allow: Boolean!
  fields: FilesSettingFieldsPermissions
  filter: FilesSetting_PermissionFilter
}

input PermissionsDataFilesUpdate {
  allow: Boolean!
  fields: FileFieldsPermissions
  filter: File_PermissionFilter
}

input PermissionsDataHolds {
  create: PermissionsDataHoldsCreate
  delete: PermissionsDataHoldsDelete
  destroy: PermissionsDataHoldsDestroy
  read: PermissionsDataHoldsRead
  update: PermissionsDataHoldsUpdate
}

input PermissionsDataHoldsCreate {
  allow: Boolean!
}

input PermissionsDataHoldsDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataHoldsDestroy {
  allow: Boolean!
}

input PermissionsDataHoldsRead {
  allow: Boolean!
  fields: HoldFieldsPermissions
  filter: Hold_PermissionFilter
}

input PermissionsDataHoldsUpdate {
  allow: Boolean!
  fields: HoldFieldsPermissions
  filter: Hold_PermissionFilter
}

input PermissionsDataLibraryStaff {
  create: PermissionsDataLibraryStaffCreate
  delete: PermissionsDataLibraryStaffDelete
  destroy: PermissionsDataLibraryStaffDestroy
  read: PermissionsDataLibraryStaffRead
  update: PermissionsDataLibraryStaffUpdate
}

input PermissionsDataLibraryStaffCreate {
  allow: Boolean!
}

input PermissionsDataLibraryStaffDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataLibraryStaffDestroy {
  allow: Boolean!
}

input PermissionsDataLibraryStaffRead {
  allow: Boolean!
  fields: LibraryStaffFieldsPermissions
  filter: LibraryStaff_PermissionFilter
}

input PermissionsDataLibraryStaffUpdate {
  allow: Boolean!
  fields: LibraryStaffFieldsPermissions
  filter: LibraryStaff_PermissionFilter
}

input PermissionsDataLoans {
  create: PermissionsDataLoansCreate
  delete: PermissionsDataLoansDelete
  destroy: PermissionsDataLoansDestroy
  read: PermissionsDataLoansRead
  update: PermissionsDataLoansUpdate
}

input PermissionsDataLoansCreate {
  allow: Boolean!
}

input PermissionsDataLoansDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataLoansDestroy {
  allow: Boolean!
}

input PermissionsDataLoansRead {
  allow: Boolean!
  fields: LoanFieldsPermissions
  filter: Loan_PermissionFilter
}

input PermissionsDataLoansUpdate {
  allow: Boolean!
  fields: LoanFieldsPermissions
  filter: Loan_PermissionFilter
}

input PermissionsDataNotifications {
  create: PermissionsDataNotificationsCreate
  delete: PermissionsDataNotificationsDelete
  destroy: PermissionsDataNotificationsDestroy
  read: PermissionsDataNotificationsRead
  update: PermissionsDataNotificationsUpdate
}

input PermissionsDataNotificationsCreate {
  allow: Boolean!
}

input PermissionsDataNotificationsDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataNotificationsDestroy {
  allow: Boolean!
}

input PermissionsDataNotificationsRead {
  allow: Boolean!
  fields: NotificationFieldsPermissions
  filter: Notification_PermissionFilter
}

input PermissionsDataNotificationsUpdate {
  allow: Boolean!
  fields: NotificationFieldsPermissions
  filter: Notification_PermissionFilter
}

input PermissionsDataPatrons {
  create: PermissionsDataPatronsCreate
  delete: PermissionsDataPatronsDelete
  destroy: PermissionsDataPatronsDestroy
  read: PermissionsDataPatronsRead
  update: PermissionsDataPatronsUpdate
}

input PermissionsDataPatronsCreate {
  allow: Boolean!
}

input PermissionsDataPatronsDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataPatronsDestroy {
  allow: Boolean!
}

input PermissionsDataPatronsRead {
  allow: Boolean!
  fields: PatronFieldsPermissions
  filter: Patron_PermissionFilter
}

input PermissionsDataPatronsUpdate {
  allow: Boolean!
  fields: PatronFieldsPermissions
  filter: Patron_PermissionFilter
}

input PermissionsDataRecommendations {
  create: PermissionsDataRecommendationsCreate
  delete: PermissionsDataRecommendationsDelete
  destroy: PermissionsDataRecommendationsDestroy
  read: PermissionsDataRecommendationsRead
  update: PermissionsDataRecommendationsUpdate
}

input PermissionsDataRecommendationsCreate {
  allow: Boolean!
}

input PermissionsDataRecommendationsDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataRecommendationsDestroy {
  allow: Boolean!
}

input PermissionsDataRecommendationsRead {
  allow: Boolean!
  fields: RecommendationFieldsPermissions
  filter: Recommendation_PermissionFilter
}

input PermissionsDataRecommendationsUpdate {
  allow: Boolean!
  fields: RecommendationFieldsPermissions
  filter: Recommendation_PermissionFilter
}

input PermissionsDataReviews {
  create: PermissionsDataReviewsCreate
  delete: PermissionsDataReviewsDelete
  destroy: PermissionsDataReviewsDestroy
  read: PermissionsDataReviewsRead
  update: PermissionsDataReviewsUpdate
}

input PermissionsDataReviewsCreate {
  allow: Boolean!
}

input PermissionsDataReviewsDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataReviewsDestroy {
  allow: Boolean!
}

input PermissionsDataReviewsRead {
  allow: Boolean!
  fields: ReviewFieldsPermissions
  filter: Review_PermissionFilter
}

input PermissionsDataReviewsUpdate {
  allow: Boolean!
  fields: ReviewFieldsPermissions
  filter: Review_PermissionFilter
}

input PermissionsDataRoles {
  create: PermissionsDataRolesCreate
  delete: PermissionsDataRolesDelete
  destroy: PermissionsDataRolesDestroy
  read: PermissionsDataRolesRead
  update: PermissionsDataRolesUpdate
}

input PermissionsDataRolesCreate {
  allow: Boolean!
}

input PermissionsDataRolesDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataRolesDestroy {
  allow: Boolean!
}

input PermissionsDataRolesRead {
  allow: Boolean!
  fields: RoleFieldsPermissions
  filter: Role_PermissionFilter
}

input PermissionsDataRolesUpdate {
  allow: Boolean!
  fields: RoleFieldsPermissions
  filter: Role_PermissionFilter
}

input PermissionsDataUsers {
  create: PermissionsDataUsersCreate
  delete: PermissionsDataUsersDelete
  destroy: PermissionsDataUsersDestroy
  read: PermissionsDataUsersRead
  update: PermissionsDataUsersUpdate
}

input PermissionsDataUsersCreate {
  allow: Boolean!
}

input PermissionsDataUsersDelete {
  allow: Boolean!
  restore: Boolean
  review: Boolean
}

input PermissionsDataUsersDestroy {
  allow: Boolean!
}

input PermissionsDataUsersRead {
  allow: Boolean!
  fields: UserFieldsPermissions
  filter: User_PermissionFilter
}

input PermissionsDataUsersUpdate {
  allow: Boolean!
  fields: UserFieldsPermissions
  filter: User_PermissionFilter
}

"""PermissionsInput create input"""
input PermissionsInput {
  custom: PermissionsCustom
  data: PermissionsData
}

type ProjectItemWS {
  description: String
  id: ID!
  image: WorkspaceImage
  name: String!
  region: String
}

type Query {
  apiToken(id: ID, name: String, withDeleted: Boolean): ApiToken
  apiTokensList(after: String, before: String, filter: ApiTokenFilter, first: Int, groupBy: ApiTokenGroupBy, last: Int, orderBy: [ApiTokenOrderBy], skip: Int, sort: [ApiTokenSort!], withDeleted: Boolean): ApiTokenListResponse!
  application(id: String!): Application @deprecated(reason: "No longer supported. Use `system.application` instead.")
  applicationsList: ApplicationListResponse @deprecated(reason: "No longer supported. Use `system.applicationsList` instead.")
  asyncSessionStatus(sessionId: String!): AsyncSessionStatusResponse @deprecated(reason: "No longer supported. Use `system.asyncSessionStatus` instead.")
  authenticationProfile(id: ID, name: String, withDeleted: Boolean): AuthenticationProfile
  authenticationProfilesList(after: String, before: String, filter: AuthenticationProfileFilter, first: Int, groupBy: AuthenticationProfileGroupBy, last: Int, orderBy: [AuthenticationProfileOrderBy], skip: Int, sort: [AuthenticationProfileSort!], withDeleted: Boolean): AuthenticationProfileListResponse!
  authenticationSettings: AuthenticationSetting
  billingCurrentPlan(organizationId: ID): BillingCurrentPlanResponse @deprecated(reason: "No longer supported. Use `system.billingCurrentPlan` instead.")
  billingDetails: BillingDetailsResponse @deprecated(reason: "No longer supported. Use `system.memberPaymentDetails, system.organizationPaymentDetails or system.workspacePaymentDetails` instead.")
  billingInvoicesList(after: ID, before: ID, by: BillingInvoicesListFilterType, limit: Int, projectId: ID): BillingInvoicesListResponse! @deprecated(reason: "No longer supported. Use `system.memberBillingHistory, system.organizationBillingHistory or system.workspaceBillingHistory` instead.")
  billingMetricUsageQuotasList(organizationId: ID, projectId: ID): BillingMetricUsageQuotasListResponse! @deprecated(reason: "No longer supported. Use `system.billingMetricUsageQuotasList` instead.")
  billingMetricUsagesList(filter: BillingMetricUsagesListFilter, organizationId: ID, projectId: ID): BillingMetricUsagesListResponse! @deprecated(reason: "No longer supported. Use `system.billingMetricUsagesList` instead.")
  book(id: ID, isbn: String, withDeleted: Boolean): Book
  booksList(after: String, before: String, filter: BookFilter, first: Int, groupBy: BookGroupBy, last: Int, orderBy: [BookOrderBy], skip: Int, sort: [BookSort!], withDeleted: Boolean): BookListResponse!
  companyName: String
  deployStatus(buildName: String!): DeployStatusResult! @deprecated(reason: "No longer supported. Use `system.deployStatus` instead.")
  digitalResource(id: ID, withDeleted: Boolean): DigitalResource
  digitalResourcesList(after: String, before: String, filter: DigitalResourceFilter, first: Int, groupBy: DigitalResourceGroupBy, last: Int, orderBy: [DigitalResourceOrderBy], skip: Int, sort: [DigitalResourceSort!], withDeleted: Boolean): DigitalResourceListResponse!
  environmentVariable(id: ID, name: String, withDeleted: Boolean): EnvironmentVariable
  environmentVariablesList(after: String, before: String, filter: EnvironmentVariableFilter, first: Int, groupBy: EnvironmentVariableGroupBy, last: Int, orderBy: [EnvironmentVariableOrderBy], skip: Int, sort: [EnvironmentVariableSort!], withDeleted: Boolean): EnvironmentVariableListResponse!
  event(id: ID, withDeleted: Boolean): Event
  eventsList(after: String, before: String, filter: EventFilter, first: Int, groupBy: EventGroupBy, last: Int, orderBy: [EventOrderBy], skip: Int, sort: [EventSort!], withDeleted: Boolean): EventListResponse!
  file(fileId: String, id: ID, withDeleted: Boolean): File
  fileUploadInfo: FileUploadInfoResponse @deprecated(reason: "No longer supported. Use `fileUploadSignInfo` instead.")
  filesList(after: String, before: String, filter: FileFilter, first: Int, groupBy: FileGroupBy, last: Int, orderBy: [FileOrderBy], skip: Int, sort: [FileSort!], withDeleted: Boolean): FileListResponse!
  filesSetting(filemanagername: String, id: ID, withDeleted: Boolean): FilesSetting
  filesSettingsList(after: String, before: String, filter: FilesSettingFilter, first: Int, groupBy: FilesSettingGroupBy, last: Int, orderBy: [FilesSettingOrderBy], skip: Int, sort: [FilesSettingSort!], withDeleted: Boolean): FilesSettingListResponse!
  functionsList(applicationId: String, filter: FunctionInfoFilter, orderBy: [FunctionInfoOrderBy]): FunctionListResponse @deprecated(reason: "No longer supported. Use `system.functionsList` instead.")
  functionsVersionCheck: FunctionInfoCheck
  hold(id: ID, withDeleted: Boolean): Hold
  holdsList(after: String, before: String, filter: HoldFilter, first: Int, groupBy: HoldGroupBy, last: Int, orderBy: [HoldOrderBy], skip: Int, sort: [HoldSort!], withDeleted: Boolean): HoldListResponse!
  isAllowedCallbackURL(callbackURL: String!): isAllowedCallbackURLQueryResponse
  libraryStaff(id: ID, withDeleted: Boolean): LibraryStaff
  libraryStaffsList(after: String, before: String, filter: LibraryStaffFilter, first: Int, groupBy: LibraryStaffGroupBy, last: Int, orderBy: [LibraryStaffOrderBy], skip: Int, sort: [LibraryStaffSort!], withDeleted: Boolean): LibraryStaffListResponse!
  loan(id: ID, withDeleted: Boolean): Loan
  loansList(after: String, before: String, filter: LoanFilter, first: Int, groupBy: LoanGroupBy, last: Int, orderBy: [LoanOrderBy], skip: Int, sort: [LoanSort!], withDeleted: Boolean): LoanListResponse!
  logs(applicationId: String, endTime: DateTime, functionName: String!, limit: Int, startTime: DateTime): [String] @deprecated(reason: "No longer supported. Use `system.logsList` instead.")
  notification(id: ID, withDeleted: Boolean): Notification
  notificationsList(after: String, before: String, filter: NotificationFilter, first: Int, groupBy: NotificationGroupBy, last: Int, orderBy: [NotificationOrderBy], skip: Int, sort: [NotificationSort!], withDeleted: Boolean): NotificationListResponse!
  patron(id: ID, withDeleted: Boolean): Patron
  patronsList(after: String, before: String, filter: PatronFilter, first: Int, groupBy: PatronGroupBy, last: Int, orderBy: [PatronOrderBy], skip: Int, sort: [PatronSort!], withDeleted: Boolean): PatronListResponse!
  recommendation(id: ID, withDeleted: Boolean): Recommendation
  recommendationsList(after: String, before: String, filter: RecommendationFilter, first: Int, groupBy: RecommendationGroupBy, last: Int, orderBy: [RecommendationOrderBy], skip: Int, sort: [RecommendationSort!], withDeleted: Boolean): RecommendationListResponse!
  review(id: ID, withDeleted: Boolean): Review
  reviewsList(after: String, before: String, filter: ReviewFilter, first: Int, groupBy: ReviewGroupBy, last: Int, orderBy: [ReviewOrderBy], skip: Int, sort: [ReviewSort!], withDeleted: Boolean): ReviewListResponse!
  role(id: ID, name: String, withDeleted: Boolean): Role
  rolesList(after: String, before: String, filter: RoleFilter, first: Int, groupBy: RoleGroupBy, last: Int, orderBy: [RoleOrderBy], skip: Int, sort: [RoleSort!], withDeleted: Boolean): RoleListResponse!
  settings: Setting
  system: SystemQuery
  table(id: ID, name: String): Table @deprecated(reason: "No longer supported. Use `system.table` instead.")
  tableField(id: ID!): TableField @deprecated(reason: "No longer supported. Use `system.tableField` instead.")
  tablesList(filter: TableListFilter): TableListResponse! @deprecated(reason: "No longer supported. Use `system.tablesList` instead.")
  user(email: String, id: ID, withDeleted: Boolean): User
  userBillingConfiguration(filterPlanProjects: Boolean, kind: String, organizationId: ID, region: String): UserBillingConfigurationResponse!
  userBillingConfigurationArchie(ideaId: ID, kind: String, organizationId: ID, region: String): UserBillingConfigurationResponse!
  userInvitationsList: UserInvitationList @deprecated(reason: "No longer supported. Use `system.userInvitationsList` instead.")
  usersList(after: String, before: String, filter: UserFilter, first: Int, groupBy: UserGroupBy, last: Int, orderBy: [UserOrderBy], skip: Int, sort: [UserSort!], withDeleted: Boolean): UserListResponse!
  viewDryRun(sql: String!): ViewDryRunOutput
  workspacesList: WorkspaceListResponse @deprecated(reason: "No longer supported. Use `system.workspacesList` instead.")
}

"""Notifications create input from recipient_id"""
input Recipient_id_NotificationCreateInput {
  is_read: Boolean
  message: String
  recipient_id: NotificationsRecipient_idRelationInput
}

"""Notifications update input from recipient_id"""
input Recipient_id_NotificationUpdateInput {
  is_read: Boolean
  message: String
  recipient_id: NotificationsRecipient_idUpdateRelationInput
}

type Recommendation {
  _description: String
  book_id: Book
  createdAt: DateTime
  deletedAt: Int
  id: ID
  patron_id: Patron
  reason: String
  updatedAt: DateTime
}

"""Recommendations create input"""
input RecommendationCreateInput {
  book_id: RecommendationsBook_idRelationInput
  patron_id: RecommendationsPatron_idRelationInput
  reason: String!
}

"""Recommendations create many input"""
input RecommendationCreateManyInput {
  book_id: RecommendationsBook_idManyRelationInput
  patron_id: RecommendationsPatron_idManyRelationInput
  reason: String!
}

"""Recommendations delete input"""
input RecommendationDeleteInput {
  force: Boolean
  id: ID
}

"""RecommendationFieldsPermissions create input"""
input RecommendationFieldsPermissions {
  createdAt: Boolean
  reason: Boolean
  updatedAt: Boolean
}

input RecommendationFilter {
  AND: [RecommendationFilter!]
  OR: [RecommendationFilter!]
  _fullText: String
  book_id: BookFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  patron_id: PatronFilter
  reason: StringPredicate
  updatedAt: DateTimePredicate
}

input RecommendationGroupBy {
  first: Int
  having: Having
  last: Int
  query: RecommendationGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input RecommendationGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  book_id: BookGroupByQuery
  createdAt: [GroupByField!]
  id: [GroupByField!]
  patron_id: PatronGroupByQuery
  reason: [GroupByField!]
  updatedAt: [GroupByField!]
}

input RecommendationKeyFilter {
  id: ID
}

"""RecommendationListResponse output"""
type RecommendationListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Recommendation!]!
}

"""RecommendationManyResponse output"""
type RecommendationManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [Recommendation!]!
}

"""No longer supported. Use `sort` instead."""
enum RecommendationOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  reason_ASC
  reason_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""Recommendations subscription payload"""
type RecommendationPayload {
  mutation: MutationType!
  node: Recommendation
  previousValues: Recommendation
  updatedFields: [String]
}

input RecommendationSort {
  book_id: BookSort
  createdAt: SortOrder
  deletedAt: SortOrder
  id: SortOrder
  patron_id: PatronSort
  reason: SortOrder
  updatedAt: SortOrder
}

"""Recommendations subscription filter"""
input RecommendationSubscriptionFilter {
  mutation_in: [MutationType]
  node: RecommendationFilter
  updatedFields: UpdatedFieldsFilter
}

"""Recommendations update input"""
input RecommendationUpdateByFilterInput {
  reason: [UpdateByFilterStringInput]
}

"""Recommendations update input"""
input RecommendationUpdateInput {
  book_id: RecommendationsBook_idUpdateRelationInput
  id: ID
  patron_id: RecommendationsPatron_idUpdateRelationInput
  reason: String
}

input Recommendation_PermissionFilter {
  AND: [Recommendation_PermissionFilter!]
  OR: [Recommendation_PermissionFilter!]
  _fullText: String
  book_id: Book_PermissionFilter
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  patron_id: Patron_PermissionFilter
  reason: StringPredicate
  updatedAt: DateTimePredicate
}

"""Recommendations relation input"""
input RecommendationsBook_idManyRelationInput {
  connect: BookKeyFilter
}

"""Recommendations relation input"""
input RecommendationsBook_idRelationInput {
  connect: BookKeyFilter
  create: Recommendations_BookCreateInput
}

"""Recommendations relation input"""
input RecommendationsBook_idUpdateRelationInput {
  connect: BookKeyFilter
  create: Recommendations_BookCreateInput
  disconnect: BookKeyFilter
  reconnect: BookKeyFilter
  update: Recommendations_BookUpdateInput
}

"""Recommendations relation input"""
input RecommendationsPatron_idManyRelationInput {
  connect: PatronKeyFilter
}

"""Recommendations relation input"""
input RecommendationsPatron_idRelationInput {
  connect: PatronKeyFilter
  create: Recommendations_PatronCreateInput
}

"""Recommendations relation input"""
input RecommendationsPatron_idUpdateRelationInput {
  connect: PatronKeyFilter
  create: Recommendations_PatronCreateInput
  disconnect: PatronKeyFilter
  reconnect: PatronKeyFilter
  update: Recommendations_PatronUpdateInput
}

"""Books create input from Recommendations"""
input Recommendations_BookCreateInput {
  Holds: BooksHoldsRelationInput!
  Loans: BooksLoansRelationInput!
  Recommendations: BooksRecommendationsRelationInput
  Reviews: BooksReviewsRelationInput!
  author: String
  availability_status: String
  genre: String
  isbn: String
  publication_date: DateTime
  title: String
}

"""Books update input from Recommendations"""
input Recommendations_BookUpdateInput {
  Holds: BooksHoldsUpdateRelationInput
  Loans: BooksLoansUpdateRelationInput
  Recommendations: BooksRecommendationsUpdateRelationInput
  Reviews: BooksReviewsUpdateRelationInput
  author: String
  availability_status: String
  genre: String
  isbn: String
  publication_date: DateTime
  title: String
}

"""Patrons create input from Recommendations"""
input Recommendations_PatronCreateInput {
  Holds: PatronsHoldsRelationInput
  Loans: PatronsLoansRelationInput
  Recommendations: PatronsRecommendationsRelationInput
  Reviews: PatronsReviewsRelationInput
  borrowing_history: JSON!
  membership_status: String
  user_id: PatronsUser_idRelationInput
}

"""Patrons update input from Recommendations"""
input Recommendations_PatronUpdateInput {
  Holds: PatronsHoldsUpdateRelationInput
  Loans: PatronsLoansUpdateRelationInput
  Recommendations: PatronsRecommendationsUpdateRelationInput
  Reviews: PatronsReviewsUpdateRelationInput
  borrowing_history: JSON
  membership_status: String
  user_id: PatronsUser_idUpdateRelationInput
}

"""RefreshTokenInput"""
input RefreshTokenInput {
  authProfileId: ID
  email: String
  refreshToken: String!
}

"""Relation"""
type Relation {
  refField: TableField
  refFieldDisplayName: String
  refFieldIsList: Boolean
  refFieldIsRequired: Boolean
  refFieldName: String
  refTable: Table!
  relationFieldName: String
  relationTableName: String
}

"""Relation Create Input"""
input RelationCreateInput {
  refFieldDisplayName: String
  refFieldIsList: Boolean!
  refFieldIsRequired: Boolean!
  refFieldName: String
  refTableId: ID!
}

"""Relation Update Input"""
input RelationUpdateInput {
  refFieldDisplayName: String
  refFieldIsList: Boolean
  refFieldIsRequired: Boolean
  refFieldName: String
  refTableId: ID
}

"""Relative Date Predicate Operation Enum"""
enum RelativePredicateOpEnum {
  ADD
  SUB
}

"""Relative Date Predicate Unit Enum"""
enum RelativePredicateUnitEnum {
  DAY
  DAY_HOUR
  DAY_MICROSECOND
  DAY_MINUTE
  DAY_SECOND
  HOUR
  HOUR_MICROSECOND
  HOUR_MINUTE
  HOUR_SECOND
  MICROSECOND
  MINUTE
  MINUTE_MICROSECOND
  MINUTE_SECOND
  MONTH
  QUARTER
  SECOND
  SECOND_MICROSECOND
  WEEK
  YEAR
  YEAR_MONTH
}

input ReplaceFunctionArguments {
  from: String!
  to: String!
}

input ResizeImageDirectiveCropOptions {
  height: Int!
  offsetX: Int = 0
  offsetY: Int = 0
  width: Int!
}

input ResizeImageDirectiveFlipOptions {
  horizontally: Boolean
  vertically: Boolean
}

input ResizeImageDirectiveResizeOptions {
  height: Int
  width: Int
}

type Review {
  _description: String
  book_id: Book
  comment: String
  createdAt: DateTime
  deletedAt: Int
  id: ID
  patron_id: Patron
  rating: Int
  updatedAt: DateTime
}

"""Reviews create input"""
input ReviewCreateInput {
  book_id: ReviewsBook_idRelationInput
  comment: String!
  patron_id: ReviewsPatron_idRelationInput
  rating: Int
}

"""Reviews create many input"""
input ReviewCreateManyInput {
  book_id: ReviewsBook_idManyRelationInput
  comment: String!
  patron_id: ReviewsPatron_idManyRelationInput
  rating: Int
}

"""Reviews delete input"""
input ReviewDeleteInput {
  force: Boolean
  id: ID
}

"""ReviewFieldsPermissions create input"""
input ReviewFieldsPermissions {
  comment: Boolean
  createdAt: Boolean
  rating: Boolean
  updatedAt: Boolean
}

input ReviewFilter {
  AND: [ReviewFilter!]
  OR: [ReviewFilter!]
  _fullText: String
  book_id: BookFilter
  comment: StringPredicate
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  patron_id: PatronFilter
  rating: IntPredicate
  updatedAt: DateTimePredicate
}

input ReviewGroupBy {
  first: Int
  having: Having
  last: Int
  query: ReviewGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input ReviewGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  book_id: BookGroupByQuery
  comment: [GroupByField!]
  createdAt: [GroupByField!]
  id: [GroupByField!]
  patron_id: PatronGroupByQuery
  rating: [GroupByField!]
  updatedAt: [GroupByField!]
}

input ReviewKeyFilter {
  id: ID
}

"""ReviewListResponse output"""
type ReviewListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Review!]!
}

"""ReviewManyResponse output"""
type ReviewManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [Review!]!
}

"""No longer supported. Use `sort` instead."""
enum ReviewOrderBy {
  comment_ASC
  comment_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  rating_ASC
  rating_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""Reviews subscription payload"""
type ReviewPayload {
  mutation: MutationType!
  node: Review
  previousValues: Review
  updatedFields: [String]
}

input ReviewSort {
  book_id: BookSort
  comment: SortOrder
  createdAt: SortOrder
  deletedAt: SortOrder
  id: SortOrder
  patron_id: PatronSort
  rating: SortOrder
  updatedAt: SortOrder
}

"""Reviews subscription filter"""
input ReviewSubscriptionFilter {
  mutation_in: [MutationType]
  node: ReviewFilter
  updatedFields: UpdatedFieldsFilter
}

"""Reviews update input"""
input ReviewUpdateByFilterInput {
  comment: [UpdateByFilterStringInput]
  rating: [UpdateByFilterIntInput]
}

"""Reviews update input"""
input ReviewUpdateInput {
  book_id: ReviewsBook_idUpdateRelationInput
  comment: String
  id: ID
  patron_id: ReviewsPatron_idUpdateRelationInput
  rating: Int
}

input Review_PermissionFilter {
  AND: [Review_PermissionFilter!]
  OR: [Review_PermissionFilter!]
  _fullText: String
  book_id: Book_PermissionFilter
  comment: StringPredicate
  createdAt: DateTimePredicate
  deletedAt: IntPredicate
  id: IDPredicate
  patron_id: Patron_PermissionFilter
  rating: IntPredicate
  updatedAt: DateTimePredicate
}

"""Reviews relation input"""
input ReviewsBook_idManyRelationInput {
  connect: BookKeyFilter
}

"""Reviews relation input"""
input ReviewsBook_idRelationInput {
  connect: BookKeyFilter
  create: Reviews_BookCreateInput
}

"""Reviews relation input"""
input ReviewsBook_idUpdateRelationInput {
  connect: BookKeyFilter
  create: Reviews_BookCreateInput
  disconnect: BookKeyFilter
  reconnect: BookKeyFilter
  update: Reviews_BookUpdateInput
}

"""Reviews relation input"""
input ReviewsPatron_idManyRelationInput {
  connect: PatronKeyFilter
}

"""Reviews relation input"""
input ReviewsPatron_idRelationInput {
  connect: PatronKeyFilter
  create: Reviews_PatronCreateInput
}

"""Reviews relation input"""
input ReviewsPatron_idUpdateRelationInput {
  connect: PatronKeyFilter
  create: Reviews_PatronCreateInput
  disconnect: PatronKeyFilter
  reconnect: PatronKeyFilter
  update: Reviews_PatronUpdateInput
}

"""Books create input from Reviews"""
input Reviews_BookCreateInput {
  Holds: BooksHoldsRelationInput
  Loans: BooksLoansRelationInput
  Recommendations: BooksRecommendationsRelationInput
  Reviews: BooksReviewsRelationInput
  author: String
  availability_status: String
  genre: String
  isbn: String
  publication_date: DateTime
  title: String
}

"""Books update input from Reviews"""
input Reviews_BookUpdateInput {
  Holds: BooksHoldsUpdateRelationInput
  Loans: BooksLoansUpdateRelationInput
  Recommendations: BooksRecommendationsUpdateRelationInput
  Reviews: BooksReviewsUpdateRelationInput
  author: String
  availability_status: String
  genre: String
  isbn: String
  publication_date: DateTime
  title: String
}

"""Patrons create input from Reviews"""
input Reviews_PatronCreateInput {
  Holds: PatronsHoldsRelationInput
  Loans: PatronsLoansRelationInput
  Recommendations: PatronsRecommendationsRelationInput!
  Reviews: PatronsReviewsRelationInput
  borrowing_history: JSON!
  membership_status: String
  user_id: PatronsUser_idRelationInput
}

"""Patrons update input from Reviews"""
input Reviews_PatronUpdateInput {
  Holds: PatronsHoldsUpdateRelationInput
  Loans: PatronsLoansUpdateRelationInput
  Recommendations: PatronsRecommendationsUpdateRelationInput
  Reviews: PatronsReviewsUpdateRelationInput
  borrowing_history: JSON
  membership_status: String
  user_id: PatronsUser_idUpdateRelationInput
}

type Role {
  _description: String
  apiTokens(after: String, before: String, filter: ApiTokenFilter, first: Int, groupBy: ApiTokenGroupBy, last: Int, orderBy: [ApiTokenOrderBy], skip: Int, sort: [ApiTokenSort!]): ApiTokenListResponse
  authenticationProfiles(after: String, before: String, filter: AuthenticationProfileFilter, first: Int, groupBy: AuthenticationProfileGroupBy, last: Int, orderBy: [AuthenticationProfileOrderBy], skip: Int, sort: [AuthenticationProfileSort!]): AuthenticationProfileListResponse
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  description: String
  id: ID
  membersCount: Int!
  name: String
  permissions(filter: PermissionInputFilter): PermissionListResponse
  updatedAt: DateTime
  users(after: String, before: String, filter: UserFilter, first: Int, groupBy: UserGroupBy, last: Int, orderBy: [UserOrderBy], skip: Int, sort: [UserSort!]): UserListResponse
}

"""Roles create input"""
input RoleCreateInput {
  apiTokens: RolesApiTokensRelationInput
  authenticationProfiles: RolesAuthenticationProfilesRelationInput
  description: String
  name: String!
  permissions: PermissionsInput
  users: RolesUsersRelationInput
}

"""Roles create many input"""
input RoleCreateManyInput {
  apiTokens: RolesApiTokensManyRelationInput
  authenticationProfiles: RolesAuthenticationProfilesManyRelationInput
  description: String
  name: String!
  users: RolesUsersManyRelationInput
}

"""Roles delete input"""
input RoleDeleteInput {
  force: Boolean
  id: ID
}

enum RoleEnum {
  ADMIN
  EDITOR
  VIEWER
}

"""RoleFieldsPermissions create input"""
input RoleFieldsPermissions {
  createdAt: Boolean
  description: Boolean
  name: Boolean
  updatedAt: Boolean
}

input RoleFilter {
  AND: [RoleFilter!]
  OR: [RoleFilter!]
  _fullText: String
  apiTokens: ApiTokenRelationFilter
  authenticationProfiles: AuthenticationProfileRelationFilter
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  name: StringPredicate
  permissions: PermissionRelationFilter
  updatedAt: DateTimePredicate
  users: UserRelationFilter
}

input RoleGroupBy {
  first: Int
  having: Having
  last: Int
  query: RoleGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input RoleGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  apiTokens: ApiTokenGroupByQuery
  authenticationProfiles: AuthenticationProfileGroupByQuery
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  description: [GroupByField!]
  id: [GroupByField!]
  name: [GroupByField!]
  permissions: PermissionGroupByQuery
  updatedAt: [GroupByField!]
  users: UserGroupByQuery
}

input RoleKeyFilter {
  id: ID
  name: String
}

"""RoleListResponse output"""
type RoleListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Role!]!
}

"""RoleManyResponse output"""
type RoleManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [Role!]!
}

"""No longer supported. Use `sort` instead."""
enum RoleOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  systemType_ASC
  systemType_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""Roles subscription payload"""
type RolePayload {
  mutation: MutationType!
  node: Role
  previousValues: Role
  updatedFields: [String]
}

input RoleRelationFilter {
  every: RoleFilter
  none: RoleFilter
  some: RoleFilter
}

input RoleSort {
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

"""Roles subscription filter"""
input RoleSubscriptionFilter {
  mutation_in: [MutationType]
  node: RoleFilter
  updatedFields: UpdatedFieldsFilter
}

"""Roles update input"""
input RoleUpdateByFilterInput {
  description: [UpdateByFilterStringInput]
  name: [UpdateByFilterStringInput]
  systemType: [UpdateByFilterStringInput]
}

"""Roles update input"""
input RoleUpdateInput {
  apiTokens: RolesApiTokensUpdateRelationInput
  authenticationProfiles: RolesAuthenticationProfilesUpdateRelationInput
  description: String
  id: ID
  name: String
  permissions: PermissionsInput
  users: RolesUsersUpdateRelationInput
}

input Role_PermissionFilter {
  AND: [Role_PermissionFilter!]
  OR: [Role_PermissionFilter!]
  _fullText: String
  apiTokens: ApiToken_PermissionRelationFilter
  authenticationProfiles: AuthenticationProfile_PermissionRelationFilter
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  description: StringPredicate
  id: IDPredicate
  name: StringPredicate
  permissions: Permission_PermissionRelationFilter
  updatedAt: DateTimePredicate
  users: User_PermissionRelationFilter
}

input Role_PermissionRelationFilter {
  every: Role_PermissionFilter
  none: Role_PermissionFilter
  some: Role_PermissionFilter
}

"""Roles relation input"""
input RolesApiTokensManyRelationInput {
  connect: [ApiTokenKeyFilter!]
}

"""Roles relation input"""
input RolesApiTokensRelationInput {
  connect: [ApiTokenKeyFilter!]
}

"""Roles relation input"""
input RolesApiTokensUpdateRelationInput {
  connect: [ApiTokenKeyFilter!]
  disconnect: [ApiTokenKeyFilter!]
  reconnect: [ApiTokenKeyFilter!]
  update: [Roles_ApiTokenUpdateInput]
}

"""Roles relation input"""
input RolesAuthenticationProfilesManyRelationInput {
  connect: [AuthenticationProfileKeyFilter!]
}

"""Roles relation input"""
input RolesAuthenticationProfilesRelationInput {
  connect: [AuthenticationProfileKeyFilter!]
  create: [Roles_AuthenticationProfileCreateInput]
}

"""Roles relation input"""
input RolesAuthenticationProfilesUpdateRelationInput {
  connect: [AuthenticationProfileKeyFilter!]
  create: [Roles_AuthenticationProfileCreateInput]
  disconnect: [AuthenticationProfileKeyFilter!]
  reconnect: [AuthenticationProfileKeyFilter!]
  update: [Roles_AuthenticationProfileUpdateInput]
}

"""Roles relation input"""
input RolesUsersManyRelationInput {
  connect: [UserKeyFilter!]
}

"""Roles relation input"""
input RolesUsersRelationInput {
  connect: [UserKeyFilter!]
  create: [Roles_UserCreateInput]
}

"""Roles relation input"""
input RolesUsersUpdateRelationInput {
  connect: [UserKeyFilter!]
  create: [Roles_UserCreateInput]
  disconnect: [UserKeyFilter!]
  reconnect: [UserKeyFilter!]
  update: [Roles_UserUpdateInput]
}

"""ApiTokens update input from roles"""
input Roles_ApiTokenUpdateInput {
  data: ApiTokenUpdateInput!
  filter: ApiTokenKeyFilter
}

"""AuthenticationProfiles create input from roles"""
input Roles_AuthenticationProfileCreateInput {
  audiences: [String]
  clientId: String
  databaseName: String
  domain: String
  managementDomain: String
  name: String!
  roles: AuthenticationProfilesRolesRelationInput
  secret: String
  selfSignUpEmailDomains: [String]
  selfSignUpEnabled: Boolean = false
  type: String = "8BASE"
}

"""AuthenticationProfiles update input from roles"""
input Roles_AuthenticationProfileUpdateInput {
  data: AuthenticationProfileUpdateInput!
  filter: AuthenticationProfileKeyFilter
}

"""Users create input from roles"""
input Roles_UserCreateInput {
  LibraryStaff: UsersLibraryStaffRelationInput!
  Notifications: UsersNotificationsRelationInput!
  Patrons: UsersPatronsRelationInput!
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""Users update input from roles"""
input Roles_UserUpdateInput {
  data: UserUpdateInput!
  filter: UserKeyFilter
}

"""Schema Origin"""
type SchemaOrigin {
  provider: String
  type: SchemaOriginType!
}

"""Schema Origin Type Enum"""
enum SchemaOriginType {
  LOCAL
  REMOTE
  VIEW
}

type Setting {
  _description: String
  bgColor: String
  buttonLinkColor: String
  containerColor: String
  createdAt: DateTime
  createdBy: User
  currency: String
  dateFormat: String
  landingPageImage: File
  language: String
  leftNavColor: String
  menuBarBGColor: String
  menuBarIconsColor: String
  menuBarLogo: File
  passwordMinLength: Int
  passwordRequireLowercase: Boolean
  passwordRequireNumbers: Boolean
  passwordRequireSpecial: Boolean
  passwordRequireUppercase: Boolean
  passwordUpdateInterval: Int
  rememberDevice: String
  timezone: String
  updatedAt: DateTime
  userInterfaceStyle: String
  vanityUrl: String
}

input SettingFilter {
  AND: [SettingFilter!]
  OR: [SettingFilter!]
  _fullText: String
  bgColor: StringPredicate
  buttonLinkColor: StringPredicate
  containerColor: StringPredicate
  createdAt: DateTimePredicate
  createdBy: UserFilter
  currency: StringPredicate
  dateFormat: StringPredicate
  deletedAt: IntPredicate
  landingPageImage: FileFilter
  language: StringPredicate
  leftNavColor: StringPredicate
  menuBarBGColor: StringPredicate
  menuBarIconsColor: StringPredicate
  menuBarLogo: FileFilter
  passwordMinLength: IntPredicate
  passwordRequireLowercase: BoolPredicate
  passwordRequireNumbers: BoolPredicate
  passwordRequireSpecial: BoolPredicate
  passwordRequireUppercase: BoolPredicate
  passwordUpdateInterval: IntPredicate
  rememberDevice: StringPredicate
  timezone: StringPredicate
  updatedAt: DateTimePredicate
  userInterfaceStyle: StringPredicate
  vanityUrl: StringPredicate
}

input SettingGroupBy {
  first: Int
  having: Having
  last: Int
  query: SettingGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input SettingGroupByQuery {
  _group: [GroupIdentifiersGroupByField!]
  bgColor: [GroupByField!]
  buttonLinkColor: [GroupByField!]
  containerColor: [GroupByField!]
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  currency: [GroupByField!]
  dateFormat: [GroupByField!]
  landingPageImage: FileGroupByQuery
  language: [GroupByField!]
  leftNavColor: [GroupByField!]
  menuBarBGColor: [GroupByField!]
  menuBarIconsColor: [GroupByField!]
  menuBarLogo: FileGroupByQuery
  passwordMinLength: [GroupByField!]
  passwordRequireLowercase: [GroupByField!]
  passwordRequireNumbers: [GroupByField!]
  passwordRequireSpecial: [GroupByField!]
  passwordRequireUppercase: [GroupByField!]
  passwordUpdateInterval: [GroupByField!]
  rememberDevice: [GroupByField!]
  timezone: [GroupByField!]
  updatedAt: [GroupByField!]
  userInterfaceStyle: [GroupByField!]
  vanityUrl: [GroupByField!]
}

"""SettingListResponse output"""
type SettingListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [Setting!]!
}

"""No longer supported. Use `sort` instead."""
enum SettingOrderBy {
  bgColor_ASC
  bgColor_DESC
  buttonLinkColor_ASC
  buttonLinkColor_DESC
  containerColor_ASC
  containerColor_DESC
  createdAt_ASC
  createdAt_DESC
  currency_ASC
  currency_DESC
  dateFormat_ASC
  dateFormat_DESC
  deletedAt_ASC
  deletedAt_DESC
  id_ASC
  id_DESC
  language_ASC
  language_DESC
  leftNavColor_ASC
  leftNavColor_DESC
  menuBarBGColor_ASC
  menuBarBGColor_DESC
  menuBarIconsColor_ASC
  menuBarIconsColor_DESC
  passwordMinLength_ASC
  passwordMinLength_DESC
  passwordRequireLowercase_ASC
  passwordRequireLowercase_DESC
  passwordRequireNumbers_ASC
  passwordRequireNumbers_DESC
  passwordRequireSpecial_ASC
  passwordRequireSpecial_DESC
  passwordRequireUppercase_ASC
  passwordRequireUppercase_DESC
  passwordUpdateInterval_ASC
  passwordUpdateInterval_DESC
  rememberDevice_ASC
  rememberDevice_DESC
  timezone_ASC
  timezone_DESC
  updatedAt_ASC
  updatedAt_DESC
  userInterfaceStyle_ASC
  userInterfaceStyle_DESC
  vanityUrl_ASC
  vanityUrl_DESC
}

"""Settings subscription payload"""
type SettingPayload {
  mutation: MutationType!
  node: Setting
  previousValues: Setting
  updatedFields: [String]
}

input SettingRelationFilter {
  every: SettingFilter
  none: SettingFilter
  some: SettingFilter
}

input SettingSort {
  bgColor: SortOrder
  buttonLinkColor: SortOrder
  containerColor: SortOrder
  createdAt: SortOrder
  createdBy: UserSort
  currency: SortOrder
  dateFormat: SortOrder
  deletedAt: SortOrder
  landingPageImage: FileSort
  language: SortOrder
  leftNavColor: SortOrder
  menuBarBGColor: SortOrder
  menuBarIconsColor: SortOrder
  menuBarLogo: FileSort
  passwordMinLength: SortOrder
  passwordRequireLowercase: SortOrder
  passwordRequireNumbers: SortOrder
  passwordRequireSpecial: SortOrder
  passwordRequireUppercase: SortOrder
  passwordUpdateInterval: SortOrder
  rememberDevice: SortOrder
  timezone: SortOrder
  updatedAt: SortOrder
  userInterfaceStyle: SortOrder
  vanityUrl: SortOrder
}

"""Settings subscription filter"""
input SettingSubscriptionFilter {
  mutation_in: [MutationType]
  node: SettingFilter
  updatedFields: UpdatedFieldsFilter
}

"""Settings update input"""
input SettingUpdateInput {
  bgColor: String
  buttonLinkColor: String
  containerColor: String
  currency: String
  dateFormat: String
  language: String
  leftNavColor: String
  menuBarBGColor: String
  menuBarIconsColor: String
  passwordMinLength: Int
  passwordRequireLowercase: Boolean
  passwordRequireNumbers: Boolean
  passwordRequireSpecial: Boolean
  passwordRequireUppercase: Boolean
  passwordUpdateInterval: Int
  rememberDevice: String
  timezone: String
  userInterfaceStyle: String
  vanityUrl: String
}

input Setting_PermissionFilter {
  AND: [Setting_PermissionFilter!]
  OR: [Setting_PermissionFilter!]
  _fullText: String
  bgColor: StringPredicate
  buttonLinkColor: StringPredicate
  containerColor: StringPredicate
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  currency: StringPredicate
  dateFormat: StringPredicate
  deletedAt: IntPredicate
  landingPageImage: File_PermissionFilter
  language: StringPredicate
  leftNavColor: StringPredicate
  menuBarBGColor: StringPredicate
  menuBarIconsColor: StringPredicate
  menuBarLogo: File_PermissionFilter
  passwordMinLength: IntPredicate
  passwordRequireLowercase: BoolPredicate
  passwordRequireNumbers: BoolPredicate
  passwordRequireSpecial: BoolPredicate
  passwordRequireUppercase: BoolPredicate
  passwordUpdateInterval: IntPredicate
  rememberDevice: StringPredicate
  timezone: StringPredicate
  updatedAt: DateTimePredicate
  userInterfaceStyle: StringPredicate
  vanityUrl: StringPredicate
}

input Setting_PermissionRelationFilter {
  every: Setting_PermissionFilter
  none: Setting_PermissionFilter
  some: Setting_PermissionFilter
}

"""SignUpResendInput"""
input SignUpResendInput {
  email: String!
}

"""Smart Field Attributes"""
type SmartFieldTypeAttributes {
  format: String!
  innerFields: [CustomTableField]
}

"""Smart Type Format Enum"""
enum SmartTypeFormatEnum {
  ADDRESS
  PHONE
}

"""SortOrder"""
enum SortOrder {
  ASC
  DESC
}

input StringPadFunctionArguments {
  len: Int!
  str: String!
}

input StringPredicate {
  contains: String
  ends_with: String
  equals: String
  in: [String!]
  is_empty: Boolean
  is_not_empty: Boolean
  not_contains: String
  not_ends_with: String
  not_equals: String
  not_in: [String!]
  not_starts_with: String
  starts_with: String
}

input StringPredicateHaving {
  AND: [StringPredicateHaving!]
  OR: [StringPredicateHaving!]
  contains: String
  ends_with: String
  equals: String
  in: [String!]
  is_empty: Boolean
  is_not_empty: Boolean
  not_contains: String
  not_ends_with: String
  not_equals: String
  not_in: [String!]
  not_starts_with: String
  starts_with: String
}

enum StringTrimMode {
  BOTH
  LEADING
  TRAILING
}

type Subscription {
  ApiTokens(filter: ApiTokenSubscriptionFilter): ApiTokenPayload
  AuthenticationProfiles(filter: AuthenticationProfileSubscriptionFilter): AuthenticationProfilePayload
  AuthenticationSettings(filter: AuthenticationSettingSubscriptionFilter): AuthenticationSettingPayload
  Books(filter: BookSubscriptionFilter): BookPayload
  DigitalResources(filter: DigitalResourceSubscriptionFilter): DigitalResourcePayload
  EnvironmentVariables(filter: EnvironmentVariableSubscriptionFilter): EnvironmentVariablePayload
  Events(filter: EventSubscriptionFilter): EventPayload
  Files(filter: FileSubscriptionFilter): FilePayload
  FilesSettings(filter: FilesSettingSubscriptionFilter): FilesSettingPayload
  Holds(filter: HoldSubscriptionFilter): HoldPayload
  LibraryStaff(filter: LibraryStaffSubscriptionFilter): LibraryStaffPayload
  Loans(filter: LoanSubscriptionFilter): LoanPayload
  Notifications(filter: NotificationSubscriptionFilter): NotificationPayload
  Patrons(filter: PatronSubscriptionFilter): PatronPayload
  Permissions(filter: PermissionSubscriptionFilter): PermissionPayload
  Recommendations(filter: RecommendationSubscriptionFilter): RecommendationPayload
  Reviews(filter: ReviewSubscriptionFilter): ReviewPayload
  Roles(filter: RoleSubscriptionFilter): RolePayload
  Settings(filter: SettingSubscriptionFilter): SettingPayload
  Users(filter: UserSubscriptionFilter): UserPayload
}

input SubstringFunctionArguments {
  len: Int
  pos: Int!
}

type SuccessResponse {
  success: Boolean
}

type SuccessWithMessageResponse {
  message: String
  success: Boolean
}

"""Switch Field Attributes"""
type SwitchFieldTypeAttributes {
  format: String!
  listOptions: [String]
}

"""Switch Type Format Enum"""
enum SwitchTypeFormatEnum {
  ACTIVE_INACTIVE
  CUSTOM
  HIGH_LOW
  ON_OFF
  TRUE_FALSE
  YES_NO
}

input SystemAIIdeasInput {
  examples: [String]
  name: String
}

"""Application"""
type SystemApplication {
  appType: String!
  createdAt: DateTime!
  description: String
  displayName: String
  id: ID!
  name: String!
  status: SystemApplicationStatusEnum!
}

"""ApplicationDeleteMutationInput"""
input SystemApplicationDeleteMutationInput {
  force: Boolean
  id: String!
}

"""Application install input"""
input SystemApplicationInstallInput {
  appType: String!
  description: String
  displayName: String
  name: String!
  status: SystemApplicationStatusEnum = INACTIVE
}

"""SystemApplicationListResponse output"""
type SystemApplicationListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemApplication!]!
}

"""Application Status Enum"""
enum SystemApplicationStatusEnum {
  ACTIVE
  INACTIVE
}

"""Application update input"""
input SystemApplicationUpdateInput {
  description: String
  displayName: String
  id: String!
  name: String
  status: SystemApplicationStatusEnum
}

type SystemAsyncSessionStatusResponse {
  result: JSON
  status: String!
}

type SystemAuthProfile {
  id: String
  name: String
  type: String
}

type SystemAuthenticationInfo {
  authProfile: [SystemAuthProfile]
  environmentId: String
  environmentName: String
}

type SystemBackendUtilizationResponse {
  authProfiles: Int
  databaseRows: Int
  field: Int
  fileStorageSize: Int
  functions: Int
  roles: Int
  tables: Int
}

type SystemBasicSectionConfigurationForPromptExecutionResponse {
  content: JSON
}

type SystemBasicSectionConfigurationItem {
  criteria: String!
  description: String!
  enabledWith8base: Boolean
  id: ID!
  name: String!
}

type SystemBasicSectionConfigurationResponse {
  application_classification: [SystemBasicSectionConfigurationItem]
  building_blocks: [SystemBasicSectionConfigurationItem]
  commercialization_model: [SystemBasicSectionConfigurationItem]
}

type SystemBillingCurrentPlanResponse {
  customerId: String
  displayName: String
  features: [SystemBillingPlanFeature]
  id: ID
  limitMetrics: [SystemBillingPlanLimitMetrics]
  name: String
  nextPlan: SystemBillingNextPlanResponse
  paymentDate: DateTime
  paymentDetails: String
  pdf: String
  price: Int
  status: SystemWorkspaceStatus
  subscriptionId: String
  trialEnd: DateTime
}

enum SystemBillingDetailsOrigin {
  member
  organization
  workspace
}

type SystemBillingDetailsResponse {
  brand: String
  expMonth: Int
  expYear: Int
  last4: String
  origin: SystemBillingDetailsOrigin!
}

type SystemBillingInvoiceItem {
  amountDue: Float
  amountPaid: Float
  amountRemaining: Float
  description: String
  endingBalance: Float
  id: ID!
  invoicePdf: String
  number: String
  organization: SystemBillingInvoiceItemOrganizationInfo
  paid: Boolean
  periodEnd: DateTime
  periodStart: DateTime
  plan: SystemBillingInvoiceItemPlanInfo
  project: SystemBillingInvoiceItemProjectInfo
  status: String
  total: Float
}

type SystemBillingInvoiceItemOrganizationInfo {
  id: ID
  name: String
}

type SystemBillingInvoiceItemPlanInfo {
  displayName: String
  id: ID
  name: String
}

type SystemBillingInvoiceItemProjectInfo {
  id: ID
  name: String
}

enum SystemBillingInvoicesListFilterType {
  CUSTOMER
  PROJECT
}

"""SystemBillingInvoicesListResponse output"""
type SystemBillingInvoicesListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemBillingInvoiceItem!]!
}

type SystemBillingLimitMetricItem {
  description: String
  displayName: String
  name: String
  showPriority: Int
  tooltip: String
  unit: String
}

type SystemBillingMetricOverageItem {
  value: Float
  warning: String
}

type SystemBillingMetricUsageItem {
  limitMetric: SystemBillingLimitMetricItem
  overage: SystemBillingMetricOverageItem
  value: Float
}

type SystemBillingMetricUsageQuotaItem {
  limitMetric: SystemBillingLimitMetricItem
  value: Float
}

"""SystemBillingMetricUsageQuotasListResponse output"""
type SystemBillingMetricUsageQuotasListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemBillingMetricUsageQuotaItem!]!
}

input SystemBillingMetricUsagesListFilter {
  entryDate: DateTimePredicate!
}

"""SystemBillingMetricUsagesListResponse output"""
type SystemBillingMetricUsagesListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemBillingMetricUsageItem!]!
}

type SystemBillingNextPlanResponse {
  displayName: String
  id: ID
  name: String
  pdf: String
  price: Int
}

type SystemBillingPlanBaseInfo {
  capacity: String
  description: String
  displayName: String
  featuresTitle: String
  id: ID
  isCustom: Boolean
  isLegacy: Boolean
  limitMetrics: [SystemBillingPlanLimitMetricItem]
  name: String
  pdf: String
  price: Int
  status: String
}

type SystemBillingPlanFeature {
  displayName: String
  isActive: Boolean
  name: String
}

type SystemBillingPlanLimitMetricItem {
  displayName: String
  hardLimit: Float
  name: String
  overagePrice: Int
  softLimit: Float
}

type SystemBillingPlanLimitMetrics {
  hardLimit: String
  id: String
  name: String
  overagePrice: String
  softLimit: String
}

"""BillingPlanUpdateMutationInput"""
input SystemBillingPlanUpdateMutationInput {
  planId: ID!
  projectID: ID!
}

enum SystemBranchEnvironmentMode {
  FULL
  SYSTEM
}

type SystemCacheEvictResponse {
  evicted: [String]!
}

input SystemChangePlanIdeaMutationInput {
  archieId: ID!
  couponId: String
  couponName: String
  id: ID!
  newPlan: String!
}

input SystemChangeRoleIdeaMemberMutationInput {
  email: String!
  ideaId: ID!
  role: InvitationRoleEnum!
}

input SystemChangeRoleIdeaMutationInputList {
  recipients: [SystemChangeRoleIdeaMemberMutationInput!]!
}

"""Ci Commit Mode"""
enum SystemCiCommitMode {
  FULL
  ONLY_MIGRATIONS
  ONLY_PROJECT
}

"""Ci Status"""
type SystemCiStatusOutput {
  migrations: [String]
  status: String!
}

"""CloudLogs Entry"""
type SystemCloudLogsEntry {
  message: String
  timestamp: DateTime
}

"""Computed field mode"""
enum SystemComputedFieldMode {
  STORED
  VIRTUAL
}

"""Custom Table Field Type"""
type SystemCustomTableField {
  computedMode: SystemComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: SystemFieldType
  fieldTypeAttributes: SystemFieldTypeAttributes
  isList: Boolean!
  isRequired: Boolean!
  isUnique: Boolean
  name: String
}

"""Date Field Attributes"""
type SystemDateFieldTypeAttributes {
  format: String!
}

"""Date Type Format Enum"""
enum SystemDateTypeFormatEnum {
  DATE
  DATETIME
}

"""Delete Member From Organization Response"""
type SystemDeleteArchieMemberFromOrganizationResponse {
  success: Boolean!
}

input SystemDeleteIdeaMutationInput {
  id: ID!
}

input SystemDeleteMemberIdeaMutationInput {
  email: String!
  ideaId: ID!
}

input SystemDeleteMemberIdeaMutationInputList {
  members: [SystemDeleteMemberIdeaMutationInput!]!
}

"""DeployDataResponse"""
type SystemDeployDataResponse {
  buildName: String!
  uploadBuildUrl: String!
  uploadMetaDataUrl: String!
}

enum SystemDeployModeEnum {
  FULL
  FUNCTIONS
  MIGRATIONS
  ONLY_PLUGINS
  ONLY_PROJECT
}

"""DeployOptions"""
input SystemDeployOptions {
  extensionNames: [String]
  mode: SystemDeployModeEnum = ONLY_PROJECT
  nodeVersion: String
  pluginNames: [String]
}

enum SystemDeployStatusEnum {
  compiling
  complete_error
  complete_success
  deploying
  initialize
  preparing
}

"""SystemDeployStatusResult"""
type SystemDeployStatusResult {
  message: String
  status: SystemDeployStatusEnum!
}

"""DeployingBuildInput"""
input SystemDeployingBuildInput {
  buildName: String!
  options: SystemDeployOptions
}

type SystemDeploymentABItemResponse {
  dateDeploy: DateTime
  statusDeploy: String
  urlDeploy: String
  userDeploy: SystemMemberAccountInfo
  versionDeploy: String
  versionFrontEnd: String
}

type SystemDeploymentProjectItemResponse {
  dateDeploy: DateTime
  name: String
  statusDeploy: String
  urlDeploy: String
  versionDeploy: String
  versionFrontEnd: String
  workspaceId: ID
}

"""SystemDeploymentProjectListResponse output"""
type SystemDeploymentProjectListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemDeploymentProjectItemResponse!]!
}

"""SystemEnvironmentBackupListResponse output"""
type SystemEnvironmentBackupListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [EnvironmentBackupItem!]!
}

type SystemEnvironmentMember {
  avatar: SystemEnvironmentMemberAvatar
  createdAt: DateTime
  email: String!
  firstName: String
  lastName: String
  permissions: SystemEnvironmentMemberPermissionsList
  registeredAt: DateTime
  roles: SystemEnvironmentMemberRolesList
  status: String!
}

type SystemEnvironmentMemberAvatar {
  downloadUrl: String
  id: String
}

input SystemEnvironmentMemberFilter {
  email: String
  workspaceId: String
}

type SystemEnvironmentMemberPermission {
  permission: JSON
  resource: String
  resourceType: String
}

type SystemEnvironmentMemberPermissionsList {
  count: Int!
  items: [SystemEnvironmentMemberPermission!]
}

type SystemEnvironmentMemberRole {
  id: String!
  name: String!
}

input SystemEnvironmentMemberRoleIdFilterPredicate {
  equals: ID
  not_equals: ID
}

type SystemEnvironmentMemberRolesList {
  count: Int!
  items: [SystemEnvironmentMemberRole!]
}

input SystemEnvironmentMemberStatusFilterPredicate {
  equals: String
  not_equals: String
}

input SystemEnvironmentMemberUpdateData {
  roles: [String]
}

input SystemEnvironmentMembersFilter {
  email: String!
}

input SystemEnvironmentMembersListFilter {
  email: String
  firstName: String
  lastName: String
  roleId: SystemEnvironmentMemberRoleIdFilterPredicate
  status: SystemEnvironmentMemberStatusFilterPredicate
  workspaceId: ID
}

"""SystemEnvironmentMembersListResponse output"""
type SystemEnvironmentMembersListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemEnvironmentMember!]!
}

input SystemEnvironmentMembersListSort {
  email: SortOrder
  firstName: SortOrder
  isOwner: SortOrder
  lastName: SortOrder
  status: SortOrder
}

type SystemEnvironmentProjectItem {
  fields: String
  functions: String
  id: ID!
  name: String!
  tables: String
  worksApiHost: String
  workspaceId: ID!
  workspaceName: String!
}

enum SystemEnvironmentRelationModeEnum {
  ForeignKey
  Pivot
}

type SystemEnvironmentRoleBaseInfo {
  id: String!
  name: String!
}

type SystemEnvironmentRoleList {
  assignedRoles: [SystemEnvironmentRoleBaseInfo]
  environmentId: String!
  environmentName: String!
  exists: Boolean
  roles: [SystemEnvironmentRoleBaseInfo]
}

type SystemEnvironmentSettings {
  deleteLock: Boolean
  fileManagementProvider: SystemFileManagerProviderTypeEnum
  introspection: Boolean
  relationMode: SystemEnvironmentRelationModeEnum
}

"""SystemEnvironmentsListResponse output"""
type SystemEnvironmentsListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [EnvironmentItem!]!
}

"""SystemEnvironmentsProjectListResponse output"""
type SystemEnvironmentsProjectListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemEnvironmentProjectItem!]!
}

input SystemExportIdeaToDocumentInput {
  advancedConsiderations: Boolean
  applicationServices: Boolean
  applicationServicesDetails: Boolean
  designGeneral: Boolean
  ideaId: ID!
  includeAll: Boolean
  modules: Boolean
  modulesDetails: Boolean
  output: String
  overview: Boolean
  screens: Boolean
  siteMap: Boolean
  userTypes: Boolean
}

type SystemExportIdeaToDocumentResponse {
  content: JSON
  documentType: String!
}

"""Field Data Features"""
type SystemFieldDataFeatures {
  create: Boolean!
  sort: Boolean!
  update: Boolean!
}

"""Field Schema Features"""
type SystemFieldSchemaFeatures {
  delete: Boolean!
  update: Boolean!
}

"""Field types"""
enum SystemFieldType {
  DATE
  FILE
  GEO
  ID
  JSON
  MISSING_RELATION
  NUMBER
  ONE_WAY_RELATION
  RELATION
  SMART
  SWITCH
  TEXT
  UUID
}

"""Field Type Attributes"""
union SystemFieldTypeAttributes = SystemDateFieldTypeAttributes | SystemFileFieldTypeAttributes | SystemGeoFieldTypeAttributes | SystemMissingRelationFieldTypeAttributes | SystemNumberFieldTypeAttributes | SystemSmartFieldTypeAttributes | SystemSwitchFieldTypeAttributes | SystemTextFieldTypeAttributes | SystemUUIDFieldTypeAttributes

"""Field Type Attributes Input"""
input SystemFieldTypeAttributesInput {
  autoIncrement: Boolean
  currency: String
  expiration: Int
  fieldSize: Int
  format: String
  isBigInt: Boolean
  listOptions: [String!]
  maxSize: Int
  maxValue: Float
  minValue: Float
  precision: Int
  srid: Int
  typeRestrictions: [String!]
}

type SystemFileBaseInfo {
  downloadUrl: String
  id: String
}

"""File Field Attributes"""
type SystemFileFieldTypeAttributes {
  expiration: Int
  format: String!
  maxSize: Int
  showTitle: Boolean @deprecated(reason: "Field is deprecated")
  showUrl: Boolean @deprecated(reason: "Field is deprecated")
  typeRestrictions: [String!]
}

enum SystemFileManagerProviderTypeEnum {
  aws
  filestack
  uploadcare
}

"""File Type Format Enum"""
enum SystemFileTypeFormatEnum {
  FILE
  IMAGE
}

"""FileUploadByUrlInput"""
input SystemFileUploadByUrlInput {
  url: String!
}

"""FileUploadByUrlResponse"""
type SystemFileUploadByUrlResponse {
  fileId: String!
  meta: JSON!
}

union SystemFileUploadSignInfo = AwsSignInfoResponse | FileStackSignInfoResponse | UploadcareSignInfoResponse

type SystemFrontendUtilizationABResponse {
  CDN: Boolean
  assets: Int
  customStates: Int
  functions: Int
  layouts: Int
  libraries: Int
  pages: Int
  requests: Int
  resources: Int
}

type SystemFrontendUtilizationResponse {
  assets: Int
  customStates: Int
  functions: Int
  layouts: Int
  libraries: Int
  pages: Int
  requests: Int
  resources: Int
}

"""FunctionInfo"""
interface SystemFunctionInfo {
  application: SystemApplication
  description: String
  functionType: SystemFunctionType!
  name: String!
}

"""FunctionInfoCheck"""
type SystemFunctionInfoCheck {
  version: String
}

"""FunctionInfoFilter"""
input SystemFunctionInfoFilter {
  description: String
  functionType: SystemFunctionType
  name: String
}

"""FunctionInfoOrderBy"""
enum SystemFunctionInfoOrderBy {
  description_ASC
  description_DESC
  functionType_ASC
  functionType_DESC
  name_ASC
  name_DESC
}

"""SystemFunctionListResponse output"""
type SystemFunctionListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemFunctionInfo!]!
}

"""FunctionResolverInfo"""
type SystemFunctionResolverInfo implements SystemFunctionInfo {
  application: SystemApplication
  description: String
  functionType: SystemFunctionType!
  gqlType: String!
  name: String!
}

"""FunctionTaskInfo"""
type SystemFunctionTaskInfo implements SystemFunctionInfo {
  application: SystemApplication
  description: String
  functionType: SystemFunctionType!
  name: String!
  scheduleExpression: String
}

"""FunctionTriggerInfo"""
type SystemFunctionTriggerInfo implements SystemFunctionInfo {
  application: SystemApplication
  description: String
  functionType: SystemFunctionType!
  name: String!
  operation: String!
  tableName: String!
  type: String!
}

"""FunctionType"""
enum SystemFunctionType {
  resolver
  schedule
  task
  trigger
  webhook
}

"""FunctionWebhookInfo"""
type SystemFunctionWebhookInfo implements SystemFunctionInfo {
  application: SystemApplication
  description: String
  functionType: SystemFunctionType!
  httpMethod: String!
  name: String!
  workspaceFullPath: String!
  workspaceRelativePath: String!
}

"""Diff Environment Input"""
type SystemGenerateEnvironmentOutput {
  url: String
}

"""Geo Field Attributes"""
type SystemGeoFieldTypeAttributes {
  format: String!
  srid: Int
}

type SystemGetCouponResponse {
  amount_off: Float
  duration: String!
  duration_in_months: Int!
  id: String!
  name: String!
  percent_off: Float
  valid: Boolean!
}

type SystemGetInvitationIdeaResponse {
  archieId: ID!
  ideaId: ID!
  invitationId: ID!
  nickName: String!
  role: InvitationRoleEnum!
  status: String!
}

type SystemGraphQLArchitecturesResponse {
  enabling_technologies: JSON
  id: ID!
  infrastructure_diagram: JSON
  integrations: JSON
}

type SystemGraphQLBlueprintResponse {
  ai_enablement_ideas: JSON
  application_classification: JSON
  building_blocks: JSON
  commercialization_model: JSON
  design_preview: JSON
  design_principles: JSON
  id: ID!
  insights: JSON
  modules: JSON
  originalPrompt: JSON
  problem_statement: JSON
  solution_statement: JSON
  user_types: JSON
}

type SystemGraphQLBuildingBlocksRequirementsResponse {
  description: String
  details: String
  id: ID!
  label: String
  status: String
  stories: JSON
}

type SystemGraphQLBuildingBlocksResponse {
  buildingBlocksRequirements: [SystemGraphQLBuildingBlocksRequirementsResponse]
  checked: Boolean
  description: String
  id: ID!
  name: String
  order: Int
  status: String
}

type SystemGraphQLBuildingBlocksScreensResponse {
  id: ID
  name: String
  order: Int
  purpose: String
  screensWireframes: [SystemGraphQLScreensWireFramesResponse]
  status: String
  urlPath: String
}

type SystemGraphQLFeaturesBreakdownResponse {
  functionality: String
  id: ID!
  name: String
  technicalRequirements: JSON
  userInterfaces: JSON
}

type SystemGraphQLModulesRequirementsResponse {
  description: String
  details: String
  id: ID!
  label: String
  status: String
  stories: JSON
}

type SystemGraphQLModulesResponse {
  description: String
  icon: String
  id: ID!
  modulesRequirements: [SystemGraphQLModulesRequirementsResponse]
  name: String
  order: Int
  status: String
  uiPattern: JSON
}

type SystemGraphQLOverviewResponse {
  accessibility_requirements: JSON
  application_classification: JSON
  commercialization_model: JSON
  compliance_requirements: JSON
  design_principles: JSON
  id: ID!
  performance_requirements: JSON
  problem_statement: JSON
  security_requirements: JSON
  solution_statement: JSON
  status: String
}

type SystemGraphQLScreensWireFramesResponse {
  html: String
  id: ID!
  name: String
  status: String
}

input SystemGraphQLSectionResultRegenerateMutationInput {
  archieId: ID!
  idea: ID!
  instructions: String
  package: String!
  provisionalData: Boolean
  requirementsDescription: String
  sectionCategoriesWithIds: JSON
}

type SystemGraphQLUserAccountsResponse {
  email: String
  firstName: String
}

type SystemGraphQLUserInterfacesResponse {
  requirements_design_guidelines: JSON
  requirements_site_map: JSON
  requirements_ui_ux_general: JSON
  status: String
  wireframe_layout: JSON
}

type SystemGraphQLUserTypeDetailsResponse {
  comprehensive_needs: JSON
  comprehensive_painpoints: JSON
  id: ID!
  status: String
}

type SystemGraphQLUserTypeUseCaseResponse {
  description: String
  id: ID!
  name: String
}

type SystemGraphQLUserTypesResponse {
  description: String
  deviceusages: [String]
  id: ID!
  name: String
  order: Int
  softwareproficiency: String
  status: String
  userTypesDetails: [SystemGraphQLUserTypeDetailsResponse]
  userTypesUseCases: [SystemGraphQLUserTypeUseCaseResponse]
}

type SystemIdeaDetailsResponse {
  archieId: ID!
  architectures: [SystemGraphQLArchitecturesResponse]
  blueprints: [SystemGraphQLBlueprintResponse]
  buildingBlocks: [SystemGraphQLBuildingBlocksResponse]
  createdAt: DateTime
  description: String
  detailedProgress: JSON
  elevatorDescription: String
  executedDesign: Boolean
  featuresBreakdown: [SystemGraphQLFeaturesBreakdownResponse]
  id: ID!
  invitations: [SystemIdeaInvitationBaseResponse]
  isDemoProject: Boolean
  members: [SystemIdeaMemberBaseResponse]
  modules: [SystemGraphQLModulesResponse]
  nextStep: String!
  nickName: String!
  overviews: [SystemGraphQLOverviewResponse]
  owner: SystemMemberAccountInfo
  ownerType: String
  plan: SystemPlanInfoIdea
  progress: Float!
  requirementsDescription: String
  screens: [SystemGraphQLBuildingBlocksScreensResponse]
  technicalDesign: SystemTechnicalDesignResponse
  updatedAt: DateTime
  userInterfaces: [SystemGraphQLUserInterfacesResponse]
  userTypes: [SystemGraphQLUserTypesResponse]
}

input SystemIdeaGeneralCreateMutationInput {
  description: String!
  nickName: String
  organizationId: String
}

type SystemIdeaGeneralResponse {
  archieId: ID!
  description: String!
  id: ID!
  nickName: String!
}

input SystemIdeaGeneralUpdateMutationInput {
  description: String
  elevatorDescription: String
  id: ID!
  nickName: String
  requirementsDescription: String
}

type SystemIdeaGraphQLSchema {
  schema: String!
}

input SystemIdeaImproveMutationInput {
  description: String
}

type SystemIdeaImproveResponse {
  suggestion: String!
}

input SystemIdeaImproveWithAIMutationInput {
  aiIdeas: [SystemAIIdeasInput]
  archieId: ID!
}

type SystemIdeaImproveWithAIResponse {
  expectedBenefits: [String]
  kpis: [String]
  statement: String!
}

type SystemIdeaInvitationBaseResponse {
  email: String!
  id: ID!
  role: InvitationRoleEnum!
}

"""Idea Invitation Member"""
type SystemIdeaInvitationMember {
  id: String
  role: String
  status: String
  userAccounts: SystemGraphQLUserAccountsResponse
}

type SystemIdeaItemOrganizationMember {
  archieId: ID!
  createdAt: DateTime
  description: String!
  detailedProgress: JSON
  id: ID!
  nextStep: String
  nickName: String!
  progress: Float!
  updatedAt: DateTime
}

type SystemIdeaItemRespSingle {
  archieId: ID!
  createdAt: DateTime
  description: String!
  detailedProgress: JSON
  id: ID!
  lastActivityAt: DateTime
  members: [SystemMemberAccountInfo]
  nextStep: String!
  nickName: String!
  owner: SystemMemberAccountInfo
  progress: Float!
  updatedAt: DateTime
}

"""SystemIdeaItemResponse output"""
type SystemIdeaItemResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemIdeaItemRespSingle!]!
}

type SystemIdeaMemberBaseResponse {
  avatar: GraphQLFileItemResponse
  email: String!
  firstName: String!
  lastName: String!
  onboardingStatus: JSON!
  organizationId: ID!
  role: InvitationRoleEnum!
}

type SystemIdeaUserResponse {
  ideas: SystemIdeaItemResponse!
}

union SystemInboxEventDetailsUnion = SystemInboxEventEnvironmentInvitationDetails | SystemInboxEventNotificationDetailsType | SystemInboxEventOrganizationInvitationDetails

type SystemInboxEventEnvironmentInvitationDetails {
  environmentName: String
  invitedBy: SystemInboxEventInvitedBy
  project: SystemInboxEventProject
  status: SystemInboxEventStatusEnum
  uuid: String
  workspace: SystemInboxEventWorkspace
}

type SystemInboxEventInvitedBy {
  avatar: GraphQLFileItemResponse
  email: String
  firstName: String
  lastName: String
}

type SystemInboxEventItem {
  createdAt: DateTime!
  details: SystemInboxEventDetailsUnion
  id: ID!
  isCompleted: Boolean
  type: SystemInboxEventTypeEnum
}

type SystemInboxEventNotificationDetailsType {
  details: JSON
  kind: String
}

type SystemInboxEventOrganization {
  avatar: GraphQLFileItemResponse
  id: ID!
  name: String
}

type SystemInboxEventOrganizationInvitationDetails {
  invitedBy: SystemInboxEventInvitedBy
  organization: SystemInboxEventOrganization
  status: SystemInboxEventStatusEnum
  uuid: String
}

type SystemInboxEventProject {
  apiHost: String
  avatar: GraphQLFileItemResponse
  id: ID!
  kind: String
  name: String
}

enum SystemInboxEventStatusEnum {
  accepted
  declined
  sent
}

enum SystemInboxEventTypeEnum {
  EnvironmentInvitation
  Notification
  OrganizationInvitation
}

type SystemInboxEventWorkspace {
  apiHost: String
  avatar: GraphQLFileItemResponse
  id: ID!
  kind: String
  name: String
}

"""SystemInboxEventsListResponse output"""
type SystemInboxEventsListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemInboxEventItem!]!
}

"""Table Create Index Input"""
input SystemIndexCreateInput {
  columns: [SystemTableIndexColumnInput!]!
  force: Boolean
  name: String
  tableId: ID!
  type: TableIndexType!
}

"""Table Delete Index Input"""
input SystemIndexDeleteInput {
  id: ID!
}

"""Table Update Index Input"""
input SystemIndexUpdateInput {
  columns: [SystemTableIndexColumnInput!]
  force: Boolean
  id: ID!
  name: String
  type: TableIndexType
}

"""Idea Invitation Accept/Cancel Response"""
type SystemInvitationAcceptCancelResponse {
  success: Boolean!
}

"""Idea invitation accept/Cancel input"""
input SystemInvitationIdeaAcceptCancelInput {
  accepted: Boolean!
  id: String!
}

"""Idea Invitation Cancel Response"""
type SystemInvitationIdeaResendResponse {
  success: Boolean!
}

"""Idea invitation cancel input"""
input SystemInvitationIdeaResendlInput {
  id: String!
}

"""Invite recipient input"""
input SystemInviteIdeaRecipientInput {
  email: String!
  ideaId: String!
  organizationUserId: String
  role: RoleEnum!
}

"""Invite idea input"""
input SystemInviteMembersIdeaInput {
  organizationId: String
  recipients: [SystemInviteIdeaRecipientInput!]!
}

"""Invite members input"""
input SystemInviteMembersInput {
  recipients: [SystemInviteRecipientInput!]!
}

"""Invite recipient input"""
input SystemInviteRecipientInput {
  email: String!
  firstName: String
  lastName: String
  roles: [ID!]
}

"""Invited By Name"""
type SystemInvitedByName {
  email: String
  firstName: String
  lastName: String
  projectId: String
  projectName: String
  workspaceName: String
}

"""InvokeData"""
input SystemInvokeData {
  functionName: String!
  inputArgs: String
  nodeVersion: String
}

"""InvokeFunctionResponse"""
type SystemInvokeFunctionResponse {
  responseData: String!
}

"""LogsListFiltered Response"""
type SystemLogsListFilteredResponse {
  count: Int
  items: [SystemCloudLogsEntry]
  nextToken: String
}

"""
Member - list of workspaces you are member of
Owner - list of workspaces you are owner of
OrganizationUser - list of organizations you are part of
"""
type SystemMemberAccountDeleteDetails {
  member: [SystemOrganizationWorkspaceItem]
  organizationUser: [SystemOrganizationBaseItem]
  owner: [SystemOrganizationWorkspaceItem]
}

type SystemMemberAccountDeleteResponse {
  details: SystemMemberAccountDeleteDetails
  success: Boolean!
}

type SystemMemberAccountInfo {
  aboutMe: String
  addressLine1: String
  addressLine2: String
  archieRole: String
  authCreateMethod: String
  avatar: GraphQLFileItemResponse
  city: String
  companyName: String
  country: String
  createdAt: DateTime
  email: String!
  firstName: String
  githubUsername: String
  id: String
  intendedUse: String
  isADemoUser: Boolean
  isArchieAdmin: Boolean
  isDeveloper: Boolean
  isEmailVerified: Boolean
  isOrganizationOwner: Boolean
  lastName: String
  learningMode: Boolean
  linkedInUsername: String
  onboardingStatus: JSON
  projectDescription: String
  role: String
  sourceAccount: String
  state: String
  status: String
  timezone: String
  twitterUsername: String
  type: SystemUserType
  website: String
  zipCode: String
}

input SystemMemberAccountUpsertDataInput {
  aboutMe: String
  addressLine1: String
  addressLine2: String
  archieRole: String
  authCreateMethod: String
  avatar: GraphQLCreateFileItemInput
  city: String
  companyName: String
  country: String
  createdAt: DateTime
  email: String
  firstName: String
  githubUsername: String
  id: String
  intendedUse: String
  isADemoUser: Boolean
  isArchieAdmin: Boolean
  isDeveloper: Boolean
  isEmailVerified: Boolean
  isOrganizationOwner: Boolean
  lastName: String
  learningMode: Boolean
  linkedInUsername: String
  onboardingStatus: JSON
  organizationCreatorRole: String
  organizationKind: String
  organizationNeed: String
  organizationSize: String
  projectDescription: String
  role: String
  sourceAccount: String
  state: String
  status: String
  timezone: String
  twitterUsername: String
  type: SystemUserType
  website: String
  zipCode: String
}

input SystemMemberArchieInviteOrganizationInput {
  email: String!
  role: String!
}

"""Member Change Organization Role Input"""
input SystemMemberChangeOrganizationRoleInput {
  id: String!
  role: String!
}

"""Member Change Organization Role Response"""
type SystemMemberChangeOrganizationRoleResponse {
  success: Boolean!
}

"""Member Invitation"""
type SystemMemberInvitation {
  accepted: Boolean
  acceptedOn: DateTime
  apiHost: String
  email: String
  firstName: String
  id: String
  invitedBy: SystemInvitedByName
  isRegistered: Boolean
  lastName: String
  resentOn: DateTime
}

"""Member invitation accept input"""
input SystemMemberInvitationAcceptInput {
  accepted: Boolean!
  id: String!
}

"""Member Invitation Accept Response"""
type SystemMemberInvitationAcceptResponse {
  success: Boolean!
}

"""Cancel members invitations input"""
input SystemMemberInvitationCancelInput {
  email: String!
}

"""Resend member invitation input"""
input SystemMemberInvitationResendInput {
  email: ID!
}

type SystemMemberInvitationsList {
  count: Int
  items: [SystemMemberInvitation]
}

type SystemMemberOrganizationAccountInfo {
  aboutMe: String
  addressLine1: String
  addressLine2: String
  archieRole: String
  authCreateMethod: String
  avatar: GraphQLFileItemResponse
  city: String
  companyName: String
  country: String
  createdAt: DateTime
  email: String!
  firstName: String
  githubUsername: String
  id: String
  ideas: [SystemIdeaItemOrganizationMember]
  intendedUse: String
  isADemoUser: Boolean
  isArchieAdmin: Boolean
  isDeveloper: Boolean
  isEmailVerified: Boolean
  isOrganizationOwner: Boolean
  lastName: String
  learningMode: Boolean
  linkedInUsername: String
  onboardingStatus: JSON
  organization: SystemOrganizationBaseItem
  projectDescription: String
  role: String
  sourceAccount: String
  state: String
  status: String
  timezone: String
  twitterUsername: String
  type: SystemUserType
  website: String
  zipCode: String
}

"""Member Change Organization Role Input"""
input SystemMemberOrganizationInviteMutationInput {
  ideaId: String
  ideaRole: String
  invitedByName: String!
  members: [SystemMemberArchieInviteOrganizationInput]
  organizationId: ID!
  organizationName: String!
}

"""Member Change Organization Role Input"""
input SystemMemberOrganizationResendInviteMutationInput {
  email: String!
  invitedByName: String!
  organizationId: ID!
  organizationName: String!
}

"""MemberPaymentDetailsUpdateMutationInput"""
input SystemMemberPaymentDetailsUpdateMutationInput {
  cardToken: String
}

"""Member Resend Verify Account Email Response"""
type SystemMemberResendVerifyAccountEmailResponse {
  success: Boolean!
}

"""Member Resend Verify Account Email input"""
input SystemMemberResendVerifyAccountEmaillInput {
  email: String!
}

type SystemMembersAccountList {
  items: [SystemMemberOrganizationAccountInfo]
}

type SystemMembersIdeaList {
  count: Int
  items: [SystemIdeaInvitationMember]
}

"""MissingRelation Field Attributes"""
type SystemMissingRelationFieldTypeAttributes {
  missingTable: String!
}

type SystemMutation {
  ExportIdeaToDocument(data: SystemExportIdeaToDocumentInput!): SystemExportIdeaToDocumentResponse
  applicationDelete(data: SystemApplicationDeleteMutationInput!): SuccessResponse
  applicationInstall(data: SystemApplicationInstallInput!): SystemApplication
  applicationUpdate(data: SystemApplicationUpdateInput!): SystemApplication
  billingContextCacheEvict(keys: [String!]!, projectKeys: [String!]!): SystemCacheEvictResponse
  billingPlanUpdate(data: SystemBillingPlanUpdateMutationInput!): SystemBillingCurrentPlanResponse
  changePlanIdea(data: SystemChangePlanIdeaMutationInput!): SystemBillingCurrentPlanResponse
  changeRoleIdeaInvitation(data: SystemChangeRoleIdeaMutationInputList!): SuccessResponse
  changeRoleIdeaMember(data: SystemChangeRoleIdeaMutationInputList!): SuccessResponse
  ciCommit(build: String, migrationNames: [String], mode: SystemCiCommitMode, nodeVersion: String): AsyncSession
  ciInstall: SuccessResponse
  createOrganizationSettingsTech(description: String, name: String!, organizationSettingsId: ID!): SystemOrganizationSettingsTech!
  deleteArchieMemberFromOrganization(email: String!, organizationId: String!): SystemDeleteArchieMemberFromOrganizationResponse!
  deleteIdea(data: SystemDeleteIdeaMutationInput!): SuccessResponse
  deleteMemberIdea(data: SystemDeleteMemberIdeaMutationInputList!): SuccessResponse
  deploy(data: SystemDeployingBuildInput): Boolean
  environmentBackup(environmentName: String!): AsyncSession
  environmentBranch(force: Boolean, mode: SystemBranchEnvironmentMode, name: String!): AsyncSession
  environmentDelete(environmentName: String!): SuccessResponse
  environmentDeleteAsync(environmentName: String!): AsyncSession
  environmentMemberDelete(filter: SystemEnvironmentMembersFilter): SuccessResponse!
  environmentMemberUpdate(data: SystemEnvironmentMemberUpdateData, filter: SystemEnvironmentMembersFilter): SystemEnvironmentMember
  environmentRestore(backup: String!, environmentName: String!): AsyncSession
  environmentSetup(data: EnvironmentSetupInput): SuccessResponse
  fieldCreate(data: SystemTableFieldCreateInput!): SystemTableField!
  fieldDelete(data: SystemTableFieldDeleteInput!): SuccessResponse!
  fieldUpdate(data: SystemTableFieldUpdateInput!): SystemTableField!
  fieldUpdatePosition(data: SystemTableFieldPositionUpdateInput!): SuccessResponse!
  fileUploadByUrl(data: SystemFileUploadByUrlInput!): SystemFileUploadByUrlResponse!
  ideaImprove(data: SystemIdeaImproveMutationInput!): SystemIdeaImproveResponse
  ideaImproveWithAI(data: SystemIdeaImproveWithAIMutationInput!): SystemIdeaImproveWithAIResponse
  ideaTransferOwner(data: SystemTransferIdeaOwnerMutationInput!): SuccessResponse
  ideaUserCreate(data: SystemIdeaGeneralCreateMutationInput!): SystemIdeaGeneralResponse
  ideaUserUpdate(data: SystemIdeaGeneralUpdateMutationInput!): SystemIdeaGeneralResponse
  indexCreate(data: SystemIndexCreateInput!): SystemTableIndex!
  indexDelete(data: SystemIndexDeleteInput!): SuccessResponse
  indexUpdate(data: SystemIndexUpdateInput!): SystemTableIndex!
  invitationIdeaAcceptCancel(data: SystemInvitationIdeaAcceptCancelInput!): SystemInvitationAcceptCancelResponse!
  invitationIdeaResend(data: SystemInvitationIdeaResendlInput!): SystemInvitationIdeaResendResponse!
  inviteMembers(data: SystemInviteMembersInput!, force: Boolean): [SystemTeamInvitationDetails]!
  inviteToIdea(data: SystemInviteMembersIdeaInput!): SuccessResponse
  invoke(data: SystemInvokeData): SystemInvokeFunctionResponse
  memberAccountDelete: SystemMemberAccountDeleteResponse
  memberAccountUpsert(data: SystemMemberAccountUpsertDataInput): SystemMemberAccountInfo
  memberChangeOrganizationRole(data: SystemMemberChangeOrganizationRoleInput!): SystemMemberChangeOrganizationRoleResponse!
  memberInvitationAccept(data: SystemMemberInvitationAcceptInput!): SystemMemberInvitationAcceptResponse!
  memberInvitationCancel(data: SystemMemberInvitationCancelInput!): SuccessResponse
  memberInvitationResend(data: SystemMemberInvitationResendInput!): SuccessResponse
  memberPaymentDetailsUpdate(data: SystemMemberPaymentDetailsUpdateMutationInput!): SystemPaymentDetailsResponse
  memberResendVerifyAccountEmail(data: SystemMemberResendVerifyAccountEmaillInput!): SystemMemberResendVerifyAccountEmailResponse!
  notificationUpdate(id: String!, status: NotificationStatusType!): SuccessResponse
  onboardingUpdate(data: SystemMemberAccountUpsertDataInput): SystemMemberAccountInfo
  organizationArchieUpgrade(data: SystemOrganizationUpgradeMutationInput!): OrganizationUpgradeResponse
  organizationInviteUser(email: String!, firstName: String, lastName: String, organizationId: ID!, projectRoles: [SystemOrganizationProjectWithEnvironmentRolesInput], role: String!): OrganizationUserInvitationResponse
  organizationInviteUserAccept(invitationId: String!): SuccessResponse
  organizationInviteUserCancel(invitationId: String!): SuccessResponse
  organizationMemberInvite(data: SystemMemberOrganizationInviteMutationInput!): SuccessResponse
  organizationMemberResendInvite(data: SystemMemberOrganizationResendInviteMutationInput!): SuccessResponse
  organizationPaymentDetailsUpdate(data: SystemOrganizationPaymentDetailsUpdateMutationInput!): SystemPaymentDetailsResponse
  organizationProjectUserRemove(email: String!, projectId: ID!): SuccessResponse
  organizationProjectUserShare(email: String!, environmentRoles: [SystemOrganizationProjectEnvironmentRolesInput], projectId: ID!): SuccessResponse
  organizationUpdate(description: String, id: String!, image: GraphQLCreateFileItemInput, name: String, type: SystemOrganizationTypeEnum): SystemOrganizationItem
  organizationUserRemove(email: String!, organizationId: String!): SuccessResponse
  organizationUserUpdate(email: String!, organizationId: ID!, role: String!): SystemOrganizationUserInfo
  partnerCreate(data: SystemPartnerGeneralCreateMutationInput!): SystemPartnerGeneralResponse
  postMessageToQueue(data: SystemPostMessageToQueueInput!): SuccessResponse
  prepareDeploy: SystemDeployDataResponse!
  projectCreate(data: SystemProjectCreateMutationInput!): AsyncSession
  projectDelete(projectId: ID!): AsyncSession
  projectLeave(projectId: ID!): SuccessResponse
  projectUpdate(data: SystemProjectUpdateMutationInput!): SystemProjectUpdateResponse
  removeOrganizationSettingsTech(organizationSettingsTechId: ID!): SuccessResponse!
  rolePermissionsCacheEvict(keys: [String!]!): SystemCacheEvictResponse
  sectionResultCreate(data: SystemSectionResultCreateMutationInput!): SystemSectionResultResponse
  sectionResultGenerate(data: SystemSectionResultGenerateMutationInput!): SuccessResponse
  sectionResultPropagate(data: SystemSectionResultPropagateUpdateMutationInput!): SuccessResponse
  sectionResultRegenerate(data: SystemGraphQLSectionResultRegenerateMutationInput!): SuccessResponse
  sectionResultUpdate(data: SystemSectionResultUpdateMutationInput!): SuccessResponse
  tableCreate(data: SystemTableCreateInput!): SystemTable!
  tableDelete(data: SystemTableDeleteInput!): SuccessResponse!
  tableUpdate(data: SystemTableUpdateInput!): SystemTable!
  updateOrganizationSettings(fileId: String, id: ID!, isWhiteLabelActive: Boolean, statementOfWork: String): SystemOrganizationSettings!
  viewCreate(data: SystemViewCreateInput!): SystemTable!
  viewUpdate(data: SystemViewUpdateInput!): SystemTable!
  workspaceCreate(data: SystemWorkspaceCreateMutationInput!): SystemWorkspaceCreateResponse
  workspaceCreateAsync(data: SystemWorkspaceCreateMutationInput!): SystemWorkspaceCreateResponse
  workspaceDelete(data: SystemWorkspaceDeleteMutationInput!): SuccessResponse
  workspaceLeave(force: Boolean): SuccessResponse
  workspaceUpdate(data: SystemWorkspaceUpdateMutationInput!): SystemWorkspaceUpdateResponse
}

"""Number Field Attributes"""
type SystemNumberFieldTypeAttributes {
  autoIncrement: Boolean
  currency: String
  format: String!
  isBigInt: Boolean
  maxValue: Float
  minValue: Float
  precision: Int
}

"""Number Type Format Enum"""
enum SystemNumberTypeFormatEnum {
  CURRENCY
  FRACTION
  NUMBER
  PERCENTAGE
  SCIENTIFIC
}

type SystemOrganizationArchieBaseItem {
  description: String
  id: ID!
  image: SystemFileBaseInfo
  isOrganizationOwner: Boolean!
  name: String!
  organizationCreatorRole: String
  organizationKind: String
  organizationSize: String
  role: String!
  type: SystemOrganizationTypeEnum
}

type SystemOrganizationBaseItem {
  description: String
  id: ID!
  image: SystemFileBaseInfo
  name: String!
  type: SystemOrganizationTypeEnum
}

type SystemOrganizationInvitation {
  accepted: Boolean
  email: String!
  emailFrom: String!
  firstName: String
  firstNameFrom: String
  id: ID!
  lastName: String
  lastNameFrom: String
  organization: SystemOrganizationBaseItem!
  role: String!
}

type SystemOrganizationItem {
  description: String
  id: ID!
  image: SystemOrganizationItemImage
  name: String!
  type: SystemOrganizationTypeEnum
  users: [SystemOrganizationUserInfo]
}

type SystemOrganizationItemImage {
  downloadUrl: String
  id: String
}

"""OrganizationPaymentDetailsUpdateMutationInput"""
input SystemOrganizationPaymentDetailsUpdateMutationInput {
  cardToken: String!
  organizationId: ID!
}

"""environmentId to add to with roles (array of ids)."""
input SystemOrganizationProjectEnvironmentRolesInput {
  environmentId: String!
  roles: [ID]
}

type SystemOrganizationProjectItem {
  description: String
  id: ID!
  image: SystemFileBaseInfo
  kind: String!
  name: String!
  organization: SystemOrganizationBaseItem
}

input SystemOrganizationProjectWithEnvironmentRolesInput {
  environmentRoles: [SystemOrganizationProjectEnvironmentRolesInput]
  projectId: ID!
}

"""Representation of a organization settings."""
type SystemOrganizationSettings {
  id: ID!

  """Flag to indicate if white label is active."""
  isWhiteLabelActive: Boolean

  """Statement of work defined by the organization."""
  statementOfWork: String

  """Stack of technologies defined by the organization."""
  techStack: [SystemOrganizationSettingsTech!]!

  """White label image defined by the organization."""
  whiteLabelImage: SystemFileBaseInfo
}

"""Representation of a organization settings technology."""
type SystemOrganizationSettingsTech {
  """Description of the tech stack."""
  description: String
  id: ID!

  """Name of the given tech stack, example "React"."""
  name: String!
}

enum SystemOrganizationTypeEnum {
  agency
  community
  company
  individual
}

"""Organization Upgrade Input"""
input SystemOrganizationUpgradeMutationInput {
  description: String
  licenseId: String
  name: String!
  organizationCreatorRole: String!
  organizationKind: String!
  organizationSize: String!
  owner: String!
  type: String!
}

type SystemOrganizationUserInfo {
  avatar: GraphQLFileItemResponse
  email: String!
  firstName: String
  id: String!
  lastName: String
  projects: [SystemOrganizationProjectItem]
  role: String!
  status: String!
}

type SystemOrganizationWorkspaceItem {
  apiHost: String
  description: String
  id: ID!
  image: SystemFileBaseInfo
  kind: String!
  name: String!
  organization: SystemOrganizationBaseItem
}

"""SystemOrganizationsListArchieResponse output"""
type SystemOrganizationsListArchieResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemOrganizationArchieBaseItem!]!
}

"""SystemOrganizationsListResponse output"""
type SystemOrganizationsListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemOrganizationBaseItem!]!
}

input SystemPartnerGeneralCreateMutationInput {
  anythingElse: String
  blueprintUrl: String!
  companyName: String!
  email: String!
  firstName: String!
  lastName: String!
  location: String!
  phoneNumber: String
}

type SystemPartnerGeneralResponse {
  AccountId: String!
  anythingElse: String
  blueprintUrl: String!
  companyName: String!
  createdAt: Date!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  location: String!
  phoneNumber: String
  updatedAt: Date!
}

type SystemPartnerItemRespSingle {
  AccountId: String!
  anythingElse: String
  blueprintUrl: String!
  companyName: String!
  createdAt: Date!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  location: String!
  phoneNumber: String
  updatedAt: Date!
}

"""SystemPartnerItemResponse output"""
type SystemPartnerItemResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemPartnerItemRespSingle!]!
}

type SystemPartnerResponse {
  partners: SystemPartnerItemResponse!
}

enum SystemPaymentDetailsOrigin {
  member
  organization
  workspace
}

enum SystemPaymentDetailsOriginProject {
  member
  organization
  workspace
}

type SystemPaymentDetailsProjectResponse {
  brand: String
  expMonth: Int
  expYear: Int
  last4: String
  origin: SystemPaymentDetailsOriginProject
}

type SystemPaymentDetailsResponse {
  brand: String
  expMonth: Int
  expYear: Int
  last4: String
  origin: SystemPaymentDetailsOrigin!
}

"""Diff Environment Input"""
type SystemPlanEnvironmentOutput {
  url: String
}

type SystemPlanForIdeaQueryResponse {
  id: ID
}

type SystemPlanInfoIdea {
  features: [String]
  planName: String
}

input SystemPostMessageToQueueInput {
  message: JSON
  routingKey: String
}

"""ProjectCreateMutationInput"""
input SystemProjectCreateMutationInput {
  authType: String
  billingPlanId: ID
  cardToken: String
  description: String
  howStart: String
  ideaId: String
  image: GraphQLCreateFileItemInput
  kind: String
  name: String!
  organizationId: ID
}

type SystemProjectDeploymentsResponse {
  deploymentsProject: SystemDeploymentProjectListResponse
}

type SystemProjectFrontendResponse {
  frontendUtilization: SystemFrontendUtilizationResponse
  frontendWorkspaces: SystemWorkspaceListResponse
}

type SystemProjectImage {
  downloadUrl: String
  id: String
}

type SystemProjectItemRespSingle {
  apiHost: String
  createdAt: DateTime
  description: String
  id: ID!
  image: SystemProjectImage
  kind: String
  lastAccess: DateTime
  name: String!
  nextPlan: SystemBillingNextPlanResponse
  organization: SystemOrganizationBaseItem
  owner: SystemMemberAccountInfo
  plan: SystemBillingCurrentPlanResponse
  region: String
  usersCount: Int
}

"""SystemProjectItemResponse output"""
type SystemProjectItemResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemProjectItemRespSingle!]!
}

type SystemProjectItemWS {
  description: String
  id: ID!
  image: SystemWorkspaceImage
  name: String!
  region: String
}

type SystemProjectPlanResponse {
  overagesPrice: Float
  paymentDetail: SystemPaymentDetailsProjectResponse
  plan: SystemBillingCurrentPlanResponse
}

type SystemProjectQuotasResponse {
  metricUsages: SystemBillingMetricUsagesListResponse
  metricUsagesQuotas: SystemBillingMetricUsageQuotasListResponse
}

"""ProjectUpdateMutationInput"""
input SystemProjectUpdateMutationInput {
  description: String
  id: ID!
  image: GraphQLCreateFileItemInput
  name: String
}

type SystemProjectUpdateResponse {
  description: String
  id: ID
  image: GraphQLFileItemResponse
  name: String
}

type SystemProjectUserDetailsResponse {
  apiHost: String!
  authenticationInfo: [SystemAuthenticationInfo]
  backendUtilization: SystemBackendUtilizationResponse
  backendWorkspaces: SystemWorkspaceListResponse
  createdAt: DateTime
  description: String
  environmentsProject: SystemEnvironmentsProjectListResponse
  id: ID!
  image: SystemProjectImage
  kind: String!
  lastAccess: DateTime
  metricUsages: SystemBillingMetricUsagesListResponse
  metricUsagesQuotas: SystemBillingMetricUsageQuotasListResponse
  name: String!
  nextPlan: SystemBillingNextPlanResponse
  organization: SystemOrganizationBaseItem
  overagesPrice: Float
  owner: SystemMemberAccountInfo
  paymentDetail: SystemPaymentDetailsProjectResponse
  plan: SystemBillingCurrentPlanResponse
  region: String
  teamMemberCount: Int
}

type SystemProjectUserResponse {
  myProjects: SystemProjectItemResponse!
  sharedProjects: SystemProjectItemResponse!
}

type SystemPromptItemRespSingle {
  basicSectionConfiguration: JSON
  dependsOn: [String]
  id: ID!
  inputVariables: JSON!
  iterableConfig: JSON
  modelId: ID!
  modelName: String!
  name: String!
  outputSchema: JSON!
  package: String!
  sectionCategory: String
  templateBody: String!
}

"""SystemPromptItemResponse output"""
type SystemPromptItemResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemPromptItemRespSingle!]!
}

type SystemPromptsResponse {
  prompts: SystemPromptItemResponse!
}

type SystemQuery {
  application(id: String!): SystemApplication
  applicationsList: SystemApplicationListResponse
  asyncSessionStatus(sessionId: String!): SystemAsyncSessionStatusResponse
  basicSectionConfigurationForPromptQuery: SystemBasicSectionConfigurationForPromptExecutionResponse
  basicSectionConfigurationQuery: SystemBasicSectionConfigurationResponse
  billingCurrentPlan(organizationId: ID): SystemBillingCurrentPlanResponse
  billingDetails: SystemBillingDetailsResponse @deprecated(reason: "No longer supported. Use `system.memberPaymentDetails, system.organizationPaymentDetails or system.workspacePaymentDetails` instead.")
  billingInvoicesList(after: ID, before: ID, by: SystemBillingInvoicesListFilterType, limit: Int, projectId: ID): SystemBillingInvoicesListResponse! @deprecated(reason: "No longer supported. Use `system.memberBillingHistory, system.organizationBillingHistory or system.workspaceBillingHistory` instead.")
  billingMetricUsageQuotasList(organizationId: ID, projectId: ID): SystemBillingMetricUsageQuotasListResponse!
  billingMetricUsagesList(filter: SystemBillingMetricUsagesListFilter, organizationId: ID, projectId: ID): SystemBillingMetricUsagesListResponse!
  ciGenerate(sourceEnvironmentId: String, tables: [String!], targetEnvironmentId: String): SystemGenerateEnvironmentOutput
  ciGenerateAsync(sourceEnvironmentId: String, tables: [String!], targetEnvironmentId: String): AsyncSession
  ciPlan(sourceEnvironmentId: String, tables: [String!], targetEnvironmentId: String): SystemPlanEnvironmentOutput @deprecated(reason: "No longer supported. Use `ciGenerate` instead.")
  ciStatus: SystemCiStatusOutput
  deployStatus(buildName: String!): SystemDeployStatusResult!
  ensureOrganizationSettings(organizationId: ID!): SystemOrganizationSettings!
  environmentBackupsList(environmentName: String): SystemEnvironmentBackupListResponse
  environmentMember(filter: SystemEnvironmentMemberFilter): SystemEnvironmentMember
  environmentMembersList(environmentIds: [String], filter: SystemEnvironmentMembersListFilter, first: Int, skip: Int, sort: [SystemEnvironmentMembersListSort!]): SystemEnvironmentMembersListResponse
  environmentSettings: SystemEnvironmentSettings
  environmentsList(workspaceId: String): SystemEnvironmentsListResponse
  fileUploadSignInfo: SystemFileUploadSignInfo
  functionsList(applicationId: String, filter: SystemFunctionInfoFilter, orderBy: [SystemFunctionInfoOrderBy]): SystemFunctionListResponse
  functionsVersionCheck: SystemFunctionInfoCheck
  getCouponQuery(couponName: String!): SystemGetCouponResponse
  getCurrentPlanForIdeaQuery: SystemPlanForIdeaQueryResponse
  getEnvironmentRoles(email: String, projectId: ID, workspaceId: String): [SystemEnvironmentRoleList]
  getInvitationIdeaQuery(id: ID!): SystemGetInvitationIdeaResponse
  ideaDetails(demoMode: Boolean, ideaId: ID!): SystemIdeaDetailsResponse
  ideaGraphQLSchemaQuery(ideaId: ID!): SystemIdeaGraphQLSchema!
  ideaMembers(id: String!): SystemMembersIdeaList
  ideaSectionDetails(ideaId: ID!, packageIdea: ID!, sectionCategory: ID!): SystemIdeaDetailsResponse
  ideasDemoListQuery: SystemIdeaUserResponse
  ideasListQuery: SystemIdeaUserResponse
  ideasUserListQuery(organizationId: String): SystemIdeaUserResponse
  inboxEventsList(filter: InboxEventsListFilter, first: Int, skip: Int): SystemInboxEventsListResponse
  introspection: IntrospectionQueryResponse
  logs(applicationId: String, endTime: DateTime, functionName: String!, limit: Int, startTime: DateTime): [String] @deprecated(reason: "No longer supported. Use `system.logsList` instead.")
  logsList(applicationId: String, endTime: DateTime, functionName: String!, limit: Int, startTime: DateTime): [SystemCloudLogsEntry] @deprecated(reason: "No longer supported. Use `system.logsListFiltered` instead.")
  logsListFiltered(endTime: DateTime, filter: String, limit: Int, resource: String, startTime: DateTime, startToken: String): SystemLogsListFilteredResponse
  memberAccount: SystemMemberAccountInfo
  memberAccountFromEmail(email: String!): SystemMemberAccountInfo
  memberBillingHistory(first: Int, hideOrganizationInvoices: Boolean, skip: Int): SystemBillingInvoicesListResponse!
  memberFromOrganization(id: String!): SystemMemberOrganizationAccountInfo
  memberInvitation(id: String!): SystemMemberInvitation
  memberInvitationsList: SystemMemberInvitationsList
  memberPaymentDetails: SystemPaymentDetailsResponse
  membersByOrganization(organizationId: String!): SystemMembersAccountList
  organizationBillingHistory(first: Int, hideWorkspaceInvoices: Boolean, organizationId: ID!, skip: Int): SystemBillingInvoicesListResponse!
  organizationBillingPlan(organizationId: ID!): SystemBillingCurrentPlanResponse
  organizationById(organizationId: String!): SystemOrganizationItem
  organizationInvitationById(invitationId: String!): SystemOrganizationInvitation
  organizationPaymentDetails(organizationId: ID!): SystemPaymentDetailsResponse
  organizationsListByArchieUser: SystemOrganizationsListArchieResponse
  organizationsListByUser: SystemOrganizationsListResponse
  partnerListQuery: SystemPartnerResponse
  projectDeployments(projectId: ID!): SystemProjectDeploymentsResponse
  projectFrontend(projectId: ID!): SystemProjectFrontendResponse
  projectInfoDetails(projectId: ID!): SystemProjectUserDetailsResponse
  projectPlan(projectId: ID!): SystemProjectPlanResponse
  projectQuotas(projectId: ID!): SystemProjectQuotasResponse
  projectsUserListQuery(organizationId: ID): SystemProjectUserResponse
  promptListQuery: SystemPromptsResponse
  table(id: ID, name: String): SystemTable
  tableField(id: ID!): SystemTableField
  tablesList(filter: SystemTableListFilter): SystemTableListResponse!
  userBillingConfiguration(filterPlanProjects: Boolean, kind: String, organizationId: ID, region: String): SystemUserBillingConfigurationResponse!
  userBillingConfigurationArchie(ideaId: ID, kind: String, organizationId: ID, region: String): SystemUserBillingConfigurationResponse!
  userInvitationsList: SystemUserInvitationList
  viewDryRun(sql: String!): SystemViewDryRunOutput
  workspaceName: String
  workspacePaymentDetails(projectId: ID): SystemPaymentDetailsResponse
  workspacesFrontendList: SystemWorkspaceListResponse
  workspacesList: SystemWorkspaceListResponse
}

"""Relation"""
type SystemRelation {
  refField: SystemTableField
  refFieldDisplayName: String
  refFieldIsList: Boolean
  refFieldIsRequired: Boolean
  refFieldName: String
  refTable: SystemTable!
  relationFieldName: String
  relationTableName: String
}

"""Relation Create Input"""
input SystemRelationCreateInput {
  refFieldDisplayName: String
  refFieldIsList: Boolean!
  refFieldIsRequired: Boolean!
  refFieldName: String
  refTableId: ID!
}

"""Relation Update Input"""
input SystemRelationUpdateInput {
  refFieldDisplayName: String
  refFieldIsList: Boolean
  refFieldIsRequired: Boolean
  refFieldName: String
  refTableId: ID
}

"""Schema Origin"""
type SystemSchemaOrigin {
  provider: String
  type: SystemSchemaOriginType!
}

"""Schema Origin Type Enum"""
enum SystemSchemaOriginType {
  LOCAL
  REMOTE
  VIEW
}

input SystemSectionResultCreateMutationInput {
  archieId: ID!
  composedPrompt: JSON!
  content: JSON!
  cost: Float
  custom: Boolean
  executionTime: Int
  failureReason: JSON
  id: ID
  isRegenerate: Boolean
  lLMApiCalls: Int
  modelId: ID!
  package: String!
  prompt: ID!
  provisionalData: Boolean
  sectionCategory: String!
  status: SystemStatusIdea
  tokensInput: Int
  tokensOutput: Int
}

input SystemSectionResultGenerateMutationInput {
  archieId: ID!
  contextData: JSON
  idea: ID!
  iterableID: String
  package: String!
  provisionalData: Boolean
  sectionCategories: [String]
}

input SystemSectionResultPropagateUpdateMutationInput {
  archieId: ID!
  content: JSON!
  package: String!
  sectionCategory: String!
}

type SystemSectionResultResponse {
  sectionId: ID!
  sectionResultId: ID!
}

input SystemSectionResultUpdateMutationInput {
  archieId: ID!
  overviewId: String
  package: String!
  sectionCategories: [JSON]
}

"""Smart Field Attributes"""
type SystemSmartFieldTypeAttributes {
  format: String!
  innerFields: [SystemCustomTableField]
}

"""Smart Type Format Enum"""
enum SystemSmartTypeFormatEnum {
  ADDRESS
  PHONE
}

"""StatusIdea"""
enum SystemStatusIdea {
  Completed
  Locked
  NeedsAttention
  Open
}

"""Switch Field Attributes"""
type SystemSwitchFieldTypeAttributes {
  format: String!
  listOptions: [String]
}

"""Switch Type Format Enum"""
enum SystemSwitchTypeFormatEnum {
  ACTIVE_INACTIVE
  CUSTOM
  HIGH_LOW
  ON_OFF
  TRUE_FALSE
  YES_NO
}

"""Table"""
type SystemTable {
  application: SystemApplication
  attributes: SystemTableAttributes
  dataFeatures: SystemTableDataFeatures!
  description: String
  displayName: String
  fields: [SystemTableField!]
  fieldsForIndexing: [SystemTableField]
  id: ID!
  indexes: [SystemTableIndex!]
  isSystem: Boolean!
  name: String!
  origin: SystemSchemaOrigin!
  schemaFeatures: SystemTableSchemaFeatures!
}

"""Table Attributes"""
union SystemTableAttributes = SystemViewAttributes

"""Table Create Input"""
input SystemTableCreateInput {
  applicationId: String
  description: String
  displayName: String
  name: String!
}

"""Table Data Features"""
type SystemTableDataFeatures {
  create: Boolean!
  delete: Boolean!
  update: Boolean!
}

"""Table Delete Input"""
input SystemTableDeleteInput {
  id: ID!
}

"""TableField"""
type SystemTableField {
  computedMode: SystemComputedFieldMode
  dataFeatures: SystemFieldDataFeatures!
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: SystemFieldType!
  fieldTypeAttributes: SystemFieldTypeAttributes
  id: ID!
  isList: Boolean!
  isMeta: Boolean!
  isRequired: Boolean!
  isSystem: Boolean!
  isUnique: Boolean
  name: String!
  origin: SystemSchemaOrigin!
  relation: SystemRelation
  schemaFeatures: SystemFieldSchemaFeatures!
  table: SystemTable!
}

"""Table Field Create Input"""
input SystemTableFieldCreateInput {
  computedMode: SystemComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: SystemFieldType!
  fieldTypeAttributes: SystemFieldTypeAttributesInput
  force: Boolean
  initialValue: String
  isList: Boolean!
  isRequired: Boolean!
  isUnique: Boolean
  name: String!
  position: Int
  relation: SystemRelationCreateInput
  tableId: ID!
}

"""Table Field Delete Input"""
input SystemTableFieldDeleteInput {
  id: ID!
}

"""Table Field Position Update Input"""
input SystemTableFieldPositionUpdateInput {
  id: ID!
  newPosition: Int!
}

"""Table Field Update Input"""
input SystemTableFieldUpdateInput {
  computedMode: SystemComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: SystemFieldType
  fieldTypeAttributes: SystemFieldTypeAttributesInput
  force: Boolean
  id: ID!
  initialValue: String
  isList: Boolean
  isRequired: Boolean
  isUnique: Boolean
  name: String
  position: Int
  relation: SystemRelationUpdateInput
}

"""Table Index"""
type SystemTableIndex {
  columns: [SystemTableIndexColumn!]
  id: ID!
  isSystem: Boolean!
  name: String
  table: SystemTable!
  type: String!
}

"""Table Index Column"""
type SystemTableIndexColumn {
  name: String!
}

"""Table Index Column Input"""
input SystemTableIndexColumnInput {
  name: String!
}

"""Table List Application Filter"""
input SystemTableListApplicationFilter {
  id: String
  name: String
}

"""Table List Filter"""
input SystemTableListFilter {
  applications: [SystemTableListApplicationFilter]
  onlyUserTables: Boolean
  tableNames: [String]
}

"""Table List Response"""
type SystemTableListResponse {
  count: Int
  items: [SystemTable]
}

"""Table Schema Create Features"""
type SystemTableSchemaCreateFeatures {
  DATE: Boolean!
  FILE: Boolean!
  GEO: Boolean!
  ID: Boolean!
  JSON: Boolean!
  MISSING_RELATION: Boolean!
  NUMBER: Boolean!
  ONE_WAY_RELATION: Boolean!
  RELATION: Boolean!
  SMART: Boolean!
  SWITCH: Boolean!
  TEXT: Boolean!
  UUID: Boolean!
}

"""Table Schema Features"""
type SystemTableSchemaFeatures {
  computedFields: Boolean!
  create: SystemTableSchemaCreateFeatures!
  update: SystemTableSchemaMetaFieldFeatures
}

"""Table Schema Meta Field Features"""
type SystemTableSchemaMetaFieldFeatures {
  displayName: Boolean!
  name: Boolean!
}

"""Table Update Input"""
input SystemTableUpdateInput {
  description: String
  displayName: String
  id: ID!
  name: String
}

"""Team Invitation Details"""
type SystemTeamInvitationDetails {
  accepted: Boolean
  acceptedOn: DateTime
  apiHost: String
  email: String
  firstName: String
  id: String
  invitedBy: SystemInvitedByName
  isRegistered: Boolean
  lastName: String
  resentOn: DateTime
}

type SystemTechnicalDesignResponse {
  baaSProjectId: String
  customFunctions: JSON
  dataModel: JSON
  id: ID!
}

"""Text Field Attributes"""
type SystemTextFieldTypeAttributes {
  fieldSize: Int
  format: String!
}

"""Text Type Format Enum"""
enum SystemTextTypeFormatEnum {
  EIN
  EMAIL
  HTML
  MARKDOWN
  NAME
  UNFORMATTED
}

input SystemTransferIdeaOwnerMutationInput {
  email: String!
  ideaId: ID!
}

"""UUID Field Attributes"""
type SystemUUIDFieldTypeAttributes {
  fieldSize: Int
}

type SystemUserBillingConfigurationResponse {
  availablePlans: [SystemBillingPlanBaseInfo!]!
  isCancelSubscriptionAvailable: Boolean! @deprecated(reason: "Flag is deprecated")
  isFreePlanAvailable: Boolean! @deprecated(reason: "Flag is deprecated")
}

"""User Invitation Details"""
type SystemUserInvitationDetails {
  accepted: Boolean
  acceptedOn: DateTime
  apiHost: String
  email: String
  firstName: String
  id: String
  invitedBy: SystemInvitedByName
  isRegistered: Boolean
  lastName: String
  resentOn: DateTime
}

"""User Invitation List"""
type SystemUserInvitationList {
  count: Int
  items: [SystemUserInvitationDetails]
}

"""User Type"""
enum SystemUserType {
  Agency
  Corporation
  MyOwn
  Team
}

"""View Attributes"""
type SystemViewAttributes {
  query: String
}

"""View Create Input"""
input SystemViewCreateInput {
  description: String
  displayName: String
  name: String!
  query: String!
}

"""Dry Run Response for previewing SQL Views"""
type SystemViewDryRunOutput {
  count: Int
  items: JSON
  timeMs: Int
}

"""View Update Input"""
input SystemViewUpdateInput {
  description: String
  displayName: String
  id: ID!
  name: String
  query: String
}

"""WorkspaceCreateMutationInput"""
input SystemWorkspaceCreateMutationInput {
  authType: String
  description: String
  howStart: String
  image: GraphQLCreateFileItemInput
  kind: SystemWorkspaceKind
  name: String!
  organizationId: ID
  profileId: String
  projectId: ID
}

type SystemWorkspaceCreateResponse {
  description: String
  id: ID
  kind: String
  name: String
}

"""WorkspaceDeleteMutationInput"""
input SystemWorkspaceDeleteMutationInput {
  workspaceId: ID!
}

type SystemWorkspaceImage {
  downloadUrl: String
  id: String
}

type SystemWorkspaceItem {
  apiHost: String
  createdAt: DateTime
  description: String
  id: ID!
  image: SystemWorkspaceImage
  is8BaseAuthEnabled: Boolean
  isCiCdEnabled: Boolean
  isOwner: Boolean!
  kind: String
  lastAccess: DateTime
  lastDeployABInfo: SystemDeploymentABItemResponse
  name: String!
  nextPlan: SystemBillingNextPlanResponse
  organization: SystemOrganizationBaseItem
  owner: SystemMemberAccountInfo
  plan: SystemBillingCurrentPlanResponse
  project: SystemProjectItemWS
  region: String
  summaryABInfo: SystemFrontendUtilizationABResponse
  teamMemberCount: Int
  webSocket: String
}

"""Workspace Kind"""
enum SystemWorkspaceKind {
  frontend
  general
}

"""SystemWorkspaceListResponse output"""
type SystemWorkspaceListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [SystemWorkspaceItem!]!
}

enum SystemWorkspaceStatus {
  active
  blocked
  canceled
  canceling
  pending
  suspended
}

"""WorkspaceUpdateMutationInput"""
input SystemWorkspaceUpdateMutationInput {
  description: String
  id: ID!
  image: GraphQLCreateFileItemInput
  name: String
}

type SystemWorkspaceUpdateResponse {
  description: String
  id: ID
  image: GraphQLFileItemResponse
  name: String
}

"""Table"""
type Table {
  application: Application
  attributes: TableAttributes
  dataFeatures: TableDataFeatures!
  description: String
  displayName: String
  fields: [TableField!]
  fieldsForIndexing: [TableField]
  id: ID!
  indexes: [TableIndex!]
  isSystem: Boolean!
  name: String!
  origin: SchemaOrigin!
  schemaFeatures: TableSchemaFeatures!
}

"""Table Attributes"""
union TableAttributes = ViewAttributes

"""Table Create Input"""
input TableCreateInput {
  applicationId: String
  description: String
  displayName: String
  name: String!
}

"""Table Data Features"""
type TableDataFeatures {
  create: Boolean!
  delete: Boolean!
  update: Boolean!
}

"""Table Delete Input"""
input TableDeleteInput {
  id: ID!
}

"""TableField"""
type TableField {
  computedMode: ComputedFieldMode
  dataFeatures: FieldDataFeatures!
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: FieldType!
  fieldTypeAttributes: FieldTypeAttributes
  id: ID!
  isList: Boolean!
  isMeta: Boolean!
  isRequired: Boolean!
  isSystem: Boolean!
  isUnique: Boolean
  name: String!
  origin: SchemaOrigin!
  relation: Relation
  schemaFeatures: FieldSchemaFeatures!
  table: Table!
}

"""Table Field Create Input"""
input TableFieldCreateInput {
  computedMode: ComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: FieldType!
  fieldTypeAttributes: FieldTypeAttributesInput
  force: Boolean
  initialValue: String
  isList: Boolean!
  isRequired: Boolean!
  isUnique: Boolean
  name: String!
  position: Int
  relation: RelationCreateInput
  tableId: ID!
}

"""Table Field Delete Input"""
input TableFieldDeleteInput {
  id: ID!
}

"""Table Field Position Update Input"""
input TableFieldPositionUpdateInput {
  id: ID!
  newPosition: Int!
}

"""Table Field Update Input"""
input TableFieldUpdateInput {
  computedMode: ComputedFieldMode
  defaultValue: String
  description: String
  displayName: String
  expression: String
  fieldType: FieldType
  fieldTypeAttributes: FieldTypeAttributesInput
  force: Boolean
  id: ID!
  initialValue: String
  isList: Boolean
  isRequired: Boolean
  isUnique: Boolean
  name: String
  position: Int
  relation: RelationUpdateInput
}

"""Table Index"""
type TableIndex {
  columns: [TableIndexColumn!]
  id: ID!
  isSystem: Boolean!
  name: String
  table: Table!
  type: String!
}

"""Table Index Column"""
type TableIndexColumn {
  name: String!
}

"""Table Index Column Input"""
input TableIndexColumnInput {
  name: String!
}

enum TableIndexType {
  INDEX
  UNIQUE
}

"""Table List Application Filter"""
input TableListApplicationFilter {
  id: String
  name: String
}

"""Table List Filter"""
input TableListFilter {
  applications: [TableListApplicationFilter]
  onlyUserTables: Boolean
  tableNames: [String]
}

"""Table List Response"""
type TableListResponse {
  count: Int
  items: [Table]
}

"""Table Schema Create Features"""
type TableSchemaCreateFeatures {
  DATE: Boolean!
  FILE: Boolean!
  GEO: Boolean!
  ID: Boolean!
  JSON: Boolean!
  MISSING_RELATION: Boolean!
  NUMBER: Boolean!
  ONE_WAY_RELATION: Boolean!
  RELATION: Boolean!
  SMART: Boolean!
  SWITCH: Boolean!
  TEXT: Boolean!
  UUID: Boolean!
}

"""Table Schema Features"""
type TableSchemaFeatures {
  computedFields: Boolean!
  create: TableSchemaCreateFeatures!
  update: TableSchemaMetaFieldFeatures
}

"""Table Schema Meta Field Features"""
type TableSchemaMetaFieldFeatures {
  displayName: Boolean!
  name: Boolean!
}

"""Table Update Input"""
input TableUpdateInput {
  description: String
  displayName: String
  id: ID!
  name: String
}

"""Text Field Attributes"""
type TextFieldTypeAttributes {
  fieldSize: Int
  format: String!
}

"""Text Type Format Enum"""
enum TextTypeFormatEnum {
  EIN
  EMAIL
  HTML
  MARKDOWN
  NAME
  UNFORMATTED
}

"""
A time string at UTC, such as `16:15:30Z`, compliant with the `full-time` format outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Time

input TrimFunctionArguments {
  mode: StringTrimMode
  str: String!
}

"""UUID Field Attributes"""
type UUIDFieldTypeAttributes {
  fieldSize: Int
}

input UpdateByFilterBooleanSwitchInput {
  invert: Boolean
  set: Boolean
}

input UpdateByFilterIntInput {
  add: Int
  div: Int
  mod: Int
  mult: Int
  pow: Int
  prec: Int
  set: Int
  sqrt: Boolean
  sub: Int
}

input UpdateByFilterJsonInput {
  set: JSON
}

input UpdateByFilterListStringInput {
  insert: UpdateByFilterListStringInsertOperationInput
  push: [String]
  remove: [Int]
  removeValue: String
  set: [String]
  swap: [Int]
  unshift: [String]
}

input UpdateByFilterListStringInsertOperationInput {
  start: Int!
  values: [String!]!
}

input UpdateByFilterStringInput {
  postfix: String
  prefix: String
  set: String
}

input UpdateByFilterStringSwitchInput {
  set: String
}

"""UpdatedFieldsFilter"""
input UpdatedFieldsFilter {
  contains: [String]
  every: [String]
}

type UploadcareSignInfoResponse {
  expire: String!
  publicKey: String!
  signature: String!
}

type User {
  LibraryStaff: LibraryStaff
  Notifications: Notification
  Patrons: Patron
  _description: String
  avatar: File
  createdAt: DateTime
  createdBy: User
  deletedAt: Int
  email: String
  firstName: String
  id: ID
  is8base: Boolean
  lastName: String
  origin: String
  permissions(filter: PermissionInputFilter): UserPermissionList
  roles(after: String, before: String, filter: RoleFilter, first: Int, groupBy: RoleGroupBy, last: Int, orderBy: [RoleOrderBy], skip: Int, sort: [RoleSort!]): RoleListResponse
  status: String
  timezone: String
  updatedAt: DateTime
}

type UserBillingConfigurationResponse {
  availablePlans: [BillingPlanBaseInfo!]!
  isCancelSubscriptionAvailable: Boolean! @deprecated(reason: "Flag is deprecated")
  isFreePlanAvailable: Boolean! @deprecated(reason: "Flag is deprecated")
}

"""Users create input"""
input UserCreateInput {
  LibraryStaff: UsersLibraryStaffRelationInput
  Notifications: UsersNotificationsRelationInput
  Patrons: UsersPatronsRelationInput
  avatar: UsersAvatarRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesRelationInput
  status: String = "inactive"
  timezone: String
}

"""Users create many input"""
input UserCreateManyInput {
  LibraryStaff: UsersLibraryStaffManyRelationInput!
  Notifications: UsersNotificationsManyRelationInput!
  Patrons: UsersPatronsManyRelationInput!
  avatar: UsersAvatarManyRelationInput
  email: String!
  firstName: String
  lastName: String
  roles: UsersRolesManyRelationInput
  status: String = "inactive"
  timezone: String
}

"""Users delete input"""
input UserDeleteInput {
  force: Boolean
  id: ID
}

"""UserFieldsPermissions create input"""
input UserFieldsPermissions {
  createdAt: Boolean
  email: Boolean
  firstName: Boolean
  is8base: Boolean
  lastName: Boolean
  origin: Boolean
  status: Boolean
  timezone: Boolean
  updatedAt: Boolean
}

input UserFilter {
  AND: [UserFilter!]
  LibraryStaff: LibraryStaffFilter
  Notifications: NotificationFilter
  OR: [UserFilter!]
  Patrons: PatronFilter
  _fullText: String
  avatar: FileFilter
  createdAt: DateTimePredicate
  createdBy: UserFilter
  deletedAt: IntPredicate
  email: StringPredicate
  firstName: StringPredicate
  id: IDPredicate
  is8base: BoolPredicate
  is_self: Boolean
  lastName: StringPredicate
  not_self: Boolean
  origin: StringPredicate
  roles: RoleRelationFilter
  status: StringPredicate
  timezone: StringPredicate
  updatedAt: DateTimePredicate
}

input UserGroupBy {
  first: Int
  having: Having
  last: Int
  query: UserGroupByQuery!
  skip: Int
  sort: [GroupBySort!]
}

input UserGroupByQuery {
  LibraryStaff: LibraryStaffGroupByQuery
  Notifications: NotificationGroupByQuery
  Patrons: PatronGroupByQuery
  _group: [GroupIdentifiersGroupByField!]
  avatar: FileGroupByQuery
  createdAt: [GroupByField!]
  createdBy: UserGroupByQuery
  email: [GroupByField!]
  firstName: [GroupByField!]
  id: [GroupByField!]
  is8base: [GroupByField!]
  lastName: [GroupByField!]
  origin: [GroupByField!]
  roles: RoleGroupByQuery
  status: [GroupByField!]
  timezone: [GroupByField!]
  updatedAt: [GroupByField!]
}

"""User Invitation Details"""
type UserInvitationDetails {
  accepted: Boolean
  acceptedOn: DateTime
  apiHost: String
  email: String
  firstName: String
  id: String
  invitedBy: InvitedByName
  isRegistered: Boolean
  lastName: String
  resentOn: DateTime
}

"""User Invitation List"""
type UserInvitationList {
  count: Int
  items: [UserInvitationDetails]
}

input UserKeyFilter {
  email: String
  id: ID
}

"""UserListResponse output"""
type UserListResponse {
  """List items count"""
  count: Int!

  """Aggregated items"""
  groups: [GroupByResponse!]!

  """List items"""
  items: [User!]!
}

"""UserLoginInput"""
input UserLoginInput {
  authProfileId: ID
  email: String!
  fromInvitation: String
  password: String!
}

"""UserManyResponse output"""
type UserManyResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [User!]!
}

"""No longer supported. Use `sort` instead."""
enum UserOrderBy {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  is8base_ASC
  is8base_DESC
  isOwner_ASC
  isOwner_DESC
  lastName_ASC
  lastName_DESC
  origin_ASC
  origin_DESC
  status_ASC
  status_DESC
  timezone_ASC
  timezone_DESC
  updatedAt_ASC
  updatedAt_DESC
}

"""Users subscription payload"""
type UserPayload {
  mutation: MutationType!
  node: User
  previousValues: User
  updatedFields: [String]
}

"""User Permission"""
type UserPermission {
  permission: JSON
  resource: String
  resourceType: String
}

"""User Permission List"""
type UserPermissionList {
  count: Int!
  items: [UserPermission!]
}

input UserRelationFilter {
  every: UserFilter
  none: UserFilter
  some: UserFilter
}

input UserSort {
  LibraryStaff: LibraryStaffSort
  Notifications: NotificationSort
  Patrons: PatronSort
  avatar: FileSort
  createdAt: SortOrder
  createdBy: UserSort
  deletedAt: SortOrder
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  is8base: SortOrder
  lastName: SortOrder
  origin: SortOrder
  status: SortOrder
  timezone: SortOrder
  updatedAt: SortOrder
}

"""Users subscription filter"""
input UserSubscriptionFilter {
  mutation_in: [MutationType]
  node: UserFilter
  updatedFields: UpdatedFieldsFilter
}

"""Users update input"""
input UserUpdateByFilterInput {
  email: [UpdateByFilterStringInput]
  firstName: [UpdateByFilterStringInput]
  is8base: [UpdateByFilterBooleanSwitchInput]
  isOwner: [UpdateByFilterBooleanSwitchInput]
  lastName: [UpdateByFilterStringInput]
  origin: [UpdateByFilterStringSwitchInput]
  status: [UpdateByFilterStringSwitchInput]
  timezone: [UpdateByFilterStringInput]
}

"""Users update input"""
input UserUpdateInput {
  LibraryStaff: UsersLibraryStaffUpdateRelationInput
  Notifications: UsersNotificationsUpdateRelationInput
  Patrons: UsersPatronsUpdateRelationInput
  avatar: UsersAvatarUpdateRelationInput
  email: String
  firstName: String
  id: ID
  lastName: String
  roles: UsersRolesUpdateRelationInput
  status: String
  timezone: String
}

input User_PermissionFilter {
  AND: [User_PermissionFilter!]
  LibraryStaff: LibraryStaff_PermissionFilter
  Notifications: Notification_PermissionFilter
  OR: [User_PermissionFilter!]
  Patrons: Patron_PermissionFilter
  _fullText: String
  avatar: File_PermissionFilter
  createdAt: DateTimePredicate
  createdBy: User_PermissionFilter
  deletedAt: IntPredicate
  email: StringPredicate
  firstName: StringPredicate
  id: IDPredicate
  is8base: BoolPredicate
  is_self: Boolean
  lastName: StringPredicate
  not_self: Boolean
  origin: StringPredicate
  roles: Role_PermissionRelationFilter
  status: StringPredicate
  timezone: StringPredicate
  updatedAt: DateTimePredicate
}

input User_PermissionRelationFilter {
  every: User_PermissionFilter
  none: User_PermissionFilter
  some: User_PermissionFilter
}

"""LibraryStaff create input from user_id"""
input User_id_LibraryStaffCreateInput {
  position: String
  user_id: LibraryStaffUser_idRelationInput
}

"""LibraryStaff update input from user_id"""
input User_id_LibraryStaffUpdateInput {
  position: String
  user_id: LibraryStaffUser_idUpdateRelationInput
}

"""Patrons create input from user_id"""
input User_id_PatronCreateInput {
  Holds: PatronsHoldsRelationInput!
  Loans: PatronsLoansRelationInput!
  Recommendations: PatronsRecommendationsRelationInput!
  Reviews: PatronsReviewsRelationInput!
  borrowing_history: JSON!
  membership_status: String
  user_id: PatronsUser_idRelationInput
}

"""Patrons update input from user_id"""
input User_id_PatronUpdateInput {
  Holds: PatronsHoldsUpdateRelationInput
  Loans: PatronsLoansUpdateRelationInput
  Recommendations: PatronsRecommendationsUpdateRelationInput
  Reviews: PatronsReviewsUpdateRelationInput
  borrowing_history: JSON
  membership_status: String
  user_id: PatronsUser_idUpdateRelationInput
}

"""Users relation input"""
input UsersAvatarManyRelationInput {
  connect: FileKeyFilter
}

"""Users relation input"""
input UsersAvatarRelationInput {
  connect: FileKeyFilter
  create: Users_avatar_FileCreateInput
}

"""Users relation input"""
input UsersAvatarUpdateRelationInput {
  connect: FileKeyFilter
  create: Users_avatar_FileCreateInput
  disconnect: FileKeyFilter
  reconnect: FileKeyFilter
  update: Users_avatar_FileUpdateInput
}

"""Users relation input"""
input UsersLibraryStaffManyRelationInput {
  connect: LibraryStaffKeyFilter
}

"""Users relation input"""
input UsersLibraryStaffRelationInput {
  connect: LibraryStaffKeyFilter
  create: User_id_LibraryStaffCreateInput
}

"""Users relation input"""
input UsersLibraryStaffUpdateRelationInput {
  connect: LibraryStaffKeyFilter
  create: User_id_LibraryStaffCreateInput
  disconnect: LibraryStaffKeyFilter
  reconnect: LibraryStaffKeyFilter
  update: User_id_LibraryStaffUpdateInput
}

"""Users relation input"""
input UsersNotificationsManyRelationInput {
  connect: NotificationKeyFilter
}

"""Users relation input"""
input UsersNotificationsRelationInput {
  connect: NotificationKeyFilter
  create: Recipient_id_NotificationCreateInput
}

"""Users relation input"""
input UsersNotificationsUpdateRelationInput {
  connect: NotificationKeyFilter
  create: Recipient_id_NotificationCreateInput
  disconnect: NotificationKeyFilter
  reconnect: NotificationKeyFilter
  update: Recipient_id_NotificationUpdateInput
}

"""Users relation input"""
input UsersPatronsManyRelationInput {
  connect: PatronKeyFilter
}

"""Users relation input"""
input UsersPatronsRelationInput {
  connect: PatronKeyFilter
  create: User_id_PatronCreateInput
}

"""Users relation input"""
input UsersPatronsUpdateRelationInput {
  connect: PatronKeyFilter
  create: User_id_PatronCreateInput
  disconnect: PatronKeyFilter
  reconnect: PatronKeyFilter
  update: User_id_PatronUpdateInput
}

"""Users relation input"""
input UsersRolesManyRelationInput {
  connect: [RoleKeyFilter!]
}

"""Users relation input"""
input UsersRolesRelationInput {
  connect: [RoleKeyFilter!]
  create: [Users_RoleCreateInput]
}

"""Users relation input"""
input UsersRolesUpdateRelationInput {
  connect: [RoleKeyFilter!]
  create: [Users_RoleCreateInput]
  disconnect: [RoleKeyFilter!]
  reconnect: [RoleKeyFilter!]
  update: [Users_RoleUpdateInput]
}

"""Roles create input from users"""
input Users_RoleCreateInput {
  apiTokens: RolesApiTokensRelationInput
  authenticationProfiles: RolesAuthenticationProfilesRelationInput
  description: String
  name: String!
  permissions: PermissionsInput
  users: RolesUsersRelationInput
}

"""Roles update input from users"""
input Users_RoleUpdateInput {
  data: RoleUpdateInput!
  filter: RoleKeyFilter
}

"""Files create input from users_avatar"""
input Users_avatar_FileCreateInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean = false
  users_avatar: FilesUsers_avatarRelationInput
}

"""Files update input from users_avatar"""
input Users_avatar_FileUpdateInput {
  fileId: String
  filename: String
  meta: JSON
  mods: JSON
  public: Boolean
  users_avatar: FilesUsers_avatarUpdateRelationInput
}

"""VerificationEmailResendInput"""
input VerificationEmailResendInput {
  email: String!
}

"""View Attributes"""
type ViewAttributes {
  query: String
}

"""View Create Input"""
input ViewCreateInput {
  description: String
  displayName: String
  name: String!
  query: String!
}

"""Dry Run Response for previewing SQL Views"""
type ViewDryRunOutput {
  count: Int
  items: JSON
  timeMs: Int
}

"""View Update Input"""
input ViewUpdateInput {
  description: String
  displayName: String
  id: ID!
  name: String
  query: String
}

"""WorkspaceCreateMutationInput"""
input WorkspaceCreateMutationInput {
  authType: String
  description: String
  howStart: String
  image: GraphQLCreateFileItemInput
  kind: WorkspaceKind
  name: String!
  organizationId: ID
  profileId: String
  projectId: ID
}

type WorkspaceCreateResponse {
  description: String
  id: ID
  kind: String
  name: String
}

"""WorkspaceDeleteMutationInput"""
input WorkspaceDeleteMutationInput {
  workspaceId: ID!
}

type WorkspaceImage {
  downloadUrl: String
  id: String
}

"""LoginResponseWorkspace name and id"""
type WorkspaceInfo {
  name: String
  workspace: ID
}

type WorkspaceItem {
  apiHost: String
  createdAt: DateTime
  description: String
  id: ID!
  image: WorkspaceImage
  is8BaseAuthEnabled: Boolean
  isCiCdEnabled: Boolean
  isOwner: Boolean!
  kind: String
  lastAccess: DateTime
  lastDeployABInfo: DeploymentABItemResponse
  name: String!
  nextPlan: BillingNextPlanResponse
  organization: SystemOrganizationBaseItem
  owner: SystemMemberAccountInfo
  plan: BillingCurrentPlanResponse
  project: ProjectItemWS
  region: String
  summaryABInfo: FrontendUtilizationABResponse
  teamMemberCount: Int
  webSocket: String
}

"""Workspace Kind"""
enum WorkspaceKind {
  frontend
  general
}

"""WorkspaceListResponse output"""
type WorkspaceListResponse {
  """List items count"""
  count: Int!

  """List items"""
  items: [WorkspaceItem!]!
}

enum WorkspaceStatus {
  active
  blocked
  canceled
  canceling
  pending
  suspended
}

"""WorkspaceUpdateMutationInput"""
input WorkspaceUpdateMutationInput {
  description: String
  id: ID!
  image: GraphQLCreateFileItemInput
  name: String
}

type WorkspaceUpdateResponse {
  description: String
  id: ID
  image: GraphQLFileItemResponse
  name: String
}

type isAllowedCallbackURLQueryResponse {
  isEnabled: Boolean!
}